(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var a,c,o=e[0],s=e[1],p=e[2],d=0,h=[];d<o.length;d++)c=o[d],Object.prototype.hasOwnProperty.call(r,c)&&r[c]&&h.push(r[c][0]),r[c]=0;for(a in s)Object.prototype.hasOwnProperty.call(s,a)&&(n[a]=s[a]);for(l&&l(e);h.length;)h.shift()();return i.push.apply(i,p||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],a=!0,o=1;o<t.length;o++){var s=t[o];0!==r[s]&&(a=!1)}a&&(i.splice(e--,1),n=c(c.s=t[0]))}return n}var a={},r={1:0},i=[];function c(e){if(a[e])return a[e].exports;var t=a[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.e=function(n){var e=[],t=r[n];if(0!==t)if(t)e.push(t[2]);else{var a=new Promise((function(e,a){t=r[n]=[e,a]}));e.push(t[2]=a);var i,o=document.createElement("script");o.charset="utf-8",o.timeout=120,c.nc&&o.setAttribute("nonce",c.nc),o.src=function(n){return c.p+"assets/js/"+({}[n]||n)+"."+{2:"b726511c",3:"28e29ac1",4:"b6deef6d",5:"afdb9407",6:"012776eb",7:"6720de6c",8:"712d0a43",9:"b9506cc5",10:"c79eaffd",11:"a42be934",12:"35440532",13:"78563c9d",14:"87406737",15:"1edde6f8",16:"523a18e6",17:"233ef91c",18:"6f048ffb",19:"e2bc1ff8",20:"61121f78",21:"7004dcf1",22:"7e2b3c3c",23:"a6ddc679",24:"ec6819e7",25:"cd11caea",26:"f40c39f9",27:"1dd169bb",28:"c6ff115b",29:"ab3823ef",30:"70a6c0c2",31:"1529c7ca",32:"6641cb47",33:"0d0a21f0",34:"a3822537",35:"08d8f593",36:"7182af90",37:"12010750",38:"4ff734c8",39:"f6847182",40:"c71fce60",41:"f92d8f44",42:"5d3d9e7c",43:"524e4303",44:"91488ec6",45:"c982b677",46:"407a6bdf",47:"168e940e",48:"b8178060",49:"99a6d841",50:"dfa7b133",51:"9f334865",52:"5c8f0d0f",53:"57c9593d",54:"39bb03ef",55:"63fd7d22",56:"0a66f815",57:"16f29e46",58:"7cc155b8",59:"96b48db9",60:"0d9e0107",61:"04b185c5",62:"92fec996",63:"3b779776",64:"0d61732a",65:"3eff9cca",66:"796002ce",67:"4af2bce2",68:"4fefe1b3",69:"b0f04bad",70:"6c5eaceb",71:"a8f84d99",72:"b784b6cc",73:"96ca09d1",74:"97dfc000",75:"8775d0c5",76:"2741b0cf",77:"c3079b0d",78:"ea831db6",79:"2013280f",80:"0f45fe78",81:"99f67d9f",82:"ab8bb2e4",83:"ffd99010",84:"be885e66",85:"44c86c6f",86:"d5ab78d3",87:"3cc7d4ea",88:"8576f9df",89:"8a2baf45",90:"051a3abf",91:"a84f0a67",92:"06c9fa72",93:"f5c36c9c",94:"93c554dd",95:"785a563e",96:"0898d166",97:"9e23c9fd",98:"8e8fc8aa",99:"2375bb15",100:"2fb99df5",101:"c735acff",102:"2e31d0ce",103:"04df4b9f",104:"501fb678",105:"9fe5b447",106:"feb3f79e",107:"e98b7b9c",108:"6a9ee2cb",109:"3593e736",110:"4bad521e",111:"a881ad38",112:"be0c6487",113:"84325724",114:"6b7c9e13",115:"f14f06d9",116:"b8257b2c",117:"9de050a6",118:"14c04a7d",119:"e2bca4ec",120:"e2aec2a7",121:"c04c9b0a",122:"fec9b81b",123:"6b2385e8",124:"f73054b3",125:"ffb9b766",126:"2ef6efec",127:"59264f01",128:"424ff394",129:"2bdf7412",130:"dce80b89",131:"b710423c",132:"6d1455f6",133:"8faf85e2",134:"0aa752e6",135:"a565cb1f",136:"23abcbb6",137:"b48475a9",138:"c15c9dbb",139:"99f5816d",140:"aef8a0ca",141:"d916cd82"}[n]+".js"}(n);var s=new Error;i=function(e){o.onerror=o.onload=null,clearTimeout(p);var t=r[n];if(0!==t){if(t){var a=e&&("load"===e.type?"missing":e.type),i=e&&e.target&&e.target.src;s.message="Loading chunk "+n+" failed.\n("+a+": "+i+")",s.name="ChunkLoadError",s.type=a,s.request=i,t[1](s)}r[n]=void 0}};var p=setTimeout((function(){i({type:"timeout",target:o})}),12e4);o.onerror=o.onload=i,document.head.appendChild(o)}return Promise.all(e)},c.m=n,c.c=a,c.d=function(n,e,t){c.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},c.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},c.t=function(n,e){if(1&e&&(n=c(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(c.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)c.d(t,a,function(e){return n[e]}.bind(null,a));return t},c.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return c.d(e,"a",e),e},c.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},c.p="/",c.oe=function(n){throw console.error(n),n};var o=window.webpackJsonp=window.webpackJsonp||[],s=o.push.bind(o);o.push=e,o=o.slice();for(var p=0;p<o.length;p++)e(o[p]);var l=s;i.push([130,0]),t()}([function(n,e,t){"use strict";var a=t(11),r=String,i=TypeError;n.exports=function(n){if(a(n))return n;throw new i(r(n)+" is not an object")}},function(n,e,t){"use strict";var a=function(n){return n&&n.Math===Math&&n};n.exports=a("object"==typeof globalThis&&globalThis)||a("object"==typeof window&&window)||a("object"==typeof self&&self)||a("object"==typeof global&&global)||a("object"==typeof this&&this)||function(){return this}()||Function("return this")()},function(n,e,t){"use strict";n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){"use strict";var a="object"==typeof document&&document.all;n.exports=void 0===a&&void 0!==a?function(n){return"function"==typeof n||n===a}:function(n){return"function"==typeof n}},function(n,e,t){"use strict";var a=t(9),r=t(1),i=t(145),c=t(0),o=t(3),s=t(87),p=t(126),l=t(147),d=t(2),h=t(12),u=t(17),f=t(88).IteratorPrototype,m=t(6),b=t(26),g=u("toStringTag"),y=TypeError,v=r.Iterator,k=b||!o(v)||v.prototype!==f||!d((function(){v({})})),_=function(){if(i(this,f),s(this)===f)throw new y("Abstract class Iterator not directly constructable")},x=function(n,e){m?p(f,n,{configurable:!0,get:function(){return e},set:function(e){if(c(this),this===f)throw new y("You can't redefine this property");h(this,n)?this[n]=e:l(this,n,e)}}):f[n]=e};h(f,g)||x(g,"Iterator"),!k&&h(f,"constructor")&&f.constructor!==Object||x("constructor",_),_.prototype=f,a({global:!0,constructor:!0,forced:k},{Iterator:_})},function(n,e,t){"use strict";var a=t(35),r=Function.prototype,i=r.call,c=a&&r.bind.bind(i,i);n.exports=a?c:function(n){return function(){return i.apply(n,arguments)}}},function(n,e,t){"use strict";var a=t(2);n.exports=!a((function(){return 7!==Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){"use strict";var a=t(35),r=Function.prototype.call;n.exports=a?r.bind(r):function(){return r.apply(r,arguments)}},function(n,e,t){"use strict";var a=t(3),r=t(50),i=TypeError;n.exports=function(n){if(a(n))return n;throw new i(r(n)+" is not a function")}},function(n,e,t){"use strict";var a=t(1),r=t(70).f,i=t(27),c=t(47),o=t(52),s=t(84),p=t(144);n.exports=function(n,e){var t,l,d,h,u,f=n.target,m=n.global,b=n.stat;if(t=m?a:b?a[f]||o(f,{}):a[f]&&a[f].prototype)for(l in e){if(h=e[l],d=n.dontCallGetSet?(u=r(t,l))&&u.value:t[l],!p(m?l:f+(b?".":"#")+l,n.forced)&&void 0!==d){if(typeof h==typeof d)continue;s(h,d)}(n.sham||d&&d.sham)&&i(h,"sham",!0),c(t,l,h,n)}}},function(n,e,t){"use strict";var a=t(7),r=t(0),i=t(40);n.exports=function(n,e,t){var c,o;r(n);try{if(!(c=i(n,"return"))){if("throw"===e)throw t;return t}c=a(c,n)}catch(n){o=!0,c=n}if("throw"===e)throw t;if(o)throw c;return r(c),t}},function(n,e,t){"use strict";var a=t(3);n.exports=function(n){return"object"==typeof n?null!==n:a(n)}},function(n,e,t){"use strict";var a=t(5),r=t(32),i=a({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return i(r(n),e)}},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var a=t(98),r="object"==typeof self&&self&&self.Object===Object&&self,i=a||r||Function("return this")();n.exports=i},function(n,e,t){"use strict";function a(n,e,t,a,r,i,c,o){var s,p="function"==typeof n?n.options:n;if(e&&(p.render=e,p.staticRenderFns=t,p._compiled=!0),a&&(p.functional=!0),i&&(p._scopeId="data-v-"+i),c?(s=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),r&&r.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(c)},p._ssrRegister=s):r&&(s=o?function(){r.call(this,(p.functional?this.parent:this).$root.$options.shadowRoot)}:r),s)if(p.functional){p._injectStyles=s;var l=p.render;p.render=function(n,e){return s.call(e),l(n,e)}}else{var d=p.beforeCreate;p.beforeCreate=d?[].concat(d,s):[s]}return{exports:n,options:p}}t.d(e,"a",(function(){return a}))},function(n,e,t){"use strict";var a=t(9),r=t(7),i=t(8),c=t(0),o=t(23),s=t(89),p=t(90),l=t(26),d=t(10),h=t(91),u=t(24),f=!l&&!h("filter",(function(){})),m=!l&&!f&&u("filter",TypeError),b=l||f||m,g=s((function(){for(var n,e,t=this.iterator,a=this.predicate,i=this.next;;){if(n=c(r(i,t)),this.done=!!n.done)return;if(e=n.value,p(t,a,[e,this.counter++],!0))return e}}));a({target:"Iterator",proto:!0,real:!0,forced:b},{filter:function(n){c(this);try{i(n)}catch(n){d(this,"throw",n)}return m?r(m,this,n):new g(o(this),{predicate:n})}})},function(n,e,t){"use strict";var a=t(1),r=t(77),i=t(12),c=t(78),o=t(74),s=t(73),p=a.Symbol,l=r("wks"),d=s?p.for||p:p&&p.withoutSetter||c;n.exports=function(n){return i(l,n)||(l[n]=o&&i(p,n)?p[n]:d("Symbol."+n)),l[n]}},function(n,e,t){"use strict";var a=t(9),r=t(7),i=t(34),c=t(8),o=t(0),s=t(23),p=t(10),l=t(24)("forEach",TypeError);a({target:"Iterator",proto:!0,real:!0,forced:l},{forEach:function(n){o(this);try{c(n)}catch(n){p(this,"throw",n)}if(l)return r(l,this,n);var e=s(this),t=0;i(e,(function(e){n(e,t++)}),{IS_RECORD:!0})}})},function(n,e,t){"use strict";var a=t(6),r=t(79),i=t(81),c=t(0),o=t(71),s=TypeError,p=Object.defineProperty,l=Object.getOwnPropertyDescriptor;e.f=a?i?function(n,e,t){if(c(n),e=o(e),c(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var a=l(n,e);a&&a.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:a.configurable,enumerable:"enumerable"in t?t.enumerable:a.enumerable,writable:!1})}return p(n,e,t)}:p:function(n,e,t){if(c(n),e=o(e),c(t),r)try{return p(n,e,t)}catch(n){}if("get"in t||"set"in t)throw new s("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var a=t(197),r=t(200);n.exports=function(n,e){var t=r(n,e);return a(t)?t:void 0}},function(n,e,t){"use strict";var a=t(9),r=t(7),i=t(8),c=t(0),o=t(23),s=t(89),p=t(90),l=t(10),d=t(91),h=t(24),u=t(26),f=!u&&!d("map",(function(){})),m=!u&&!f&&h("map",TypeError),b=u||f||m,g=s((function(){var n=this.iterator,e=c(r(this.next,n));if(!(this.done=!!e.done))return p(n,this.mapper,[e.value,this.counter++],!0)}));a({target:"Iterator",proto:!0,real:!0,forced:b},{map:function(n){c(this);try{i(n)}catch(n){l(this,"throw",n)}return m?r(m,this,n):new g(o(this),{mapper:n})}})},function(n,e,t){"use strict";t.d(e,"e",(function(){return a})),t.d(e,"b",(function(){return i})),t.d(e,"j",(function(){return c})),t.d(e,"g",(function(){return s})),t.d(e,"h",(function(){return p})),t.d(e,"i",(function(){return l})),t.d(e,"c",(function(){return d})),t.d(e,"f",(function(){return h})),t.d(e,"l",(function(){return u})),t.d(e,"m",(function(){return f})),t.d(e,"d",(function(){return b})),t.d(e,"k",(function(){return g})),t.d(e,"n",(function(){return y})),t.d(e,"a",(function(){return k}));t(28),t(4),t(16),t(18),t(21);const a=/#.*$/,r=/\.(md|html)$/,i=/\/$/,c=/^[a-z]+:/i;function o(n){return decodeURI(n).replace(a,"").replace(r,"")}function s(n){return c.test(n)}function p(n){return/^mailto:/.test(n)}function l(n){return/^tel:/.test(n)}function d(n){if(s(n))return n;if(!n)return"404";const e=n.match(a),t=e?e[0]:"",r=o(n);return i.test(r)?n:r+".html"+t}function h(n,e){const t=n.hash,r=function(n){const e=n&&n.match(a);if(e)return e[0]}(e);if(r&&t!==r)return!1;return o(n.path)===o(e)}function u(n,e,t){if(s(e))return{type:"external",path:e};t&&(e=function(n,e,t){const a=n.charAt(0);if("/"===a)return n;if("?"===a||"#"===a)return e+n;const r=e.split("/");t&&r[r.length-1]||r.pop();const i=n.replace(/^\//,"").split("/");for(let n=0;n<i.length;n++){const e=i[n];".."===e?r.pop():"."!==e&&r.push(e)}""!==r[0]&&r.unshift("");return r.join("/")}(e,t));const a=o(e);for(let e=0;e<n.length;e++)if(o(n[e].regularPath)===a)return Object.assign({},n[e],{type:"page",path:d(n[e].path)});return console.error(`[vuepress] No matching page found for sidebar item "${e}"`),{}}function f(n,e,t,a){const{pages:r,themeConfig:i}=t,c=a&&i.locales&&i.locales[a]||i;if("auto"===(n.frontmatter.sidebar||c.sidebar||i.sidebar))return m(n);const o=c.sidebar||i.sidebar;if(o){const{base:t,config:a}=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(const a in e)if(0===(t=n,/(\.html|\/)$/.test(t)?t:t+"/").indexOf(encodeURI(a)))return{base:a,config:e[a]};var t;return{}}(e,o);return"auto"===a?m(n):a?a.map(n=>function n(e,t,a,r=1){if("string"==typeof e)return u(t,e,a);if(Array.isArray(e))return Object.assign(u(t,e[0],a),{title:e[1]});{r>3&&console.error("[vuepress] detected a too deep nested sidebar group.");const i=e.children||[];return 0===i.length&&e.path?Object.assign(u(t,e.path,a),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:i.map(e=>n(e,t,a,r+1)),collapsable:!1!==e.collapsable}}}(n,r,t)):[]}return[]}function m(n){const e=b(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map(e=>({type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}))}]}function b(n){let e;return(n=n.map(n=>Object.assign({},n))).forEach(n=>{2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)}),n.filter(n=>2===n.level)}function g(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function y(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function v(n){let e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function k(n,e){return v(e)-v(n)}},function(n,e,t){"use strict";n.exports=function(n){return{iterator:n,next:n.next,done:!1}}},function(n,e,t){"use strict";var a=t(1);n.exports=function(n,e){var t=a.Iterator,r=t&&t.prototype,i=r&&r[n],c=!1;if(i)try{i.call({next:function(){return{done:!0}},return:function(){c=!0}},-1)}catch(n){n instanceof e||(c=!1)}if(!c)return i}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";n.exports=!1},function(n,e,t){"use strict";var a=t(6),r=t(19),i=t(36);n.exports=a?function(n,e,t){return r.f(n,e,i(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){"use strict";var a=t(9),r=t(32),i=t(33),c=t(176),o=t(178);a({target:"Array",proto:!0,arity:1,forced:t(2)((function(){return 4294967297!==[].push.call({length:4294967296},1)}))||!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(n){return n instanceof TypeError}}()},{push:function(n){var e=r(this),t=i(e),a=arguments.length;o(t+a);for(var s=0;s<a;s++)e[t]=arguments[s],t++;return c(e,t),t}})},function(n,e,t){var a=t(31),r=t(182),i=t(183),c=a?a.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":c&&c in Object(n)?r(n):i(n)}},function(n,e,t){"use strict";var a=t(5),r=a({}.toString),i=a("".slice);n.exports=function(n){return i(r(n),8,-1)}},function(n,e,t){var a=t(14).Symbol;n.exports=a},function(n,e,t){"use strict";var a=t(48),r=Object;n.exports=function(n){return r(a(n))}},function(n,e,t){"use strict";var a=t(142);n.exports=function(n){return a(n.length)}},function(n,e,t){"use strict";var a=t(127),r=t(7),i=t(0),c=t(50),o=t(160),s=t(33),p=t(39),l=t(161),d=t(93),h=t(10),u=TypeError,f=function(n,e){this.stopped=n,this.result=e},m=f.prototype;n.exports=function(n,e,t){var b,g,y,v,k,_,x,w=t&&t.that,A=!(!t||!t.AS_ENTRIES),E=!(!t||!t.IS_RECORD),C=!(!t||!t.IS_ITERATOR),S=!(!t||!t.INTERRUPTED),j=a(e,w),q=function(n){return b&&h(b,"normal"),new f(!0,n)},P=function(n){return A?(i(n),S?j(n[0],n[1],q):j(n[0],n[1])):S?j(n,q):j(n)};if(E)b=n.iterator;else if(C)b=n;else{if(!(g=d(n)))throw new u(c(n)+" is not iterable");if(o(g)){for(y=0,v=s(n);v>y;y++)if((k=P(n[y]))&&p(m,k))return k;return new f(!1)}b=l(n,g)}for(_=E?n.next:b.next;!(x=r(_,b)).done;){try{k=P(x.value)}catch(n){h(b,"throw",n)}if("object"==typeof k&&k&&p(m,k))return k}return new f(!1)}},function(n,e,t){"use strict";var a=t(2);n.exports=!a((function(){var n=function(){}.bind();return"function"!=typeof n||n.hasOwnProperty("prototype")}))},function(n,e,t){"use strict";n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e,t){"use strict";var a=t(66),r=t(48);n.exports=function(n){return a(r(n))}},function(n,e,t){"use strict";var a=t(1),r=t(3),i=function(n){return r(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?i(a[n]):a[n]&&a[n][e]}},function(n,e,t){"use strict";var a=t(5);n.exports=a({}.isPrototypeOf)},function(n,e,t){"use strict";var a=t(8),r=t(49);n.exports=function(n,e){var t=n[e];return r(t)?void 0:a(t)}},function(n,e,t){var a=t(187),r=t(188),i=t(189),c=t(190),o=t(191);function s(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}s.prototype.clear=a,s.prototype.delete=r,s.prototype.get=i,s.prototype.has=c,s.prototype.set=o,n.exports=s},function(n,e,t){var a=t(100);n.exports=function(n,e){for(var t=n.length;t--;)if(a(n[t][0],e))return t;return-1}},function(n,e,t){var a=t(20)(Object,"create");n.exports=a},function(n,e,t){var a=t(209);n.exports=function(n,e){var t=n.__data__;return a(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var a=t(63);n.exports=function(n){if("string"==typeof n||a(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var a,r;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(r="function"==typeof(a=function(){var n,e,t={version:"0.2.0"},a=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function r(n,e,t){return n<e?e:n>t?t:n}function i(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(a[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=r(n,a.minimum,1),t.status=1===n?null:n;var s=t.render(!e),p=s.querySelector(a.barSelector),l=a.speed,d=a.easing;return s.offsetWidth,c((function(e){""===a.positionUsing&&(a.positionUsing=t.getPositioningCSS()),o(p,function(n,e,t){var r;return(r="translate3d"===a.positionUsing?{transform:"translate3d("+i(n)+"%,0,0)"}:"translate"===a.positionUsing?{transform:"translate("+i(n)+"%,0)"}:{"margin-left":i(n)+"%"}).transition="all "+e+"ms "+t,r}(n,l,d)),1===n?(o(s,{transition:"none",opacity:1}),s.offsetWidth,setTimeout((function(){o(s,{transition:"all "+l+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),l)}),l)):setTimeout(e,l)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),a.trickleSpeed)};return a.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*r(Math.random()*e,.1,.95)),e=r(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*a.trickleRate)},n=0,e=0,t.promise=function(a){return a&&"resolved"!==a.state()?(0===e&&t.start(),n++,e++,a.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");p(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=a.template;var r,c=e.querySelector(a.barSelector),s=n?"-100":i(t.status||0),l=document.querySelector(a.parent);return o(c,{transition:"all 0 linear",transform:"translate3d("+s+"%,0,0)"}),a.showSpinner||(r=e.querySelector(a.spinnerSelector))&&h(r),l!=document.body&&p(l,"nprogress-custom-parent"),l.appendChild(e),e},t.remove=function(){l(document.documentElement,"nprogress-busy"),l(document.querySelector(a.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&h(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var c=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),o=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var a,r=n.length,i=e.charAt(0).toUpperCase()+e.slice(1);r--;)if((a=n[r]+i)in t)return a;return e}(t))}function a(n,e,a){e=t(e),n.style[e]=a}return function(n,e){var t,r,i=arguments;if(2==i.length)for(t in e)void 0!==(r=e[t])&&e.hasOwnProperty(t)&&a(n,t,r);else a(n,i[1],i[2])}}();function s(n,e){return("string"==typeof n?n:d(n)).indexOf(" "+e+" ")>=0}function p(n,e){var t=d(n),a=t+e;s(t,e)||(n.className=a.substring(1))}function l(n,e){var t,a=d(n);s(n,e)&&(t=a.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function d(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function h(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?a.call(e,t,e,n):a)||(n.exports=r)},function(n,e,t){"use strict";var a=t(3),r=t(19),i=t(82),c=t(52);n.exports=function(n,e,t,o){o||(o={});var s=o.enumerable,p=void 0!==o.name?o.name:e;if(a(t)&&i(t,p,o),o.global)s?n[e]=t:c(e,t);else{try{o.unsafe?n[e]&&(s=!0):delete n[e]}catch(n){}s?n[e]=t:r.f(n,e,{value:t,enumerable:!1,configurable:!o.nonConfigurable,writable:!o.nonWritable})}return n}},function(n,e,t){"use strict";var a=t(49),r=TypeError;n.exports=function(n){if(a(n))throw new r("Can't call method on "+n);return n}},function(n,e,t){"use strict";n.exports=function(n){return null==n}},function(n,e,t){"use strict";var a=String;n.exports=function(n){try{return a(n)}catch(n){return"Object"}}},function(n,e,t){"use strict";var a=t(26),r=t(1),i=t(52),c=n.exports=r["__core-js_shared__"]||i("__core-js_shared__",{});(c.versions||(c.versions=[])).push({version:"3.44.0",mode:a?"pure":"global",copyright:"© 2014-2025 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.44.0/LICENSE",source:"https://github.com/zloirock/core-js"})},function(n,e,t){"use strict";var a=t(1),r=Object.defineProperty;n.exports=function(n,e){try{r(a,n,{value:e,configurable:!0,writable:!0})}catch(t){a[n]=e}return e}},function(n,e,t){"use strict";var a=t(77),r=t(78),i=a("keys");n.exports=function(n){return i[n]||(i[n]=r(n))}},function(n,e,t){"use strict";n.exports={}},function(n,e,t){"use strict";n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){var a=t(181),r=t(25),i=Object.prototype,c=i.hasOwnProperty,o=i.propertyIsEnumerable,s=a(function(){return arguments}())?a:function(n){return r(n)&&c.call(n,"callee")&&!o.call(n,"callee")};n.exports=s},function(n,e,t){var a=t(20)(t(14),"Map");n.exports=a},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var a=t(201),r=t(208),i=t(210),c=t(211),o=t(212);function s(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}s.prototype.clear=a,s.prototype.delete=r,s.prototype.get=i,s.prototype.has=c,s.prototype.set=o,n.exports=s},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var a=t(13),r=t(63),i=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,c=/^\w*$/;n.exports=function(n,e){if(a(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!r(n))||(c.test(n)||!i.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var a=t(29),r=t(25);n.exports=function(n){return"symbol"==typeof n||r(n)&&"[object Symbol]"==a(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";var a=t(9),r=t(7),i=t(34),c=t(8),o=t(0),s=t(23),p=t(10),l=t(24)("some",TypeError);a({target:"Iterator",proto:!0,real:!0,forced:l},{some:function(n){o(this);try{c(n)}catch(n){p(this,"throw",n)}if(l)return r(l,this,n);var e=s(this),t=0;return i(e,(function(e,a){if(n(e,t++))return a()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},function(n,e,t){"use strict";var a=t(5),r=t(2),i=t(30),c=Object,o=a("".split);n.exports=r((function(){return!c("z").propertyIsEnumerable(0)}))?function(n){return"String"===i(n)?o(n,""):c(n)}:c},function(n,e,t){"use strict";var a,r=t(0),i=t(148),c=t(55),o=t(54),s=t(150),p=t(80),l=t(53),d=l("IE_PROTO"),h=function(){},u=function(n){return"<script>"+n+"<\/script>"},f=function(n){n.write(u("")),n.close();var e=n.parentWindow.Object;return n=null,e},m=function(){try{a=new ActiveXObject("htmlfile")}catch(n){}var n,e;m="undefined"!=typeof document?document.domain&&a?f(a):((e=p("iframe")).style.display="none",s.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(u("document.F=Object")),n.close(),n.F):f(a);for(var t=c.length;t--;)delete m.prototype[c[t]];return m()};o[d]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(h.prototype=r(n),t=new h,h.prototype=null,t[d]=n):t=m(),void 0===e?t:i.f(t,e)}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^\s+|\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,i=/^0o[0-7]+$/i,c=parseInt,o="object"==typeof global&&global&&global.Object===Object&&global,s="object"==typeof self&&self&&self.Object===Object&&self,p=o||s||Function("return this")(),l=Object.prototype.toString,d=Math.max,h=Math.min,u=function(){return p.Date.now()};function f(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function m(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==l.call(n)}(n))return NaN;if(f(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=f(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var o=r.test(n);return o||i.test(n)?c(n.slice(2),o?2:8):a.test(n)?NaN:+n}n.exports=function(n,e,t){var a,r,i,c,o,s,p=0,l=!1,b=!1,g=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function y(e){var t=a,i=r;return a=r=void 0,p=e,c=n.apply(i,t)}function v(n){return p=n,o=setTimeout(_,e),l?y(n):c}function k(n){var t=n-s;return void 0===s||t>=e||t<0||b&&n-p>=i}function _(){var n=u();if(k(n))return x(n);o=setTimeout(_,function(n){var t=e-(n-s);return b?h(t,i-(n-p)):t}(n))}function x(n){return o=void 0,g&&a?y(n):(a=r=void 0,c)}function w(){var n=u(),t=k(n);if(a=arguments,r=this,s=n,t){if(void 0===o)return v(s);if(b)return o=setTimeout(_,e),y(s)}return void 0===o&&(o=setTimeout(_,e)),c}return e=m(e)||0,f(t)&&(l=!!t.leading,i=(b="maxWait"in t)?d(m(t.maxWait)||0,e):i,g="trailing"in t?!!t.trailing:g),w.cancel=function(){void 0!==o&&clearTimeout(o),p=0,a=s=r=o=void 0},w.flush=function(){return void 0===o?c:x(u())},w}},function(n,e,t){"use strict";var a=t(6),r=t(7),i=t(131),c=t(36),o=t(37),s=t(71),p=t(12),l=t(79),d=Object.getOwnPropertyDescriptor;e.f=a?d:function(n,e){if(n=o(n),e=s(e),l)try{return d(n,e)}catch(n){}if(p(n,e))return c(!r(i.f,n,e),n[e])}},function(n,e,t){"use strict";var a=t(132),r=t(72);n.exports=function(n){var e=a(n,"string");return r(e)?e:e+""}},function(n,e,t){"use strict";var a=t(38),r=t(3),i=t(39),c=t(73),o=Object;n.exports=c?function(n){return"symbol"==typeof n}:function(n){var e=a("Symbol");return r(e)&&i(e.prototype,o(n))}},function(n,e,t){"use strict";var a=t(74);n.exports=a&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){"use strict";var a=t(75),r=t(2),i=t(1).String;n.exports=!!Object.getOwnPropertySymbols&&!r((function(){var n=Symbol("symbol detection");return!i(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&a&&a<41}))},function(n,e,t){"use strict";var a,r,i=t(1),c=t(76),o=i.process,s=i.Deno,p=o&&o.versions||s&&s.version,l=p&&p.v8;l&&(r=(a=l.split("."))[0]>0&&a[0]<4?1:+(a[0]+a[1])),!r&&c&&(!(a=c.match(/Edge\/(\d+)/))||a[1]>=74)&&(a=c.match(/Chrome\/(\d+)/))&&(r=+a[1]),n.exports=r},function(n,e,t){"use strict";var a=t(1).navigator,r=a&&a.userAgent;n.exports=r?String(r):""},function(n,e,t){"use strict";var a=t(51);n.exports=function(n,e){return a[n]||(a[n]=e||{})}},function(n,e,t){"use strict";var a=t(5),r=0,i=Math.random(),c=a(1.1.toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+c(++r+i,36)}},function(n,e,t){"use strict";var a=t(6),r=t(2),i=t(80);n.exports=!a&&!r((function(){return 7!==Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){"use strict";var a=t(1),r=t(11),i=a.document,c=r(i)&&r(i.createElement);n.exports=function(n){return c?i.createElement(n):{}}},function(n,e,t){"use strict";var a=t(6),r=t(2);n.exports=a&&r((function(){return 42!==Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){"use strict";var a=t(5),r=t(2),i=t(3),c=t(12),o=t(6),s=t(134).CONFIGURABLE,p=t(135),l=t(83),d=l.enforce,h=l.get,u=String,f=Object.defineProperty,m=a("".slice),b=a("".replace),g=a([].join),y=o&&!r((function(){return 8!==f((function(){}),"length",{value:8}).length})),v=String(String).split("String"),k=n.exports=function(n,e,t){"Symbol("===m(u(e),0,7)&&(e="["+b(u(e),/^Symbol\(([^)]*)\).*$/,"$1")+"]"),t&&t.getter&&(e="get "+e),t&&t.setter&&(e="set "+e),(!c(n,"name")||s&&n.name!==e)&&(o?f(n,"name",{value:e,configurable:!0}):n.name=e),y&&t&&c(t,"arity")&&n.length!==t.arity&&f(n,"length",{value:t.arity});try{t&&c(t,"constructor")&&t.constructor?o&&f(n,"prototype",{writable:!1}):n.prototype&&(n.prototype=void 0)}catch(n){}var a=d(n);return c(a,"source")||(a.source=g(v,"string"==typeof e?e:"")),n};Function.prototype.toString=k((function(){return i(this)&&h(this).source||p(this)}),"toString")},function(n,e,t){"use strict";var a,r,i,c=t(136),o=t(1),s=t(11),p=t(27),l=t(12),d=t(51),h=t(53),u=t(54),f=o.TypeError,m=o.WeakMap;if(c||d.state){var b=d.state||(d.state=new m);b.get=b.get,b.has=b.has,b.set=b.set,a=function(n,e){if(b.has(n))throw new f("Object already initialized");return e.facade=n,b.set(n,e),e},r=function(n){return b.get(n)||{}},i=function(n){return b.has(n)}}else{var g=h("state");u[g]=!0,a=function(n,e){if(l(n,g))throw new f("Object already initialized");return e.facade=n,p(n,g,e),e},r=function(n){return l(n,g)?n[g]:{}},i=function(n){return l(n,g)}}n.exports={set:a,get:r,has:i,enforce:function(n){return i(n)?r(n):a(n,{})},getterFor:function(n){return function(e){var t;if(!s(e)||(t=r(e)).type!==n)throw new f("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){"use strict";var a=t(12),r=t(137),i=t(70),c=t(19);n.exports=function(n,e,t){for(var o=r(e),s=c.f,p=i.f,l=0;l<o.length;l++){var d=o[l];a(n,d)||t&&a(t,d)||s(n,d,p(e,d))}}},function(n,e,t){"use strict";var a=t(5),r=t(12),i=t(37),c=t(139).indexOf,o=t(54),s=a([].push);n.exports=function(n,e){var t,a=i(n),p=0,l=[];for(t in a)!r(o,t)&&r(a,t)&&s(l,t);for(;e.length>p;)r(a,t=e[p++])&&(~c(l,t)||s(l,t));return l}},function(n,e,t){"use strict";var a=t(141);n.exports=function(n){var e=+n;return e!=e||0===e?0:a(e)}},function(n,e,t){"use strict";var a=t(12),r=t(3),i=t(32),c=t(53),o=t(146),s=c("IE_PROTO"),p=Object,l=p.prototype;n.exports=o?p.getPrototypeOf:function(n){var e=i(n);if(a(e,s))return e[s];var t=e.constructor;return r(t)&&e instanceof t?t.prototype:e instanceof p?l:null}},function(n,e,t){"use strict";var a,r,i,c=t(2),o=t(3),s=t(11),p=t(67),l=t(87),d=t(47),h=t(17),u=t(26),f=h("iterator"),m=!1;[].keys&&("next"in(i=[].keys())?(r=l(l(i)))!==Object.prototype&&(a=r):m=!0),!s(a)||c((function(){var n={};return a[f].call(n)!==n}))?a={}:u&&(a=p(a)),o(a[f])||d(a,f,(function(){return this})),n.exports={IteratorPrototype:a,BUGGY_SAFARI_ITERATORS:m}},function(n,e,t){"use strict";var a=t(7),r=t(67),i=t(27),c=t(151),o=t(17),s=t(83),p=t(40),l=t(88).IteratorPrototype,d=t(152),h=t(10),u=t(153),f=o("toStringTag"),m=s.set,b=function(n){var e=s.getterFor(n?"WrapForValidIterator":"IteratorHelper");return c(r(l),{next:function(){var t=e(this);if(n)return t.nextHandler();if(t.done)return d(void 0,!0);try{var a=t.nextHandler();return t.returnHandlerResult?a:d(a,t.done)}catch(n){throw t.done=!0,n}},return:function(){var t=e(this),r=t.iterator;if(t.done=!0,n){var i=p(r,"return");return i?a(i,r):d(void 0,!0)}if(t.inner)try{h(t.inner.iterator,"normal")}catch(n){return h(r,"throw",n)}if(t.openIters)try{u(t.openIters,"normal")}catch(n){return h(r,"throw",n)}return r&&h(r,"normal"),d(void 0,!0)}})},g=b(!0),y=b(!1);i(y,f,"Iterator Helper"),n.exports=function(n,e,t){var a=function(a,r){r?(r.iterator=a.iterator,r.next=a.next):r=a,r.type=e?"WrapForValidIterator":"IteratorHelper",r.returnHandlerResult=!!t,r.nextHandler=n,r.counter=0,r.done=!1,m(this,r)};return a.prototype=e?g:y,a}},function(n,e,t){"use strict";var a=t(0),r=t(10);n.exports=function(n,e,t,i){try{return i?e(a(t)[0],t[1]):e(t)}catch(e){r(n,"throw",e)}}},function(n,e,t){"use strict";n.exports=function(n,e){var t="function"==typeof Iterator&&Iterator.prototype[n];if(t)try{t.call({next:null},e).next()}catch(n){return!0}}},function(n,e,t){"use strict";n.exports={}},function(n,e,t){"use strict";var a=t(94),r=t(40),i=t(49),c=t(92),o=t(17)("iterator");n.exports=function(n){if(!i(n))return r(n,o)||r(n,"@@iterator")||c[a(n)]}},function(n,e,t){"use strict";var a=t(162),r=t(3),i=t(30),c=t(17)("toStringTag"),o=Object,s="Arguments"===i(function(){return arguments}());n.exports=a?i:function(n){var e,t,a;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=o(n),c))?t:s?i(e):"Object"===(a=i(e))&&r(e.callee)?"Arguments":a}},function(n,e,t){"use strict";var a=t(35),r=Function.prototype,i=r.apply,c=r.call;n.exports="object"==typeof Reflect&&Reflect.apply||(a?c.bind(i):function(){return c.apply(i,arguments)})},function(n,e,t){"use strict";var a=t(166),r=t(11),i=t(48),c=t(167);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=a(Object.prototype,"__proto__","set"))(t,[]),e=t instanceof Array}catch(n){}return function(t,a){return i(t),c(a),r(t)?(e?n(t,a):t.__proto__=a,t):t}}():void 0)},function(n,e){n.exports=function(n,e){for(var t=-1,a=e.length,r=n.length;++t<a;)n[r+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var a=t(41),r=t(192),i=t(193),c=t(194),o=t(195),s=t(196);function p(n){var e=this.__data__=new a(n);this.size=e.size}p.prototype.clear=r,p.prototype.delete=i,p.prototype.get=c,p.prototype.has=o,p.prototype.set=s,n.exports=p},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var a=t(29),r=t(58);n.exports=function(n){if(!r(n))return!1;var e=a(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var a=t(213),r=t(25);n.exports=function n(e,t,i,c,o){return e===t||(null==e||null==t||!r(e)&&!r(t)?e!=e&&t!=t:a(e,t,i,c,n,o))}},function(n,e,t){var a=t(105),r=t(216),i=t(106);n.exports=function(n,e,t,c,o,s){var p=1&t,l=n.length,d=e.length;if(l!=d&&!(p&&d>l))return!1;var h=s.get(n),u=s.get(e);if(h&&u)return h==e&&u==n;var f=-1,m=!0,b=2&t?new a:void 0;for(s.set(n,e),s.set(e,n);++f<l;){var g=n[f],y=e[f];if(c)var v=p?c(y,g,f,e,n,s):c(g,y,f,n,e,s);if(void 0!==v){if(v)continue;m=!1;break}if(b){if(!r(e,(function(n,e){if(!i(b,e)&&(g===n||o(g,n,t,c,s)))return b.push(e)}))){m=!1;break}}else if(g!==y&&!o(g,y,t,c,s)){m=!1;break}}return s.delete(n),s.delete(e),m}},function(n,e,t){var a=t(59),r=t(214),i=t(215);function c(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new a;++e<t;)this.add(n[e])}c.prototype.add=c.prototype.push=r,c.prototype.has=i,n.exports=c},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var a=t(226),r=t(232),i=t(111);n.exports=function(n){return i(n)?a(n):r(n)}},function(n,e,t){(function(n){var a=t(14),r=t(228),i=e&&!e.nodeType&&e,c=i&&"object"==typeof n&&n&&!n.nodeType&&n,o=c&&c.exports===i?a.Buffer:void 0,s=(o?o.isBuffer:void 0)||r;n.exports=s}).call(this,t(68)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var a=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==a||"symbol"!=a&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var a=t(229),r=t(230),i=t(231),c=i&&i.isTypedArray,o=c?r(c):a;n.exports=o},function(n,e,t){var a=t(101),r=t(61);n.exports=function(n){return null!=n&&r(n.length)&&!a(n)}},function(n,e,t){var a=t(20)(t(14),"Set");n.exports=a},function(n,e,t){var a=t(58);n.exports=function(n){return n==n&&!a(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var a=t(116),r=t(45);n.exports=function(n,e){for(var t=0,i=(e=a(e,n)).length;null!=n&&t<i;)n=n[r(e[t++])];return t&&t==i?n:void 0}},function(n,e,t){var a=t(13),r=t(62),i=t(243),c=t(246);n.exports=function(n,e){return a(n)?n:r(n,e)?[n]:i(c(n))}},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){var a=t(179),r=t(184),i=t(255),c=t(263),o=t(272),s=t(128),p=i((function(n){var e=s(n);return o(e)&&(e=void 0),c(a(n,1,o,!0),r(e,2))}));n.exports=p},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var a=/["'&<>]/;n.exports=function(n){var e,t=""+n,r=a.exec(t);if(!r)return t;var i="",c=0,o=0;for(c=r.index;c<t.length;c++){switch(t.charCodeAt(c)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}o!==c&&(i+=t.substring(o,c)),o=c+1,i+=e}return o!==c?i+t.substring(o,c):i}},function(n,e,t){"use strict";t.r(e);var a={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},r=(t(275),t(15)),i=Object(r.a)(a,(function(){return(0,this._self._c)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"5a3e6e86",null);e.default=i.exports},function(n,e,t){"use strict";t.r(e);t(4),t(16),t(18),t(21);var a={name:"CodeGroup",data:()=>({codeTabs:[],activeCodeTabIndex:-1}),watch:{activeCodeTabIndex(n){this.codeTabs.forEach(n=>{n.elm.classList.remove("theme-code-block__active")}),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted(){this.codeTabs=(this.$slots.default||[]).filter(n=>Boolean(n.componentOptions)).map((n,e)=>(""===n.componentOptions.propsData.active&&(this.activeCodeTabIndex=e),{title:n.componentOptions.propsData.title,elm:n.elm})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab(n){this.activeCodeTabIndex=n}}},r=(t(276),t(15)),i=Object(r.a)(a,(function(){var n=this,e=n._self._c;return e("div",{staticClass:"theme-code-group"},[e("div",{staticClass:"theme-code-group__nav"},[e("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(t,a){return e("li",{key:t.title,staticClass:"theme-code-group__li"},[e("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":a===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(a)}}},[n._v("\n            "+n._s(t.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?e("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"392329f0",null);e.default=i.exports},function(n,e,t){"use strict";var a=t(94),r=String;n.exports=function(n){if("Symbol"===a(n))throw new TypeError("Cannot convert a Symbol value to a string");return r(n)}},function(n,e,t){"use strict";var a=t(82),r=t(19);n.exports=function(n,e,t){return t.get&&a(t.get,e,{getter:!0}),t.set&&a(t.set,e,{setter:!0}),r.f(n,e,t)}},function(n,e,t){"use strict";var a=t(159),r=t(8),i=t(35),c=a(a.bind);n.exports=function(n,e){return r(n),void 0===e?n:i?c(n,e):function(){return n.apply(e,arguments)}}},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){"use strict";var a=t(9),r=t(7),i=t(34),c=t(8),o=t(0),s=t(23),p=t(10),l=t(24)("every",TypeError);a({target:"Iterator",proto:!0,real:!0,forced:l},{every:function(n){o(this);try{c(n)}catch(n){p(this,"throw",n)}if(l)return r(l,this,n);var e=s(this),t=0;return!i(e,(function(e,a){if(!n(e,t++))return a()}),{IS_RECORD:!0,INTERRUPTED:!0}).stopped}})},function(n,e,t){n.exports=t(283)},function(n,e,t){"use strict";var a={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,i=r&&!a.call({1:2},1);e.f=i?function(n){var e=r(this,n);return!!e&&e.enumerable}:a},function(n,e,t){"use strict";var a=t(7),r=t(11),i=t(72),c=t(40),o=t(133),s=t(17),p=TypeError,l=s("toPrimitive");n.exports=function(n,e){if(!r(n)||i(n))return n;var t,s=c(n,l);if(s){if(void 0===e&&(e="default"),t=a(s,n,e),!r(t)||i(t))return t;throw new p("Can't convert object to primitive value")}return void 0===e&&(e="number"),o(n,e)}},function(n,e,t){"use strict";var a=t(7),r=t(3),i=t(11),c=TypeError;n.exports=function(n,e){var t,o;if("string"===e&&r(t=n.toString)&&!i(o=a(t,n)))return o;if(r(t=n.valueOf)&&!i(o=a(t,n)))return o;if("string"!==e&&r(t=n.toString)&&!i(o=a(t,n)))return o;throw new c("Can't convert object to primitive value")}},function(n,e,t){"use strict";var a=t(6),r=t(12),i=Function.prototype,c=a&&Object.getOwnPropertyDescriptor,o=r(i,"name"),s=o&&"something"===function(){}.name,p=o&&(!a||a&&c(i,"name").configurable);n.exports={EXISTS:o,PROPER:s,CONFIGURABLE:p}},function(n,e,t){"use strict";var a=t(5),r=t(3),i=t(51),c=a(Function.toString);r(i.inspectSource)||(i.inspectSource=function(n){return c(n)}),n.exports=i.inspectSource},function(n,e,t){"use strict";var a=t(1),r=t(3),i=a.WeakMap;n.exports=r(i)&&/native code/.test(String(i))},function(n,e,t){"use strict";var a=t(38),r=t(5),i=t(138),c=t(143),o=t(0),s=r([].concat);n.exports=a("Reflect","ownKeys")||function(n){var e=i.f(o(n)),t=c.f;return t?s(e,t(n)):e}},function(n,e,t){"use strict";var a=t(85),r=t(55).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return a(n,r)}},function(n,e,t){"use strict";var a=t(37),r=t(140),i=t(33),c=function(n){return function(e,t,c){var o=a(e),s=i(o);if(0===s)return!n&&-1;var p,l=r(c,s);if(n&&t!=t){for(;s>l;)if((p=o[l++])!=p)return!0}else for(;s>l;l++)if((n||l in o)&&o[l]===t)return n||l||0;return!n&&-1}};n.exports={includes:c(!0),indexOf:c(!1)}},function(n,e,t){"use strict";var a=t(86),r=Math.max,i=Math.min;n.exports=function(n,e){var t=a(n);return t<0?r(t+e,0):i(t,e)}},function(n,e,t){"use strict";var a=Math.ceil,r=Math.floor;n.exports=Math.trunc||function(n){var e=+n;return(e>0?r:a)(e)}},function(n,e,t){"use strict";var a=t(86),r=Math.min;n.exports=function(n){var e=a(n);return e>0?r(e,9007199254740991):0}},function(n,e,t){"use strict";e.f=Object.getOwnPropertySymbols},function(n,e,t){"use strict";var a=t(2),r=t(3),i=/#|\.prototype\./,c=function(n,e){var t=s[o(n)];return t===l||t!==p&&(r(e)?a(e):!!e)},o=c.normalize=function(n){return String(n).replace(i,".").toLowerCase()},s=c.data={},p=c.NATIVE="N",l=c.POLYFILL="P";n.exports=c},function(n,e,t){"use strict";var a=t(39),r=TypeError;n.exports=function(n,e){if(a(e,n))return n;throw new r("Incorrect invocation")}},function(n,e,t){"use strict";var a=t(2);n.exports=!a((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){"use strict";var a=t(6),r=t(19),i=t(36);n.exports=function(n,e,t){a?r.f(n,e,i(0,t)):n[e]=t}},function(n,e,t){"use strict";var a=t(6),r=t(81),i=t(19),c=t(0),o=t(37),s=t(149);e.f=a&&!r?Object.defineProperties:function(n,e){c(n);for(var t,a=o(e),r=s(e),p=r.length,l=0;p>l;)i.f(n,t=r[l++],a[t]);return n}},function(n,e,t){"use strict";var a=t(85),r=t(55);n.exports=Object.keys||function(n){return a(n,r)}},function(n,e,t){"use strict";var a=t(38);n.exports=a("document","documentElement")},function(n,e,t){"use strict";var a=t(47);n.exports=function(n,e,t){for(var r in e)a(n,r,e[r],t);return n}},function(n,e,t){"use strict";n.exports=function(n,e){return{value:n,done:e}}},function(n,e,t){"use strict";var a=t(10);n.exports=function(n,e,t){for(var r=n.length-1;r>=0;r--)if(void 0!==n[r])try{t=a(n[r].iterator,e,t)}catch(n){e="throw",t=n}if("throw"===e)throw t;return t}},function(n,e,t){"use strict";var a=t(9),r=t(155).left,i=t(156),c=t(75);a({target:"Array",proto:!0,forced:!t(157)&&c>79&&c<83||!i("reduce")},{reduce:function(n){var e=arguments.length;return r(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var a=t(8),r=t(32),i=t(66),c=t(33),o=TypeError,s="Reduce of empty array with no initial value",p=function(n){return function(e,t,p,l){var d=r(e),h=i(d),u=c(d);if(a(t),0===u&&p<2)throw new o(s);var f=n?u-1:0,m=n?-1:1;if(p<2)for(;;){if(f in h){l=h[f],f+=m;break}if(f+=m,n?f<0:u<=f)throw new o(s)}for(;n?f>=0:u>f;f+=m)f in h&&(l=t(l,h[f],f,d));return l}};n.exports={left:p(!1),right:p(!0)}},function(n,e,t){"use strict";var a=t(2);n.exports=function(n,e){var t=[][n];return!!t&&a((function(){t.call(null,e||function(){return 1},1)}))}},function(n,e,t){"use strict";var a=t(158);n.exports="NODE"===a},function(n,e,t){"use strict";var a=t(1),r=t(76),i=t(30),c=function(n){return r.slice(0,n.length)===n};n.exports=c("Bun/")?"BUN":c("Cloudflare-Workers")?"CLOUDFLARE":c("Deno/")?"DENO":c("Node.js/")?"NODE":a.Bun&&"string"==typeof Bun.version?"BUN":a.Deno&&"object"==typeof Deno.version?"DENO":"process"===i(a.process)?"NODE":a.window&&a.document?"BROWSER":"REST"},function(n,e,t){"use strict";var a=t(30),r=t(5);n.exports=function(n){if("Function"===a(n))return r(n)}},function(n,e,t){"use strict";var a=t(17),r=t(92),i=a("iterator"),c=Array.prototype;n.exports=function(n){return void 0!==n&&(r.Array===n||c[i]===n)}},function(n,e,t){"use strict";var a=t(7),r=t(8),i=t(0),c=t(50),o=t(93),s=TypeError;n.exports=function(n,e){var t=arguments.length<2?o(n):e;if(r(t))return i(a(t,n));throw new s(c(n)+" is not iterable")}},function(n,e,t){"use strict";var a={};a[t(17)("toStringTag")]="z",n.exports="[object z]"===String(a)},function(n,e,t){"use strict";var a=t(9),r=t(34),i=t(8),c=t(0),o=t(23),s=t(10),p=t(24),l=t(95),d=t(2),h=TypeError,u=d((function(){[].keys().reduce((function(){}),void 0)})),f=!u&&p("reduce",h);a({target:"Iterator",proto:!0,real:!0,forced:u||f},{reduce:function(n){c(this);try{i(n)}catch(n){s(this,"throw",n)}var e=arguments.length<2,t=e?void 0:arguments[1];if(f)return l(f,this,e?[n]:[n,t]);var a=o(this),p=0;if(r(a,(function(a){e?(e=!1,t=a):t=n(t,a,p),p++}),{IS_RECORD:!0}),e)throw new h("Reduce of empty iterator with no initial value");return t}})},function(n,e,t){"use strict";var a=t(9),r=t(1),i=t(95),c=t(165),o=r.WebAssembly,s=7!==new Error("e",{cause:7}).cause,p=function(n,e){var t={};t[n]=c(n,e,s),a({global:!0,constructor:!0,arity:1,forced:s},t)},l=function(n,e){if(o&&o[n]){var t={};t[n]=c("WebAssembly."+n,e,s),a({target:"WebAssembly",stat:!0,constructor:!0,arity:1,forced:s},t)}};p("Error",(function(n){return function(e){return i(n,this,arguments)}})),p("EvalError",(function(n){return function(e){return i(n,this,arguments)}})),p("RangeError",(function(n){return function(e){return i(n,this,arguments)}})),p("ReferenceError",(function(n){return function(e){return i(n,this,arguments)}})),p("SyntaxError",(function(n){return function(e){return i(n,this,arguments)}})),p("TypeError",(function(n){return function(e){return i(n,this,arguments)}})),p("URIError",(function(n){return function(e){return i(n,this,arguments)}})),l("CompileError",(function(n){return function(e){return i(n,this,arguments)}})),l("LinkError",(function(n){return function(e){return i(n,this,arguments)}})),l("RuntimeError",(function(n){return function(e){return i(n,this,arguments)}}))},function(n,e,t){"use strict";var a=t(38),r=t(12),i=t(27),c=t(39),o=t(96),s=t(84),p=t(169),l=t(170),d=t(171),h=t(172),u=t(173),f=t(6),m=t(26);n.exports=function(n,e,t,b){var g=b?2:1,y=n.split("."),v=y[y.length-1],k=a.apply(null,y);if(k){var _=k.prototype;if(!m&&r(_,"cause")&&delete _.cause,!t)return k;var x=a("Error"),w=e((function(n,e){var t=d(b?e:n,void 0),a=b?new k(n):new k;return void 0!==t&&i(a,"message",t),u(a,w,a.stack,2),this&&c(_,this)&&l(a,this,w),arguments.length>g&&h(a,arguments[g]),a}));if(w.prototype=_,"Error"!==v?o?o(w,x):s(w,x,{name:!0}):f&&"stackTraceLimit"in k&&(p(w,k,"stackTraceLimit"),p(w,k,"prepareStackTrace")),s(w,k),!m)try{_.name!==v&&i(_,"name",v),_.constructor=w}catch(n){}return w}}},function(n,e,t){"use strict";var a=t(5),r=t(8);n.exports=function(n,e,t){try{return a(r(Object.getOwnPropertyDescriptor(n,e)[t]))}catch(n){}}},function(n,e,t){"use strict";var a=t(168),r=String,i=TypeError;n.exports=function(n){if(a(n))return n;throw new i("Can't set "+r(n)+" as a prototype")}},function(n,e,t){"use strict";var a=t(11);n.exports=function(n){return a(n)||null===n}},function(n,e,t){"use strict";var a=t(19).f;n.exports=function(n,e,t){t in n||a(n,t,{configurable:!0,get:function(){return e[t]},set:function(n){e[t]=n}})}},function(n,e,t){"use strict";var a=t(3),r=t(11),i=t(96);n.exports=function(n,e,t){var c,o;return i&&a(c=e.constructor)&&c!==t&&r(o=c.prototype)&&o!==t.prototype&&i(n,o),n}},function(n,e,t){"use strict";var a=t(125);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:a(n)}},function(n,e,t){"use strict";var a=t(11),r=t(27);n.exports=function(n,e){a(e)&&"cause"in e&&r(n,"cause",e.cause)}},function(n,e,t){"use strict";var a=t(27),r=t(174),i=t(175),c=Error.captureStackTrace;n.exports=function(n,e,t,o){i&&(c?c(n,e):a(n,"stack",r(t,o)))}},function(n,e,t){"use strict";var a=t(5),r=Error,i=a("".replace),c=String(new r("zxcasd").stack),o=/\n\s*at [^:]*:[^\n]*/,s=o.test(c);n.exports=function(n,e){if(s&&"string"==typeof n&&!r.prepareStackTrace)for(;e--;)n=i(n,o,"");return n}},function(n,e,t){"use strict";var a=t(2),r=t(36);n.exports=!a((function(){var n=new Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",r(1,7)),7!==n.stack)}))},function(n,e,t){"use strict";var a=t(6),r=t(177),i=TypeError,c=Object.getOwnPropertyDescriptor,o=a&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(n){return n instanceof TypeError}}();n.exports=o?function(n,e){if(r(n)&&!c(n,"length").writable)throw new i("Cannot set read only .length");return n.length=e}:function(n,e){return n.length=e}},function(n,e,t){"use strict";var a=t(30);n.exports=Array.isArray||function(n){return"Array"===a(n)}},function(n,e,t){"use strict";var a=TypeError;n.exports=function(n){if(n>9007199254740991)throw a("Maximum allowed index exceeded");return n}},function(n,e,t){var a=t(97),r=t(180);n.exports=function n(e,t,i,c,o){var s=-1,p=e.length;for(i||(i=r),o||(o=[]);++s<p;){var l=e[s];t>0&&i(l)?t>1?n(l,t-1,i,c,o):a(o,l):c||(o[o.length]=l)}return o}},function(n,e,t){var a=t(31),r=t(56),i=t(13),c=a?a.isConcatSpreadable:void 0;n.exports=function(n){return i(n)||r(n)||!!(c&&n&&n[c])}},function(n,e,t){var a=t(29),r=t(25);n.exports=function(n){return r(n)&&"[object Arguments]"==a(n)}},function(n,e,t){var a=t(31),r=Object.prototype,i=r.hasOwnProperty,c=r.toString,o=a?a.toStringTag:void 0;n.exports=function(n){var e=i.call(n,o),t=n[o];try{n[o]=void 0;var a=!0}catch(n){}var r=c.call(n);return a&&(e?n[o]=t:delete n[o]),r}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var a=t(185),r=t(241),i=t(64),c=t(13),o=t(252);n.exports=function(n){return"function"==typeof n?n:null==n?i:"object"==typeof n?c(n)?r(n[0],n[1]):a(n):o(n)}},function(n,e,t){var a=t(186),r=t(240),i=t(114);n.exports=function(n){var e=r(n);return 1==e.length&&e[0][2]?i(e[0][0],e[0][1]):function(t){return t===n||a(t,n,e)}}},function(n,e,t){var a=t(99),r=t(103);n.exports=function(n,e,t,i){var c=t.length,o=c,s=!i;if(null==n)return!o;for(n=Object(n);c--;){var p=t[c];if(s&&p[2]?p[1]!==n[p[0]]:!(p[0]in n))return!1}for(;++c<o;){var l=(p=t[c])[0],d=n[l],h=p[1];if(s&&p[2]){if(void 0===d&&!(l in n))return!1}else{var u=new a;if(i)var f=i(d,h,l,n,e,u);if(!(void 0===f?r(h,d,3,i,u):f))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var a=t(42),r=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=a(e,n);return!(t<0)&&(t==e.length-1?e.pop():r.call(e,t,1),--this.size,!0)}},function(n,e,t){var a=t(42);n.exports=function(n){var e=this.__data__,t=a(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var a=t(42);n.exports=function(n){return a(this.__data__,n)>-1}},function(n,e,t){var a=t(42);n.exports=function(n,e){var t=this.__data__,r=a(t,n);return r<0?(++this.size,t.push([n,e])):t[r][1]=e,this}},function(n,e,t){var a=t(41);n.exports=function(){this.__data__=new a,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var a=t(41),r=t(57),i=t(59);n.exports=function(n,e){var t=this.__data__;if(t instanceof a){var c=t.__data__;if(!r||c.length<199)return c.push([n,e]),this.size=++t.size,this;t=this.__data__=new i(c)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var a=t(101),r=t(198),i=t(58),c=t(102),o=/^\[object .+?Constructor\]$/,s=Function.prototype,p=Object.prototype,l=s.toString,d=p.hasOwnProperty,h=RegExp("^"+l.call(d).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!i(n)||r(n))&&(a(n)?h:o).test(c(n))}},function(n,e,t){var a,r=t(199),i=(a=/[^.]+$/.exec(r&&r.keys&&r.keys.IE_PROTO||""))?"Symbol(src)_1."+a:"";n.exports=function(n){return!!i&&i in n}},function(n,e,t){var a=t(14)["__core-js_shared__"];n.exports=a},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var a=t(202),r=t(41),i=t(57);n.exports=function(){this.size=0,this.__data__={hash:new a,map:new(i||r),string:new a}}},function(n,e,t){var a=t(203),r=t(204),i=t(205),c=t(206),o=t(207);function s(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var a=n[e];this.set(a[0],a[1])}}s.prototype.clear=a,s.prototype.delete=r,s.prototype.get=i,s.prototype.has=c,s.prototype.set=o,n.exports=s},function(n,e,t){var a=t(43);n.exports=function(){this.__data__=a?a(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var a=t(43),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(a){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return r.call(e,n)?e[n]:void 0}},function(n,e,t){var a=t(43),r=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return a?void 0!==e[n]:r.call(e,n)}},function(n,e,t){var a=t(43);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=a&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var a=t(44);n.exports=function(n){var e=a(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var a=t(44);n.exports=function(n){return a(this,n).get(n)}},function(n,e,t){var a=t(44);n.exports=function(n){return a(this,n).has(n)}},function(n,e,t){var a=t(44);n.exports=function(n,e){var t=a(this,n),r=t.size;return t.set(n,e),this.size+=t.size==r?0:1,this}},function(n,e,t){var a=t(99),r=t(104),i=t(217),c=t(220),o=t(236),s=t(13),p=t(108),l=t(110),d="[object Object]",h=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,u,f,m){var b=s(n),g=s(e),y=b?"[object Array]":o(n),v=g?"[object Array]":o(e),k=(y="[object Arguments]"==y?d:y)==d,_=(v="[object Arguments]"==v?d:v)==d,x=y==v;if(x&&p(n)){if(!p(e))return!1;b=!0,k=!1}if(x&&!k)return m||(m=new a),b||l(n)?r(n,e,t,u,f,m):i(n,e,y,t,u,f,m);if(!(1&t)){var w=k&&h.call(n,"__wrapped__"),A=_&&h.call(e,"__wrapped__");if(w||A){var E=w?n.value():n,C=A?e.value():e;return m||(m=new a),f(E,C,t,u,m)}}return!!x&&(m||(m=new a),c(n,e,t,u,f,m))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length;++t<a;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var a=t(31),r=t(218),i=t(100),c=t(104),o=t(219),s=t(60),p=a?a.prototype:void 0,l=p?p.valueOf:void 0;n.exports=function(n,e,t,a,p,d,h){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!d(new r(n),new r(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return i(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var u=o;case"[object Set]":var f=1&a;if(u||(u=s),n.size!=e.size&&!f)return!1;var m=h.get(n);if(m)return m==e;a|=2,h.set(n,e);var b=c(u(n),u(e),a,p,d,h);return h.delete(n),b;case"[object Symbol]":if(l)return l.call(n)==l.call(e)}return!1}},function(n,e,t){var a=t(14).Uint8Array;n.exports=a},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,a){t[++e]=[a,n]})),t}},function(n,e,t){var a=t(221),r=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,i,c,o){var s=1&t,p=a(n),l=p.length;if(l!=a(e).length&&!s)return!1;for(var d=l;d--;){var h=p[d];if(!(s?h in e:r.call(e,h)))return!1}var u=o.get(n),f=o.get(e);if(u&&f)return u==e&&f==n;var m=!0;o.set(n,e),o.set(e,n);for(var b=s;++d<l;){var g=n[h=p[d]],y=e[h];if(i)var v=s?i(y,g,h,e,n,o):i(g,y,h,n,e,o);if(!(void 0===v?g===y||c(g,y,t,i,o):v)){m=!1;break}b||(b="constructor"==h)}if(m&&!b){var k=n.constructor,_=e.constructor;k==_||!("constructor"in n)||!("constructor"in e)||"function"==typeof k&&k instanceof k&&"function"==typeof _&&_ instanceof _||(m=!1)}return o.delete(n),o.delete(e),m}},function(n,e,t){var a=t(222),r=t(223),i=t(107);n.exports=function(n){return a(n,i,r)}},function(n,e,t){var a=t(97),r=t(13);n.exports=function(n,e,t){var i=e(n);return r(n)?i:a(i,t(n))}},function(n,e,t){var a=t(224),r=t(225),i=Object.prototype.propertyIsEnumerable,c=Object.getOwnPropertySymbols,o=c?function(n){return null==n?[]:(n=Object(n),a(c(n),(function(e){return i.call(n,e)})))}:r;n.exports=o},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length,r=0,i=[];++t<a;){var c=n[t];e(c,t,n)&&(i[r++]=c)}return i}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var a=t(227),r=t(56),i=t(13),c=t(108),o=t(109),s=t(110),p=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=i(n),l=!t&&r(n),d=!t&&!l&&c(n),h=!t&&!l&&!d&&s(n),u=t||l||d||h,f=u?a(n.length,String):[],m=f.length;for(var b in n)!e&&!p.call(n,b)||u&&("length"==b||d&&("offset"==b||"parent"==b)||h&&("buffer"==b||"byteLength"==b||"byteOffset"==b)||o(b,m))||f.push(b);return f}},function(n,e){n.exports=function(n,e){for(var t=-1,a=Array(n);++t<n;)a[t]=e(t);return a}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var a=t(29),r=t(61),i=t(25),c={};c["[object Float32Array]"]=c["[object Float64Array]"]=c["[object Int8Array]"]=c["[object Int16Array]"]=c["[object Int32Array]"]=c["[object Uint8Array]"]=c["[object Uint8ClampedArray]"]=c["[object Uint16Array]"]=c["[object Uint32Array]"]=!0,c["[object Arguments]"]=c["[object Array]"]=c["[object ArrayBuffer]"]=c["[object Boolean]"]=c["[object DataView]"]=c["[object Date]"]=c["[object Error]"]=c["[object Function]"]=c["[object Map]"]=c["[object Number]"]=c["[object Object]"]=c["[object RegExp]"]=c["[object Set]"]=c["[object String]"]=c["[object WeakMap]"]=!1,n.exports=function(n){return i(n)&&r(n.length)&&!!c[a(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var a=t(98),r=e&&!e.nodeType&&e,i=r&&"object"==typeof n&&n&&!n.nodeType&&n,c=i&&i.exports===r&&a.process,o=function(){try{var n=i&&i.require&&i.require("util").types;return n||c&&c.binding&&c.binding("util")}catch(n){}}();n.exports=o}).call(this,t(68)(n))},function(n,e,t){var a=t(233),r=t(234),i=Object.prototype.hasOwnProperty;n.exports=function(n){if(!a(n))return r(n);var e=[];for(var t in Object(n))i.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var a=t(235)(Object.keys,Object);n.exports=a},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var a=t(237),r=t(57),i=t(238),c=t(112),o=t(239),s=t(29),p=t(102),l=p(a),d=p(r),h=p(i),u=p(c),f=p(o),m=s;(a&&"[object DataView]"!=m(new a(new ArrayBuffer(1)))||r&&"[object Map]"!=m(new r)||i&&"[object Promise]"!=m(i.resolve())||c&&"[object Set]"!=m(new c)||o&&"[object WeakMap]"!=m(new o))&&(m=function(n){var e=s(n),t="[object Object]"==e?n.constructor:void 0,a=t?p(t):"";if(a)switch(a){case l:return"[object DataView]";case d:return"[object Map]";case h:return"[object Promise]";case u:return"[object Set]";case f:return"[object WeakMap]"}return e}),n.exports=m},function(n,e,t){var a=t(20)(t(14),"DataView");n.exports=a},function(n,e,t){var a=t(20)(t(14),"Promise");n.exports=a},function(n,e,t){var a=t(20)(t(14),"WeakMap");n.exports=a},function(n,e,t){var a=t(113),r=t(107);n.exports=function(n){for(var e=r(n),t=e.length;t--;){var i=e[t],c=n[i];e[t]=[i,c,a(c)]}return e}},function(n,e,t){var a=t(103),r=t(242),i=t(249),c=t(62),o=t(113),s=t(114),p=t(45);n.exports=function(n,e){return c(n)&&o(e)?s(p(n),e):function(t){var c=r(t,n);return void 0===c&&c===e?i(t,n):a(e,c,3)}}},function(n,e,t){var a=t(115);n.exports=function(n,e,t){var r=null==n?void 0:a(n,e);return void 0===r?t:r}},function(n,e,t){var a=t(244),r=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,i=/\\(\\)?/g,c=a((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(r,(function(n,t,a,r){e.push(a?r.replace(i,"$1"):t||n)})),e}));n.exports=c},function(n,e,t){var a=t(245);n.exports=function(n){var e=a(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var a=t(59);function r(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var a=arguments,r=e?e.apply(this,a):a[0],i=t.cache;if(i.has(r))return i.get(r);var c=n.apply(this,a);return t.cache=i.set(r,c)||i,c};return t.cache=new(r.Cache||a),t}r.Cache=a,n.exports=r},function(n,e,t){var a=t(247);n.exports=function(n){return null==n?"":a(n)}},function(n,e,t){var a=t(31),r=t(248),i=t(13),c=t(63),o=a?a.prototype:void 0,s=o?o.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(i(e))return r(e,n)+"";if(c(e))return s?s.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,a=null==n?0:n.length,r=Array(a);++t<a;)r[t]=e(n[t],t,n);return r}},function(n,e,t){var a=t(250),r=t(251);n.exports=function(n,e){return null!=n&&r(n,e,a)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var a=t(116),r=t(56),i=t(13),c=t(109),o=t(61),s=t(45);n.exports=function(n,e,t){for(var p=-1,l=(e=a(e,n)).length,d=!1;++p<l;){var h=s(e[p]);if(!(d=null!=n&&t(n,h)))break;n=n[h]}return d||++p!=l?d:!!(l=null==n?0:n.length)&&o(l)&&c(h,l)&&(i(n)||r(n))}},function(n,e,t){var a=t(253),r=t(254),i=t(62),c=t(45);n.exports=function(n){return i(n)?a(c(n)):r(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var a=t(115);n.exports=function(n){return function(e){return a(e,n)}}},function(n,e,t){var a=t(64),r=t(256),i=t(258);n.exports=function(n,e){return i(r(n,e,a),n+"")}},function(n,e,t){var a=t(257),r=Math.max;n.exports=function(n,e,t){return e=r(void 0===e?n.length-1:e,0),function(){for(var i=arguments,c=-1,o=r(i.length-e,0),s=Array(o);++c<o;)s[c]=i[e+c];c=-1;for(var p=Array(e+1);++c<e;)p[c]=i[c];return p[e]=t(s),a(n,this,p)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var a=t(259),r=t(262)(a);n.exports=r},function(n,e,t){var a=t(260),r=t(261),i=t(64),c=r?function(n,e){return r(n,"toString",{configurable:!0,enumerable:!1,value:a(e),writable:!0})}:i;n.exports=c},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var a=t(20),r=function(){try{var n=a(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=r},function(n,e){var t=Date.now;n.exports=function(n){var e=0,a=0;return function(){var r=t(),i=16-(r-a);if(a=r,i>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var a=t(105),r=t(264),i=t(269),c=t(106),o=t(270),s=t(60);n.exports=function(n,e,t){var p=-1,l=r,d=n.length,h=!0,u=[],f=u;if(t)h=!1,l=i;else if(d>=200){var m=e?null:o(n);if(m)return s(m);h=!1,l=c,f=new a}else f=e?[]:u;n:for(;++p<d;){var b=n[p],g=e?e(b):b;if(b=t||0!==b?b:0,h&&g==g){for(var y=f.length;y--;)if(f[y]===g)continue n;e&&f.push(g),u.push(b)}else l(f,g,t)||(f!==u&&f.push(g),u.push(b))}return u}},function(n,e,t){var a=t(265);n.exports=function(n,e){return!!(null==n?0:n.length)&&a(n,e,0)>-1}},function(n,e,t){var a=t(266),r=t(267),i=t(268);n.exports=function(n,e,t){return e==e?i(n,e,t):a(n,r,t)}},function(n,e){n.exports=function(n,e,t,a){for(var r=n.length,i=t+(a?1:-1);a?i--:++i<r;)if(e(n[i],i,n))return i;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var a=t-1,r=n.length;++a<r;)if(n[a]===e)return a;return-1}},function(n,e){n.exports=function(n,e,t){for(var a=-1,r=null==n?0:n.length;++a<r;)if(t(e,n[a]))return!0;return!1}},function(n,e,t){var a=t(112),r=t(271),i=t(60),c=a&&1/i(new a([,-0]))[1]==1/0?function(n){return new a(n)}:r;n.exports=c},function(n,e){n.exports=function(){}},function(n,e,t){var a=t(111),r=t(25);n.exports=function(n){return r(n)&&a(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(117)},function(n,e,t){"use strict";t(118)},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){},function(n,e,t){"use strict";t(119)},function(n,e,t){"use strict";t(120)},function(n,e,t){"use strict";t.r(e);t(4),t(16),t(21);var a=Object.freeze({}),r=Array.isArray;function i(n){return null==n}function c(n){return null!=n}function o(n){return!0===n}function s(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function p(n){return"function"==typeof n}function l(n){return null!==n&&"object"==typeof n}var d=Object.prototype.toString;function h(n){return"[object Object]"===d.call(n)}function u(n){return"[object RegExp]"===d.call(n)}function f(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function m(n){return c(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function b(n){return null==n?"":Array.isArray(n)||h(n)&&n.toString===d?JSON.stringify(n,g,2):String(n)}function g(n,e){return e&&e.__v_isRef?e.value:e}function y(n){var e=parseFloat(n);return isNaN(e)?n:e}function v(n,e){for(var t=Object.create(null),a=n.split(","),r=0;r<a.length;r++)t[a[r]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}v("slot,component",!0);var k=v("key,ref,slot,slot-scope,is");function _(n,e){var t=n.length;if(t){if(e===n[t-1])return void(n.length=t-1);var a=n.indexOf(e);if(a>-1)return n.splice(a,1)}}var x=Object.prototype.hasOwnProperty;function w(n,e){return x.call(n,e)}function A(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var E=/-(\w)/g,C=A((function(n){return n.replace(E,(function(n,e){return e?e.toUpperCase():""}))})),S=A((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),j=/\B([A-Z])/g,q=A((function(n){return n.replace(j,"-$1").toLowerCase()}));var P=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var a=arguments.length;return a?a>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function z(n,e){e=e||0;for(var t=n.length-e,a=new Array(t);t--;)a[t]=n[t+e];return a}function B(n,e){for(var t in e)n[t]=e[t];return n}function T(n){for(var e={},t=0;t<n.length;t++)n[t]&&B(e,n[t]);return e}function I(n,e,t){}var D=function(n,e,t){return!1},H=function(n){return n};function F(n,e){if(n===e)return!0;var t=l(n),a=l(e);if(!t||!a)return!t&&!a&&String(n)===String(e);try{var r=Array.isArray(n),i=Array.isArray(e);if(r&&i)return n.length===e.length&&n.every((function(n,t){return F(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(r||i)return!1;var c=Object.keys(n),o=Object.keys(e);return c.length===o.length&&c.every((function(t){return F(n[t],e[t])}))}catch(n){return!1}}function L(n,e){for(var t=0;t<n.length;t++)if(F(n[t],e))return t;return-1}function M(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}function R(n,e){return n===e?0===n&&1/n!=1/e:n==n||e==e}var U=["component","directive","filter"],O=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],K={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:D,isReservedAttr:D,isUnknownElement:D,getTagNamespace:I,parsePlatformTagName:H,mustUseProp:D,async:!0,_lifecycleHooks:O},N=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function G(n){var e=(n+"").charCodeAt(0);return 36===e||95===e}function V(n,e,t,a){Object.defineProperty(n,e,{value:t,enumerable:!!a,writable:!0,configurable:!0})}var Q=new RegExp("[^".concat(N.source,".$_\\d]"));var Y="__proto__"in{},W="undefined"!=typeof window,J=W&&window.navigator.userAgent.toLowerCase(),Z=J&&/msie|trident/.test(J),X=J&&J.indexOf("msie 9.0")>0,$=J&&J.indexOf("edge/")>0;J&&J.indexOf("android");var nn=J&&/iphone|ipad|ipod|ios/.test(J);J&&/chrome\/\d+/.test(J),J&&/phantomjs/.test(J);var en,tn=J&&J.match(/firefox\/(\d+)/),an={}.watch,rn=!1;if(W)try{var cn={};Object.defineProperty(cn,"passive",{get:function(){rn=!0}}),window.addEventListener("test-passive",null,cn)}catch(n){}var on=function(){return void 0===en&&(en=!W&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),en},sn=W&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function pn(n){return"function"==typeof n&&/native code/.test(n.toString())}var ln,dn="undefined"!=typeof Symbol&&pn(Symbol)&&"undefined"!=typeof Reflect&&pn(Reflect.ownKeys);ln="undefined"!=typeof Set&&pn(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var hn=null;function un(n){void 0===n&&(n=null),n||hn&&hn._scope.off(),hn=n,n&&n._scope.on()}var fn=function(){function n(n,e,t,a,r,i,c,o){this.tag=n,this.data=e,this.children=t,this.text=a,this.elm=r,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=c,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(n.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),n}(),mn=function(n){void 0===n&&(n="");var e=new fn;return e.text=n,e.isComment=!0,e};function bn(n){return new fn(void 0,void 0,void 0,String(n))}function gn(n){var e=new fn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}"function"==typeof SuppressedError&&SuppressedError;var yn=0,vn=[],kn=function(){function n(){this._pending=!1,this.id=yn++,this.subs=[]}return n.prototype.addSub=function(n){this.subs.push(n)},n.prototype.removeSub=function(n){this.subs[this.subs.indexOf(n)]=null,this._pending||(this._pending=!0,vn.push(this))},n.prototype.depend=function(e){n.target&&n.target.addDep(this)},n.prototype.notify=function(n){var e=this.subs.filter((function(n){return n}));for(var t=0,a=e.length;t<a;t++){0,e[t].update()}},n}();kn.target=null;var _n=[];function xn(n){_n.push(n),kn.target=n}function wn(){_n.pop(),kn.target=_n[_n.length-1]}var An=Array.prototype,En=Object.create(An);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=An[n];V(En,n,(function(){for(var t=[],a=0;a<arguments.length;a++)t[a]=arguments[a];var r,i=e.apply(this,t),c=this.__ob__;switch(n){case"push":case"unshift":r=t;break;case"splice":r=t.slice(2)}return r&&c.observeArray(r),c.dep.notify(),i}))}));var Cn=Object.getOwnPropertyNames(En),Sn={},jn=!0;function qn(n){jn=n}var Pn={notify:I,depend:I,addSub:I,removeSub:I},zn=function(){function n(n,e,t){if(void 0===e&&(e=!1),void 0===t&&(t=!1),this.value=n,this.shallow=e,this.mock=t,this.dep=t?Pn:new kn,this.vmCount=0,V(n,"__ob__",this),r(n)){if(!t)if(Y)n.__proto__=En;else for(var a=0,i=Cn.length;a<i;a++){V(n,o=Cn[a],En[o])}e||this.observeArray(n)}else{var c=Object.keys(n);for(a=0;a<c.length;a++){var o;Tn(n,o=c[a],Sn,void 0,e,t)}}}return n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Bn(n[e],!1,this.mock)},n}();function Bn(n,e,t){return n&&w(n,"__ob__")&&n.__ob__ instanceof zn?n.__ob__:!jn||!t&&on()||!r(n)&&!h(n)||!Object.isExtensible(n)||n.__v_skip||Rn(n)||n instanceof fn?void 0:new zn(n,e,t)}function Tn(n,e,t,a,i,c,o){void 0===o&&(o=!1);var s=new kn,p=Object.getOwnPropertyDescriptor(n,e);if(!p||!1!==p.configurable){var l=p&&p.get,d=p&&p.set;l&&!d||t!==Sn&&2!==arguments.length||(t=n[e]);var h=i?t&&t.__ob__:Bn(t,!1,c);return Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=l?l.call(n):t;return kn.target&&(s.depend(),h&&(h.dep.depend(),r(e)&&Hn(e))),Rn(e)&&!i?e.value:e},set:function(e){var a=l?l.call(n):t;if(R(a,e)){if(d)d.call(n,e);else{if(l)return;if(!i&&Rn(a)&&!Rn(e))return void(a.value=e);t=e}h=i?e&&e.__ob__:Bn(e,!1,c),s.notify()}}}),s}}function In(n,e,t){if(!Mn(n)){var a=n.__ob__;return r(n)&&f(e)?(n.length=Math.max(n.length,e),n.splice(e,1,t),a&&!a.shallow&&a.mock&&Bn(t,!1,!0),t):e in n&&!(e in Object.prototype)?(n[e]=t,t):n._isVue||a&&a.vmCount?t:a?(Tn(a.value,e,t,void 0,a.shallow,a.mock),a.dep.notify(),t):(n[e]=t,t)}}function Dn(n,e){if(r(n)&&f(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||Mn(n)||w(n,e)&&(delete n[e],t&&t.dep.notify())}}function Hn(n){for(var e=void 0,t=0,a=n.length;t<a;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),r(e)&&Hn(e)}function Fn(n){return Ln(n,!0),V(n,"__v_isShallow",!0),n}function Ln(n,e){if(!Mn(n)){Bn(n,e,on());0}}function Mn(n){return!(!n||!n.__v_isReadonly)}function Rn(n){return!(!n||!0!==n.__v_isRef)}function Un(n,e,t){Object.defineProperty(n,t,{enumerable:!0,configurable:!0,get:function(){var n=e[t];if(Rn(n))return n.value;var a=n&&n.__ob__;return a&&a.dep.depend(),n},set:function(n){var a=e[t];Rn(a)&&!Rn(n)?a.value=n:e[t]=n}})}"".concat("watcher"," callback"),"".concat("watcher"," getter"),"".concat("watcher"," cleanup");var On;var Kn=function(){function n(n){void 0===n&&(n=!1),this.detached=n,this.active=!0,this.effects=[],this.cleanups=[],this.parent=On,!n&&On&&(this.index=(On.scopes||(On.scopes=[])).push(this)-1)}return n.prototype.run=function(n){if(this.active){var e=On;try{return On=this,n()}finally{On=e}}else 0},n.prototype.on=function(){On=this},n.prototype.off=function(){On=this.parent},n.prototype.stop=function(n){if(this.active){var e=void 0,t=void 0;for(e=0,t=this.effects.length;e<t;e++)this.effects[e].teardown();for(e=0,t=this.cleanups.length;e<t;e++)this.cleanups[e]();if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].stop(!0);if(!this.detached&&this.parent&&!n){var a=this.parent.scopes.pop();a&&a!==this&&(this.parent.scopes[this.index]=a,a.index=this.index)}this.parent=void 0,this.active=!1}},n}();function Nn(n){var e=n._provided,t=n.$parent&&n.$parent._provided;return t===e?n._provided=Object.create(t):e}var Gn=A((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),a="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=a?n.slice(1):n,once:t,capture:a,passive:e}}));function Vn(n,e){function t(){var n=t.fns;if(!r(n))return je(n,null,arguments,e,"v-on handler");for(var a=n.slice(),i=0;i<a.length;i++)je(a[i],null,arguments,e,"v-on handler")}return t.fns=n,t}function Qn(n,e,t,a,r,c){var s,p,l,d;for(s in n)p=n[s],l=e[s],d=Gn(s),i(p)||(i(l)?(i(p.fns)&&(p=n[s]=Vn(p,c)),o(d.once)&&(p=n[s]=r(d.name,p,d.capture)),t(d.name,p,d.capture,d.passive,d.params)):p!==l&&(l.fns=p,n[s]=l));for(s in e)i(n[s])&&a((d=Gn(s)).name,e[s],d.capture)}function Yn(n,e,t){var a;n instanceof fn&&(n=n.data.hook||(n.data.hook={}));var r=n[e];function s(){t.apply(this,arguments),_(a.fns,s)}i(r)?a=Vn([s]):c(r.fns)&&o(r.merged)?(a=r).fns.push(s):a=Vn([r,s]),a.merged=!0,n[e]=a}function Wn(n,e,t,a,r){if(c(e)){if(w(e,t))return n[t]=e[t],r||delete e[t],!0;if(w(e,a))return n[t]=e[a],r||delete e[a],!0}return!1}function Jn(n){return s(n)?[bn(n)]:r(n)?function n(e,t){var a,p,l,d,h=[];for(a=0;a<e.length;a++)i(p=e[a])||"boolean"==typeof p||(l=h.length-1,d=h[l],r(p)?p.length>0&&(Zn((p=n(p,"".concat(t||"","_").concat(a)))[0])&&Zn(d)&&(h[l]=bn(d.text+p[0].text),p.shift()),h.push.apply(h,p)):s(p)?Zn(d)?h[l]=bn(d.text+p):""!==p&&h.push(bn(p)):Zn(p)&&Zn(d)?h[l]=bn(d.text+p.text):(o(e._isVList)&&c(p.tag)&&i(p.key)&&c(t)&&(p.key="__vlist".concat(t,"_").concat(a,"__")),h.push(p)));return h}(n):void 0}function Zn(n){return c(n)&&c(n.text)&&!1===n.isComment}function Xn(n,e){var t,a,i,o,s=null;if(r(n)||"string"==typeof n)for(s=new Array(n.length),t=0,a=n.length;t<a;t++)s[t]=e(n[t],t);else if("number"==typeof n)for(s=new Array(n),t=0;t<n;t++)s[t]=e(t+1,t);else if(l(n))if(dn&&n[Symbol.iterator]){s=[];for(var p=n[Symbol.iterator](),d=p.next();!d.done;)s.push(e(d.value,s.length)),d=p.next()}else for(i=Object.keys(n),s=new Array(i.length),t=0,a=i.length;t<a;t++)o=i[t],s[t]=e(n[o],o,t);return c(s)||(s=[]),s._isVList=!0,s}function $n(n,e,t,a){var r,i=this.$scopedSlots[n];i?(t=t||{},a&&(t=B(B({},a),t)),r=i(t)||(p(e)?e():e)):r=this.$slots[n]||(p(e)?e():e);var c=t&&t.slot;return c?this.$createElement("template",{slot:c},r):r}function ne(n){return zt(this.$options,"filters",n,!0)||H}function ee(n,e){return r(n)?-1===n.indexOf(e):n!==e}function te(n,e,t,a,r){var i=K.keyCodes[e]||t;return r&&a&&!K.keyCodes[e]?ee(r,a):i?ee(i,n):a?q(a)!==e:void 0===n}function ae(n,e,t,a,i){if(t)if(l(t)){r(t)&&(t=T(t));var c=void 0,o=function(r){if("class"===r||"style"===r||k(r))c=n;else{var o=n.attrs&&n.attrs.type;c=a||K.mustUseProp(e,o,r)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var s=C(r),p=q(r);s in c||p in c||(c[r]=t[r],i&&((n.on||(n.on={}))["update:".concat(r)]=function(n){t[r]=n}))};for(var s in t)o(s)}else;return n}function re(n,e){var t=this._staticTrees||(this._staticTrees=[]),a=t[n];return a&&!e||ce(a=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,this._c,this),"__static__".concat(n),!1),a}function ie(n,e,t){return ce(n,"__once__".concat(e).concat(t?"_".concat(t):""),!0),n}function ce(n,e,t){if(r(n))for(var a=0;a<n.length;a++)n[a]&&"string"!=typeof n[a]&&oe(n[a],"".concat(e,"_").concat(a),t);else oe(n,e,t)}function oe(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function se(n,e){if(e)if(h(e)){var t=n.on=n.on?B({},n.on):{};for(var a in e){var r=t[a],i=e[a];t[a]=r?[].concat(r,i):i}}else;return n}function pe(n,e,t,a){e=e||{$stable:!t};for(var i=0;i<n.length;i++){var c=n[i];r(c)?pe(c,e,t):c&&(c.proxy&&(c.fn.proxy=!0),e[c.key]=c.fn)}return a&&(e.$key=a),e}function le(n,e){for(var t=0;t<e.length;t+=2){var a=e[t];"string"==typeof a&&a&&(n[e[t]]=e[t+1])}return n}function de(n,e){return"string"==typeof n?e+n:n}function he(n){n._o=ie,n._n=y,n._s=b,n._l=Xn,n._t=$n,n._q=F,n._i=L,n._m=re,n._f=ne,n._k=te,n._b=ae,n._v=bn,n._e=mn,n._u=pe,n._g=se,n._d=le,n._p=de}function ue(n,e){if(!n||!n.length)return{};for(var t={},a=0,r=n.length;a<r;a++){var i=n[a],c=i.data;if(c&&c.attrs&&c.attrs.slot&&delete c.attrs.slot,i.context!==e&&i.fnContext!==e||!c||null==c.slot)(t.default||(t.default=[])).push(i);else{var o=c.slot,s=t[o]||(t[o]=[]);"template"===i.tag?s.push.apply(s,i.children||[]):s.push(i)}}for(var p in t)t[p].every(fe)&&delete t[p];return t}function fe(n){return n.isComment&&!n.asyncFactory||" "===n.text}function me(n){return n.isComment&&n.asyncFactory}function be(n,e,t,r){var i,c=Object.keys(t).length>0,o=e?!!e.$stable:!c,s=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(o&&r&&r!==a&&s===r.$key&&!c&&!r.$hasNormal)return r;for(var p in i={},e)e[p]&&"$"!==p[0]&&(i[p]=ge(n,t,p,e[p]))}else i={};for(var l in t)l in i||(i[l]=ye(t,l));return e&&Object.isExtensible(e)&&(e._normalized=i),V(i,"$stable",o),V(i,"$key",s),V(i,"$hasNormal",c),i}function ge(n,e,t,a){var i=function(){var e=hn;un(n);var t=arguments.length?a.apply(null,arguments):a({}),i=(t=t&&"object"==typeof t&&!r(t)?[t]:Jn(t))&&t[0];return un(e),t&&(!i||1===t.length&&i.isComment&&!me(i))?void 0:t};return a.proxy&&Object.defineProperty(e,t,{get:i,enumerable:!0,configurable:!0}),i}function ye(n,e){return function(){return n[e]}}function ve(n){return{get attrs(){if(!n._attrsProxy){var e=n._attrsProxy={};V(e,"_v_attr_proxy",!0),ke(e,n.$attrs,a,n,"$attrs")}return n._attrsProxy},get listeners(){n._listenersProxy||ke(n._listenersProxy={},n.$listeners,a,n,"$listeners");return n._listenersProxy},get slots(){return function(n){n._slotsProxy||xe(n._slotsProxy={},n.$scopedSlots);return n._slotsProxy}(n)},emit:P(n.$emit,n),expose:function(e){e&&Object.keys(e).forEach((function(t){return Un(n,e,t)}))}}}function ke(n,e,t,a,r){var i=!1;for(var c in e)c in n?e[c]!==t[c]&&(i=!0):(i=!0,_e(n,c,a,r));for(var c in n)c in e||(i=!0,delete n[c]);return i}function _e(n,e,t,a){Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){return t[a][e]}})}function xe(n,e){for(var t in e)n[t]=e[t];for(var t in n)t in e||delete n[t]}var we=null;function Ae(n,e){return(n.__esModule||dn&&"Module"===n[Symbol.toStringTag])&&(n=n.default),l(n)?e.extend(n):n}function Ee(n){if(r(n))for(var e=0;e<n.length;e++){var t=n[e];if(c(t)&&(c(t.componentOptions)||me(t)))return t}}function Ce(n,e,t,a,d,h){return(r(t)||s(t))&&(d=a,a=t,t=void 0),o(h)&&(d=2),function(n,e,t,a,s){if(c(t)&&c(t.__ob__))return mn();c(t)&&c(t.is)&&(e=t.is);if(!e)return mn();0;r(a)&&p(a[0])&&((t=t||{}).scopedSlots={default:a[0]},a.length=0);2===s?a=Jn(a):1===s&&(a=function(n){for(var e=0;e<n.length;e++)if(r(n[e]))return Array.prototype.concat.apply([],n);return n}(a));var d,h;if("string"==typeof e){var u=void 0;h=n.$vnode&&n.$vnode.ns||K.getTagNamespace(e),d=K.isReservedTag(e)?new fn(K.parsePlatformTagName(e),t,a,void 0,void 0,n):t&&t.pre||!c(u=zt(n.$options,"components",e))?new fn(e,t,a,void 0,void 0,n):_t(u,t,n,a,e)}else d=_t(e,t,n,a);return r(d)?d:c(d)?(c(h)&&function n(e,t,a){e.ns=t,"foreignObject"===e.tag&&(t=void 0,a=!0);if(c(e.children))for(var r=0,s=e.children.length;r<s;r++){var p=e.children[r];c(p.tag)&&(i(p.ns)||o(a)&&"svg"!==p.tag)&&n(p,t,a)}}(d,h),c(t)&&function(n){l(n.style)&&Ke(n.style);l(n.class)&&Ke(n.class)}(t),d):mn()}(n,e,t,a,d)}function Se(n,e,t){xn();try{if(e)for(var a=e;a=a.$parent;){var r=a.$options.errorCaptured;if(r)for(var i=0;i<r.length;i++)try{if(!1===r[i].call(a,n,e,t))return}catch(n){qe(n,a,"errorCaptured hook")}}qe(n,e,t)}finally{wn()}}function je(n,e,t,a,r){var i;try{(i=t?n.apply(e,t):n.call(e))&&!i._isVue&&m(i)&&!i._handled&&(i.catch((function(n){return Se(n,a,r+" (Promise/async)")})),i._handled=!0)}catch(n){Se(n,a,r)}return i}function qe(n,e,t){if(K.errorHandler)try{return K.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Pe(e,null,"config.errorHandler")}Pe(n,e,t)}function Pe(n,e,t){if(!W||"undefined"==typeof console)throw n;console.error(n)}var ze,Be=!1,Te=[],Ie=!1;function De(){Ie=!1;var n=Te.slice(0);Te.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&pn(Promise)){var He=Promise.resolve();ze=function(){He.then(De),nn&&setTimeout(I)},Be=!0}else if(Z||"undefined"==typeof MutationObserver||!pn(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())ze="undefined"!=typeof setImmediate&&pn(setImmediate)?function(){setImmediate(De)}:function(){setTimeout(De,0)};else{var Fe=1,Le=new MutationObserver(De),Me=document.createTextNode(String(Fe));Le.observe(Me,{characterData:!0}),ze=function(){Fe=(Fe+1)%2,Me.data=String(Fe)},Be=!0}function Re(n,e){var t;if(Te.push((function(){if(n)try{n.call(e)}catch(n){Se(n,e,"nextTick")}else t&&t(e)})),Ie||(Ie=!0,ze()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}function Ue(n){return function(e,t){if(void 0===t&&(t=hn),t)return function(n,e,t){var a=n.$options;a[e]=St(a[e],t)}(t,n,e)}}Ue("beforeMount"),Ue("mounted"),Ue("beforeUpdate"),Ue("updated"),Ue("beforeDestroy"),Ue("destroyed"),Ue("activated"),Ue("deactivated"),Ue("serverPrefetch"),Ue("renderTracked"),Ue("renderTriggered"),Ue("errorCaptured");var Oe=new ln;function Ke(n){return function n(e,t){var a,i,c=r(e);if(!c&&!l(e)||e.__v_skip||Object.isFrozen(e)||e instanceof fn)return;if(e.__ob__){var o=e.__ob__.dep.id;if(t.has(o))return;t.add(o)}if(c)for(a=e.length;a--;)n(e[a],t);else if(Rn(e))n(e.value,t);else for(i=Object.keys(e),a=i.length;a--;)n(e[i[a]],t)}(n,Oe),Oe.clear(),n}var Ne,Ge=0,Ve=function(){function n(n,e,t,a,r){var i,c;i=this,void 0===(c=On&&!On._vm?On:n?n._scope:void 0)&&(c=On),c&&c.active&&c.effects.push(i),(this.vm=n)&&r&&(n._watcher=this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Ge,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new ln,this.newDepIds=new ln,this.expression="",p(e)?this.getter=e:(this.getter=function(n){if(!Q.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=I)),this.value=this.lazy?void 0:this.get()}return n.prototype.get=function(){var n;xn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Se(n,e,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Ke(n),wn(),this.cleanupDeps()}return n},n.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},n.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},n.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():ut(this)},n.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||l(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'.concat(this.expression,'"');je(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},n.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},n.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},n.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&_(this.vm._scope.effects,this),this.active){for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},n}();function Qe(n,e){Ne.$on(n,e)}function Ye(n,e){Ne.$off(n,e)}function We(n,e){var t=Ne;return function a(){var r=e.apply(null,arguments);null!==r&&t.$off(n,a)}}function Je(n,e,t){Ne=n,Qn(e,t||{},Qe,Ye,We,n),Ne=void 0}var Ze=null;function Xe(n){var e=Ze;return Ze=n,function(){Ze=e}}function $e(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function nt(n,e){if(e){if(n._directInactive=!1,$e(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)nt(n.$children[t]);et(n,"activated")}}function et(n,e,t,a){void 0===a&&(a=!0),xn();var r=hn,i=On;a&&un(n);var c=n.$options[e],o="".concat(e," hook");if(c)for(var s=0,p=c.length;s<p;s++)je(c[s],n,t||null,n,o);n._hasHookEvent&&n.$emit("hook:"+e),a&&(un(r),i&&i.on()),wn()}var tt=[],at=[],rt={},it=!1,ct=!1,ot=0;var st=0,pt=Date.now;if(W&&!Z){var lt=window.performance;lt&&"function"==typeof lt.now&&pt()>document.createEvent("Event").timeStamp&&(pt=function(){return lt.now()})}var dt=function(n,e){if(n.post){if(!e.post)return 1}else if(e.post)return-1;return n.id-e.id};function ht(){var n,e;for(st=pt(),ct=!0,tt.sort(dt),ot=0;ot<tt.length;ot++)(n=tt[ot]).before&&n.before(),e=n.id,rt[e]=null,n.run();var t=at.slice(),a=tt.slice();ot=tt.length=at.length=0,rt={},it=ct=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,nt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],a=t.vm;a&&a._watcher===t&&a._isMounted&&!a._isDestroyed&&et(a,"updated")}}(a),function(){for(var n=0;n<vn.length;n++){var e=vn[n];e.subs=e.subs.filter((function(n){return n})),e._pending=!1}vn.length=0}(),sn&&K.devtools&&sn.emit("flush")}function ut(n){var e=n.id;if(null==rt[e]&&(n!==kn.target||!n.noRecurse)){if(rt[e]=!0,ct){for(var t=tt.length-1;t>ot&&tt[t].id>n.id;)t--;tt.splice(t+1,0,n)}else tt.push(n);it||(it=!0,Re(ht))}}function ft(n,e){if(n){for(var t=Object.create(null),a=dn?Reflect.ownKeys(n):Object.keys(n),r=0;r<a.length;r++){var i=a[r];if("__ob__"!==i){var c=n[i].from;if(c in e._provided)t[i]=e._provided[c];else if("default"in n[i]){var o=n[i].default;t[i]=p(o)?o.call(e):o}else 0}}return t}}function mt(n,e,t,i,c){var s,p=this,l=c.options;w(i,"_uid")?(s=Object.create(i))._original=i:(s=i,i=i._original);var d=o(l._compiled),h=!d;this.data=n,this.props=e,this.children=t,this.parent=i,this.listeners=n.on||a,this.injections=ft(l.inject,i),this.slots=function(){return p.$slots||be(i,n.scopedSlots,p.$slots=ue(t,i)),p.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return be(i,n.scopedSlots,this.slots())}}),d&&(this.$options=l,this.$slots=this.slots(),this.$scopedSlots=be(i,n.scopedSlots,this.$slots)),l._scopeId?this._c=function(n,e,t,a){var c=Ce(s,n,e,t,a,h);return c&&!r(c)&&(c.fnScopeId=l._scopeId,c.fnContext=i),c}:this._c=function(n,e,t,a){return Ce(s,n,e,t,a,h)}}function bt(n,e,t,a,r){var i=gn(n);return i.fnContext=t,i.fnOptions=a,e.slot&&((i.data||(i.data={})).slot=e.slot),i}function gt(n,e){for(var t in e)n[C(t)]=e[t]}function yt(n){return n.name||n.__name||n._componentTag}he(mt.prototype);var vt={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;vt.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},a=n.data.inlineTemplate;c(a)&&(t.render=a.render,t.staticRenderFns=a.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ze)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,r,i){var c=r.data.scopedSlots,o=n.$scopedSlots,s=!!(c&&!c.$stable||o!==a&&!o.$stable||c&&n.$scopedSlots.$key!==c.$key||!c&&n.$scopedSlots.$key),p=!!(i||n.$options._renderChildren||s),l=n.$vnode;n.$options._parentVnode=r,n.$vnode=r,n._vnode&&(n._vnode.parent=r),n.$options._renderChildren=i;var d=r.data.attrs||a;n._attrsProxy&&ke(n._attrsProxy,d,l.data&&l.data.attrs||a,n,"$attrs")&&(p=!0),n.$attrs=d,t=t||a;var h=n.$options._parentListeners;if(n._listenersProxy&&ke(n._listenersProxy,t,h||a,n,"$listeners"),n.$listeners=n.$options._parentListeners=t,Je(n,t,h),e&&n.$options.props){qn(!1);for(var u=n._props,f=n.$options._propKeys||[],m=0;m<f.length;m++){var b=f[m],g=n.$options.props;u[b]=Bt(b,g,e,n)}qn(!0),n.$options.propsData=e}p&&(n.$slots=ue(i,r.context),n.$forceUpdate())}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,a=n.componentInstance;a._isMounted||(a._isMounted=!0,et(a,"mounted")),n.data.keepAlive&&(t._isMounted?((e=a)._inactive=!1,at.push(e)):nt(a,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(!(t&&(e._directInactive=!0,$e(e))||e._inactive)){e._inactive=!0;for(var a=0;a<e.$children.length;a++)n(e.$children[a]);et(e,"deactivated")}}(e,!0):e.$destroy())}},kt=Object.keys(vt);function _t(n,e,t,s,p){if(!i(n)){var d=t.$options._base;if(l(n)&&(n=d.extend(n)),"function"==typeof n){var h;if(i(n.cid)&&void 0===(n=function(n,e){if(o(n.error)&&c(n.errorComp))return n.errorComp;if(c(n.resolved))return n.resolved;var t=we;if(t&&c(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t),o(n.loading)&&c(n.loadingComp))return n.loadingComp;if(t&&!c(n.owners)){var a=n.owners=[t],r=!0,s=null,p=null;t.$on("hook:destroyed",(function(){return _(a,t)}));var d=function(n){for(var e=0,t=a.length;e<t;e++)a[e].$forceUpdate();n&&(a.length=0,null!==s&&(clearTimeout(s),s=null),null!==p&&(clearTimeout(p),p=null))},h=M((function(t){n.resolved=Ae(t,e),r?a.length=0:d(!0)})),u=M((function(e){c(n.errorComp)&&(n.error=!0,d(!0))})),f=n(h,u);return l(f)&&(m(f)?i(n.resolved)&&f.then(h,u):m(f.component)&&(f.component.then(h,u),c(f.error)&&(n.errorComp=Ae(f.error,e)),c(f.loading)&&(n.loadingComp=Ae(f.loading,e),0===f.delay?n.loading=!0:s=setTimeout((function(){s=null,i(n.resolved)&&i(n.error)&&(n.loading=!0,d(!1))}),f.delay||200)),c(f.timeout)&&(p=setTimeout((function(){p=null,i(n.resolved)&&u(null)}),f.timeout)))),r=!1,n.loading?n.loadingComp:n.resolved}}(h=n,d)))return function(n,e,t,a,r){var i=mn();return i.asyncFactory=n,i.asyncMeta={data:e,context:t,children:a,tag:r},i}(h,e,t,s,p);e=e||{},Vt(n),c(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",a=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var i=e.on||(e.on={}),o=i[a],s=e.model.callback;c(o)?(r(o)?-1===o.indexOf(s):o!==s)&&(i[a]=[s].concat(o)):i[a]=s}(n.options,e);var u=function(n,e,t){var a=e.options.props;if(!i(a)){var r={},o=n.attrs,s=n.props;if(c(o)||c(s))for(var p in a){var l=q(p);Wn(r,s,p,l,!0)||Wn(r,o,p,l,!1)}return r}}(e,n);if(o(n.options.functional))return function(n,e,t,i,o){var s=n.options,p={},l=s.props;if(c(l))for(var d in l)p[d]=Bt(d,l,e||a);else c(t.attrs)&&gt(p,t.attrs),c(t.props)&&gt(p,t.props);var h=new mt(t,p,o,i,n),u=s.render.call(null,h._c,h);if(u instanceof fn)return bt(u,t,h.parent,s,h);if(r(u)){for(var f=Jn(u)||[],m=new Array(f.length),b=0;b<f.length;b++)m[b]=bt(f[b],t,h.parent,s,h);return m}}(n,u,e,t,s);var f=e.on;if(e.on=e.nativeOn,o(n.options.abstract)){var b=e.slot;e={},b&&(e.slot=b)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<kt.length;t++){var a=kt[t],r=e[a],i=vt[a];r===i||r&&r._merged||(e[a]=r?xt(i,r):i)}}(e);var g=yt(n.options)||p;return new fn("vue-component-".concat(n.cid).concat(g?"-".concat(g):""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:u,listeners:f,tag:p,children:s},h)}}}function xt(n,e){var t=function(t,a){n(t,a),e(t,a)};return t._merged=!0,t}var wt=I,At=K.optionMergeStrategies;function Et(n,e,t){if(void 0===t&&(t=!0),!e)return n;for(var a,r,i,c=dn?Reflect.ownKeys(e):Object.keys(e),o=0;o<c.length;o++)"__ob__"!==(a=c[o])&&(r=n[a],i=e[a],t&&w(n,a)?r!==i&&h(r)&&h(i)&&Et(r,i):In(n,a,i));return n}function Ct(n,e,t){return t?function(){var a=p(e)?e.call(t,t):e,r=p(n)?n.call(t,t):n;return a?Et(a,r):r}:e?n?function(){return Et(p(e)?e.call(this,this):e,p(n)?n.call(this,this):n)}:e:n}function St(n,e){var t=e?n?n.concat(e):r(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function jt(n,e,t,a){var r=Object.create(n||null);return e?B(r,e):r}At.data=function(n,e,t){return t?Ct(n,e,t):e&&"function"!=typeof e?n:Ct(n,e)},O.forEach((function(n){At[n]=St})),U.forEach((function(n){At[n+"s"]=jt})),At.watch=function(n,e,t,a){if(n===an&&(n=void 0),e===an&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var i={};for(var c in B(i,n),e){var o=i[c],s=e[c];o&&!r(o)&&(o=[o]),i[c]=o?o.concat(s):r(s)?s:[s]}return i},At.props=At.methods=At.inject=At.computed=function(n,e,t,a){if(!n)return e;var r=Object.create(null);return B(r,n),e&&B(r,e),r},At.provide=function(n,e){return n?function(){var t=Object.create(null);return Et(t,p(n)?n.call(this):n),e&&Et(t,p(e)?e.call(this):e,!1),t}:e};var qt=function(n,e){return void 0===e?n:e};function Pt(n,e,t){if(p(e)&&(e=e.options),function(n,e){var t=n.props;if(t){var a,i,c={};if(r(t))for(a=t.length;a--;)"string"==typeof(i=t[a])&&(c[C(i)]={type:null});else if(h(t))for(var o in t)i=t[o],c[C(o)]=h(i)?i:{type:i};else 0;n.props=c}}(e),function(n,e){var t=n.inject;if(t){var a=n.inject={};if(r(t))for(var i=0;i<t.length;i++)a[t[i]]={from:t[i]};else if(h(t))for(var c in t){var o=t[c];a[c]=h(o)?B({from:c},o):{from:o}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var a=e[t];p(a)&&(e[t]={bind:a,update:a})}}(e),!e._base&&(e.extends&&(n=Pt(n,e.extends,t)),e.mixins))for(var a=0,i=e.mixins.length;a<i;a++)n=Pt(n,e.mixins[a],t);var c,o={};for(c in n)s(c);for(c in e)w(n,c)||s(c);function s(a){var r=At[a]||qt;o[a]=r(n[a],e[a],t,a)}return o}function zt(n,e,t,a){if("string"==typeof t){var r=n[e];if(w(r,t))return r[t];var i=C(t);if(w(r,i))return r[i];var c=S(i);return w(r,c)?r[c]:r[t]||r[i]||r[c]}}function Bt(n,e,t,a){var r=e[n],i=!w(t,n),c=t[n],o=Ht(Boolean,r.type);if(o>-1)if(i&&!w(r,"default"))c=!1;else if(""===c||c===q(n)){var s=Ht(String,r.type);(s<0||o<s)&&(c=!0)}if(void 0===c){c=function(n,e,t){if(!w(e,"default"))return;var a=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return p(a)&&"Function"!==It(e.type)?a.call(n):a}(a,r,n);var l=jn;qn(!0),Bn(c),qn(l)}return c}var Tt=/^\s*function (\w+)/;function It(n){var e=n&&n.toString().match(Tt);return e?e[1]:""}function Dt(n,e){return It(n)===It(e)}function Ht(n,e){if(!r(e))return Dt(e,n)?0:-1;for(var t=0,a=e.length;t<a;t++)if(Dt(e[t],n))return t;return-1}var Ft={enumerable:!0,configurable:!0,get:I,set:I};function Lt(n,e,t){Ft.get=function(){return this[e][t]},Ft.set=function(n){this[e][t]=n},Object.defineProperty(n,t,Ft)}function Mt(n){var e=n.$options;if(e.props&&function(n,e){var t=n.$options.propsData||{},a=n._props=Fn({}),r=n.$options._propKeys=[];n.$parent&&qn(!1);var i=function(i){r.push(i);var c=Bt(i,e,t,n);Tn(a,i,c,void 0,!0),i in n||Lt(n,"_props",i)};for(var c in e)i(c);qn(!0)}(n,e.props),function(n){var e=n.$options,t=e.setup;if(t){var a=n._setupContext=ve(n);un(n),xn();var r=je(t,null,[n._props||Fn({}),a],n,"setup");if(wn(),un(),p(r))e.render=r;else if(l(r))if(n._setupState=r,r.__sfc){var i=n._setupProxy={};for(var c in r)"__sfc"!==c&&Un(i,r,c)}else for(var c in r)G(c)||Un(n,r,c);else 0}}(n),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?I:P(e[t],n)}(n,e.methods),e.data)!function(n){var e=n.$options.data;h(e=n._data=p(e)?function(n,e){xn();try{return n.call(e,e)}catch(n){return Se(n,e,"data()"),{}}finally{wn()}}(e,n):e||{})||(e={});var t=Object.keys(e),a=n.$options.props,r=(n.$options.methods,t.length);for(;r--;){var i=t[r];0,a&&w(a,i)||G(i)||Lt(n,"_data",i)}var c=Bn(e);c&&c.vmCount++}(n);else{var t=Bn(n._data={});t&&t.vmCount++}e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),a=on();for(var r in e){var i=e[r],c=p(i)?i:i.get;0,a||(t[r]=new Ve(n,c||I,I,Rt)),r in n||Ut(n,r,i)}}(n,e.computed),e.watch&&e.watch!==an&&function(n,e){for(var t in e){var a=e[t];if(r(a))for(var i=0;i<a.length;i++)Nt(n,t,a[i]);else Nt(n,t,a)}}(n,e.watch)}var Rt={lazy:!0};function Ut(n,e,t){var a=!on();p(t)?(Ft.get=a?Ot(e):Kt(t),Ft.set=I):(Ft.get=t.get?a&&!1!==t.cache?Ot(e):Kt(t.get):I,Ft.set=t.set||I),Object.defineProperty(n,e,Ft)}function Ot(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),kn.target&&e.depend(),e.value}}function Kt(n){return function(){return n.call(this,this)}}function Nt(n,e,t,a){return h(t)&&(a=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,a)}var Gt=0;function Vt(n){var e=n.options;if(n.super){var t=Vt(n.super);if(t!==n.superOptions){n.superOptions=t;var a=function(n){var e,t=n.options,a=n.sealedOptions;for(var r in t)t[r]!==a[r]&&(e||(e={}),e[r]=t[r]);return e}(n);a&&B(n.extendOptions,a),(e=n.options=Pt(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Qt(n){this._init(n)}function Yt(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,a=t.cid,r=n._Ctor||(n._Ctor={});if(r[a])return r[a];var i=yt(n)||yt(t.options);var c=function(n){this._init(n)};return(c.prototype=Object.create(t.prototype)).constructor=c,c.cid=e++,c.options=Pt(t.options,n),c.super=t,c.options.props&&function(n){var e=n.options.props;for(var t in e)Lt(n.prototype,"_props",t)}(c),c.options.computed&&function(n){var e=n.options.computed;for(var t in e)Ut(n.prototype,t,e[t])}(c),c.extend=t.extend,c.mixin=t.mixin,c.use=t.use,U.forEach((function(n){c[n]=t[n]})),i&&(c.options.components[i]=c),c.superOptions=t.options,c.extendOptions=n,c.sealedOptions=B({},c.options),r[a]=c,c}}function Wt(n){return n&&(yt(n.Ctor.options)||n.tag)}function Jt(n,e){return r(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!u(n)&&n.test(e)}function Zt(n,e){var t=n.cache,a=n.keys,r=n._vnode,i=n.$vnode;for(var c in t){var o=t[c];if(o){var s=o.name;s&&!e(s)&&Xt(t,c,a,r)}}i.componentOptions.children=void 0}function Xt(n,e,t,a){var r=n[e];!r||a&&r.tag===a.tag||r.componentInstance.$destroy(),n[e]=null,_(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=Gt++,e._isVue=!0,e.__v_skip=!0,e._scope=new Kn(!0),e._scope.parent=void 0,e._scope._vm=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),a=e._parentVnode;t.parent=e.parent,t._parentVnode=a;var r=a.componentOptions;t.propsData=r.propsData,t._parentListeners=r.listeners,t._renderChildren=r.children,t._componentTag=r.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=Pt(Vt(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._provided=t?t._provided:Object.create(null),n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Je(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,r=t&&t.context;n.$slots=ue(e._renderChildren,r),n.$scopedSlots=t?be(n.$parent,t.data.scopedSlots,n.$slots):a,n._c=function(e,t,a,r){return Ce(n,e,t,a,r,!1)},n.$createElement=function(e,t,a,r){return Ce(n,e,t,a,r,!0)};var i=t&&t.data;Tn(n,"$attrs",i&&i.attrs||a,null,!0),Tn(n,"$listeners",e._parentListeners||a,null,!0)}(e),et(e,"beforeCreate",void 0,!1),function(n){var e=ft(n.$options.inject,n);e&&(qn(!1),Object.keys(e).forEach((function(t){Tn(n,t,e[t])})),qn(!0))}(e),Mt(e),function(n){var e=n.$options.provide;if(e){var t=p(e)?e.call(n):e;if(!l(t))return;for(var a=Nn(n),r=dn?Reflect.ownKeys(t):Object.keys(t),i=0;i<r.length;i++){var c=r[i];Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(t,c))}}}(e),et(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(Qt),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=In,n.prototype.$delete=Dn,n.prototype.$watch=function(n,e,t){if(h(e))return Nt(this,n,e,t);(t=t||{}).user=!0;var a=new Ve(this,n,e,t);if(t.immediate){var r='callback for immediate watcher "'.concat(a.expression,'"');xn(),je(e,this,[a.value],this,r),wn()}return function(){a.teardown()}}}(Qt),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var a=this;if(r(n))for(var i=0,c=n.length;i<c;i++)a.$on(n[i],t);else(a._events[n]||(a._events[n]=[])).push(t),e.test(n)&&(a._hasHookEvent=!0);return a},n.prototype.$once=function(n,e){var t=this;function a(){t.$off(n,a),e.apply(t,arguments)}return a.fn=e,t.$on(n,a),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(r(n)){for(var a=0,i=n.length;a<i;a++)t.$off(n[a],e);return t}var c,o=t._events[n];if(!o)return t;if(!e)return t._events[n]=null,t;for(var s=o.length;s--;)if((c=o[s])===e||c.fn===e){o.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?z(t):t;for(var a=z(arguments,1),r='event handler for "'.concat(n,'"'),i=0,c=t.length;i<c;i++)je(t[i],e,a,e,r)}return e}}(Qt),function(n){n.prototype._update=function(n,e){var t=this,a=t.$el,r=t._vnode,i=Xe(t);t._vnode=n,t.$el=r?t.__patch__(r,n):t.__patch__(t.$el,n,e,!1),i(),a&&(a.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var c=t;c&&c.$vnode&&c.$parent&&c.$vnode===c.$parent._vnode;)c.$parent.$el=c.$el,c=c.$parent},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){et(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||_(e.$children,n),n._scope.stop(),n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),et(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Qt),function(n){he(n.prototype),n.prototype.$nextTick=function(n){return Re(n,this)},n.prototype._render=function(){var n=this,e=n.$options,t=e.render,a=e._parentVnode;a&&n._isMounted&&(n.$scopedSlots=be(n.$parent,a.data.scopedSlots,n.$slots,n.$scopedSlots),n._slotsProxy&&xe(n._slotsProxy,n.$scopedSlots)),n.$vnode=a;var i,c=hn,o=we;try{un(n),we=n,i=t.call(n._renderProxy,n.$createElement)}catch(e){Se(e,n,"render"),i=n._vnode}finally{we=o,un(c)}return r(i)&&1===i.length&&(i=i[0]),i instanceof fn||(i=mn()),i.parent=a,i}}(Qt);var $t=[String,RegExp,Array],na={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:$t,exclude:$t,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,a=this.keyToCache;if(t){var r=t.tag,i=t.componentInstance,c=t.componentOptions;n[a]={name:Wt(c),tag:r,componentInstance:i},e.push(a),this.max&&e.length>parseInt(this.max)&&Xt(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)Xt(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){Zt(n,(function(n){return Jt(e,n)}))})),this.$watch("exclude",(function(e){Zt(n,(function(n){return!Jt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Ee(n),t=e&&e.componentOptions;if(t){var a=Wt(t),r=this.include,i=this.exclude;if(r&&(!a||!Jt(r,a))||i&&a&&Jt(i,a))return e;var c=this.cache,o=this.keys,s=null==e.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):e.key;c[s]?(e.componentInstance=c[s].componentInstance,_(o,s),o.push(s)):(this.vnodeToCache=e,this.keyToCache=s),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return K}};Object.defineProperty(n,"config",e),n.util={warn:wt,extend:B,mergeOptions:Pt,defineReactive:Tn},n.set=In,n.delete=Dn,n.nextTick=Re,n.observable=function(n){return Bn(n),n},n.options=Object.create(null),U.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,B(n.options.components,na),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=z(arguments,1);return t.unshift(this),p(n.install)?n.install.apply(n,t):p(n)&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=Pt(this.options,n),this}}(n),Yt(n),function(n){U.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&h(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&p(t)&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Qt),Object.defineProperty(Qt.prototype,"$isServer",{get:on}),Object.defineProperty(Qt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Qt,"FunctionalRenderContext",{value:mt}),Qt.version="2.7.16";var ea=v("style,class"),ta=v("input,textarea,option,select,progress"),aa=v("contenteditable,draggable,spellcheck"),ra=v("events,caret,typing,plaintext-only"),ia=v("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),ca="http://www.w3.org/1999/xlink",oa=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},sa=function(n){return oa(n)?n.slice(6,n.length):""},pa=function(n){return null==n||!1===n};function la(n){for(var e=n.data,t=n,a=n;c(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(e=da(a.data,e));for(;c(t=t.parent);)t&&t.data&&(e=da(e,t.data));return function(n,e){if(c(n)||c(e))return ha(n,ua(e));return""}(e.staticClass,e.class)}function da(n,e){return{staticClass:ha(n.staticClass,e.staticClass),class:c(n.class)?[n.class,e.class]:e.class}}function ha(n,e){return n?e?n+" "+e:n:e||""}function ua(n){return Array.isArray(n)?function(n){for(var e,t="",a=0,r=n.length;a<r;a++)c(e=ua(n[a]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):l(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var fa={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},ma=v("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),ba=v("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),ga=function(n){return ma(n)||ba(n)};var ya=Object.create(null);var va=v("text,number,password,search,email,tel,url");var ka=Object.freeze({__proto__:null,createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(fa[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),_a={create:function(n,e){xa(e)},update:function(n,e){n.data.ref!==e.data.ref&&(xa(n,!0),xa(e))},destroy:function(n){xa(n,!0)}};function xa(n,e){var t=n.data.ref;if(c(t)){var a=n.context,i=n.componentInstance||n.elm,o=e?null:i,s=e?void 0:i;if(p(t))je(t,a,[o],a,"template ref function");else{var l=n.data.refInFor,d="string"==typeof t||"number"==typeof t,h=Rn(t),u=a.$refs;if(d||h)if(l){var f=d?u[t]:t.value;e?r(f)&&_(f,i):r(f)?f.includes(i)||f.push(i):d?(u[t]=[i],wa(a,t,u[t])):t.value=[i]}else if(d){if(e&&u[t]!==i)return;u[t]=s,wa(a,t,o)}else if(h){if(e&&t.value!==i)return;t.value=o}else 0}}}function wa(n,e,t){var a=n._setupState;a&&w(a,e)&&(Rn(a[e])?a[e].value=t:a[e]=t)}var Aa=new fn("",{},[]),Ea=["create","activate","update","remove","destroy"];function Ca(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&c(n.data)===c(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,a=c(t=n.data)&&c(t=t.attrs)&&t.type,r=c(t=e.data)&&c(t=t.attrs)&&t.type;return a===r||va(a)&&va(r)}(n,e)||o(n.isAsyncPlaceholder)&&i(e.asyncFactory.error))}function Sa(n,e,t){var a,r,i={};for(a=e;a<=t;++a)c(r=n[a].key)&&(i[r]=a);return i}var ja={create:qa,update:qa,destroy:function(n){qa(n,Aa)}};function qa(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,a,r,i=n===Aa,c=e===Aa,o=za(n.data.directives,n.context),s=za(e.data.directives,e.context),p=[],l=[];for(t in s)a=o[t],r=s[t],a?(r.oldValue=a.value,r.oldArg=a.arg,Ta(r,"update",e,n),r.def&&r.def.componentUpdated&&l.push(r)):(Ta(r,"bind",e,n),r.def&&r.def.inserted&&p.push(r));if(p.length){var d=function(){for(var t=0;t<p.length;t++)Ta(p[t],"inserted",e,n)};i?Yn(e,"insert",d):d()}l.length&&Yn(e,"postpatch",(function(){for(var t=0;t<l.length;t++)Ta(l[t],"componentUpdated",e,n)}));if(!i)for(t in o)s[t]||Ta(o[t],"unbind",n,n,c)}(n,e)}var Pa=Object.create(null);function za(n,e){var t,a,r=Object.create(null);if(!n)return r;for(t=0;t<n.length;t++){if((a=n[t]).modifiers||(a.modifiers=Pa),r[Ba(a)]=a,e._setupState&&e._setupState.__sfc){var i=a.def||zt(e,"_setupState","v-"+a.name);a.def="function"==typeof i?{bind:i,update:i}:i}a.def=a.def||zt(e.$options,"directives",a.name)}return r}function Ba(n){return n.rawName||"".concat(n.name,".").concat(Object.keys(n.modifiers||{}).join("."))}function Ta(n,e,t,a,r){var i=n.def&&n.def[e];if(i)try{i(t.elm,n,t,a,r)}catch(a){Se(a,t.context,"directive ".concat(n.name," ").concat(e," hook"))}}var Ia=[_a,ja];function Da(n,e){var t=e.componentOptions;if(!(c(t)&&!1===t.Ctor.options.inheritAttrs||i(n.data.attrs)&&i(e.data.attrs))){var a,r,s=e.elm,p=n.data.attrs||{},l=e.data.attrs||{};for(a in(c(l.__ob__)||o(l._v_attr_proxy))&&(l=e.data.attrs=B({},l)),l)r=l[a],p[a]!==r&&Ha(s,a,r,e.data.pre);for(a in(Z||$)&&l.value!==p.value&&Ha(s,"value",l.value),p)i(l[a])&&(oa(a)?s.removeAttributeNS(ca,sa(a)):aa(a)||s.removeAttribute(a))}}function Ha(n,e,t,a){a||n.tagName.indexOf("-")>-1?Fa(n,e,t):ia(e)?pa(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):aa(e)?n.setAttribute(e,function(n,e){return pa(e)||"false"===e?"false":"contenteditable"===n&&ra(e)?e:"true"}(e,t)):oa(e)?pa(t)?n.removeAttributeNS(ca,sa(e)):n.setAttributeNS(ca,e,t):Fa(n,e,t)}function Fa(n,e,t){if(pa(t))n.removeAttribute(e);else{if(Z&&!X&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var a=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",a)};n.addEventListener("input",a),n.__ieph=!0}n.setAttribute(e,t)}}var La={create:Da,update:Da};function Ma(n,e){var t=e.elm,a=e.data,r=n.data;if(!(i(a.staticClass)&&i(a.class)&&(i(r)||i(r.staticClass)&&i(r.class)))){var o=la(e),s=t._transitionClasses;c(s)&&(o=ha(o,ua(s))),o!==t._prevClass&&(t.setAttribute("class",o),t._prevClass=o)}}var Ra,Ua={create:Ma,update:Ma};function Oa(n,e,t){var a=Ra;return function r(){var i=e.apply(null,arguments);null!==i&&Ga(n,r,t,a)}}var Ka=Be&&!(tn&&Number(tn[1])<=53);function Na(n,e,t,a){if(Ka){var r=st,i=e;e=i._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=r||n.timeStamp<=0||n.target.ownerDocument!==document)return i.apply(this,arguments)}}Ra.addEventListener(n,e,rn?{capture:t,passive:a}:t)}function Ga(n,e,t,a){(a||Ra).removeEventListener(n,e._wrapper||e,t)}function Va(n,e){if(!i(n.data.on)||!i(e.data.on)){var t=e.data.on||{},a=n.data.on||{};Ra=e.elm||n.elm,function(n){if(c(n.__r)){var e=Z?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}c(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),Qn(t,a,Na,Ga,Oa,e.context),Ra=void 0}}var Qa,Ya={create:Va,update:Va,destroy:function(n){return Va(n,Aa)}};function Wa(n,e){if(!i(n.data.domProps)||!i(e.data.domProps)){var t,a,r=e.elm,s=n.data.domProps||{},p=e.data.domProps||{};for(t in(c(p.__ob__)||o(p._v_attr_proxy))&&(p=e.data.domProps=B({},p)),s)t in p||(r[t]="");for(t in p){if(a=p[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),a===s[t])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===t&&"PROGRESS"!==r.tagName){r._value=a;var l=i(a)?"":String(a);Ja(r,l)&&(r.value=l)}else if("innerHTML"===t&&ba(r.tagName)&&i(r.innerHTML)){(Qa=Qa||document.createElement("div")).innerHTML="<svg>".concat(a,"</svg>");for(var d=Qa.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;d.firstChild;)r.appendChild(d.firstChild)}else if(a!==s[t])try{r[t]=a}catch(n){}}}}function Ja(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,a=n._vModifiers;if(c(a)){if(a.number)return y(t)!==y(e);if(a.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Za={create:Wa,update:Wa},Xa=A((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var a=n.split(t);a.length>1&&(e[a[0].trim()]=a[1].trim())}})),e}));function $a(n){var e=nr(n.style);return n.staticStyle?B(n.staticStyle,e):e}function nr(n){return Array.isArray(n)?T(n):"string"==typeof n?Xa(n):n}var er,tr=/^--/,ar=/\s*!important$/,rr=function(n,e,t){if(tr.test(e))n.style.setProperty(e,t);else if(ar.test(t))n.style.setProperty(q(e),t.replace(ar,""),"important");else{var a=cr(e);if(Array.isArray(t))for(var r=0,i=t.length;r<i;r++)n.style[a]=t[r];else n.style[a]=t}},ir=["Webkit","Moz","ms"],cr=A((function(n){if(er=er||document.createElement("div").style,"filter"!==(n=C(n))&&n in er)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<ir.length;t++){var a=ir[t]+e;if(a in er)return a}}));function or(n,e){var t=e.data,a=n.data;if(!(i(t.staticStyle)&&i(t.style)&&i(a.staticStyle)&&i(a.style))){var r,o,s=e.elm,p=a.staticStyle,l=a.normalizedStyle||a.style||{},d=p||l,h=nr(e.data.style)||{};e.data.normalizedStyle=c(h.__ob__)?B({},h):h;var u=function(n,e){var t,a={};if(e)for(var r=n;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(t=$a(r.data))&&B(a,t);(t=$a(n.data))&&B(a,t);for(var i=n;i=i.parent;)i.data&&(t=$a(i.data))&&B(a,t);return a}(e,!0);for(o in d)i(u[o])&&rr(s,o,"");for(o in u)r=u[o],rr(s,o,null==r?"":r)}}var sr={create:or,update:or},pr=/\s+/;function lr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(pr).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" ".concat(n.getAttribute("class")||""," ");t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function dr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(pr).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" ".concat(n.getAttribute("class")||""," "),a=" "+e+" ";t.indexOf(a)>=0;)t=t.replace(a," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function hr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&B(e,ur(n.name||"v")),B(e,n),e}return"string"==typeof n?ur(n):void 0}}var ur=A((function(n){return{enterClass:"".concat(n,"-enter"),enterToClass:"".concat(n,"-enter-to"),enterActiveClass:"".concat(n,"-enter-active"),leaveClass:"".concat(n,"-leave"),leaveToClass:"".concat(n,"-leave-to"),leaveActiveClass:"".concat(n,"-leave-active")}})),fr=W&&!X,mr="transition",br="transitionend",gr="animation",yr="animationend";fr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(mr="WebkitTransition",br="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(gr="WebkitAnimation",yr="webkitAnimationEnd"));var vr=W?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function kr(n){vr((function(){vr(n)}))}function _r(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),lr(n,e))}function xr(n,e){n._transitionClasses&&_(n._transitionClasses,e),dr(n,e)}function wr(n,e,t){var a=Er(n,e),r=a.type,i=a.timeout,c=a.propCount;if(!r)return t();var o="transition"===r?br:yr,s=0,p=function(){n.removeEventListener(o,l),t()},l=function(e){e.target===n&&++s>=c&&p()};setTimeout((function(){s<c&&p()}),i+1),n.addEventListener(o,l)}var Ar=/\b(transform|all)(,|$)/;function Er(n,e){var t,a=window.getComputedStyle(n),r=(a[mr+"Delay"]||"").split(", "),i=(a[mr+"Duration"]||"").split(", "),c=Cr(r,i),o=(a[gr+"Delay"]||"").split(", "),s=(a[gr+"Duration"]||"").split(", "),p=Cr(o,s),l=0,d=0;return"transition"===e?c>0&&(t="transition",l=c,d=i.length):"animation"===e?p>0&&(t="animation",l=p,d=s.length):d=(t=(l=Math.max(c,p))>0?c>p?"transition":"animation":null)?"transition"===t?i.length:s.length:0,{type:t,timeout:l,propCount:d,hasTransform:"transition"===t&&Ar.test(a[mr+"Property"])}}function Cr(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return Sr(e)+Sr(n[t])})))}function Sr(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function jr(n,e){var t=n.elm;c(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var a=hr(n.data.transition);if(!i(a)&&!c(t._enterCb)&&1===t.nodeType){for(var r=a.css,o=a.type,s=a.enterClass,d=a.enterToClass,h=a.enterActiveClass,u=a.appearClass,f=a.appearToClass,m=a.appearActiveClass,b=a.beforeEnter,g=a.enter,v=a.afterEnter,k=a.enterCancelled,_=a.beforeAppear,x=a.appear,w=a.afterAppear,A=a.appearCancelled,E=a.duration,C=Ze,S=Ze.$vnode;S&&S.parent;)C=S.context,S=S.parent;var j=!C._isMounted||!n.isRootInsert;if(!j||x||""===x){var q=j&&u?u:s,P=j&&m?m:h,z=j&&f?f:d,B=j&&_||b,T=j&&p(x)?x:g,I=j&&w||v,D=j&&A||k,H=y(l(E)?E.enter:E);0;var F=!1!==r&&!X,L=zr(T),R=t._enterCb=M((function(){F&&(xr(t,z),xr(t,P)),R.cancelled?(F&&xr(t,q),D&&D(t)):I&&I(t),t._enterCb=null}));n.data.show||Yn(n,"insert",(function(){var e=t.parentNode,a=e&&e._pending&&e._pending[n.key];a&&a.tag===n.tag&&a.elm._leaveCb&&a.elm._leaveCb(),T&&T(t,R)})),B&&B(t),F&&(_r(t,q),_r(t,P),kr((function(){xr(t,q),R.cancelled||(_r(t,z),L||(Pr(H)?setTimeout(R,H):wr(t,o,R)))}))),n.data.show&&(e&&e(),T&&T(t,R)),F||L||R()}}}function qr(n,e){var t=n.elm;c(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var a=hr(n.data.transition);if(i(a)||1!==t.nodeType)return e();if(!c(t._leaveCb)){var r=a.css,o=a.type,s=a.leaveClass,p=a.leaveToClass,d=a.leaveActiveClass,h=a.beforeLeave,u=a.leave,f=a.afterLeave,m=a.leaveCancelled,b=a.delayLeave,g=a.duration,v=!1!==r&&!X,k=zr(u),_=y(l(g)?g.leave:g);0;var x=t._leaveCb=M((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),v&&(xr(t,p),xr(t,d)),x.cancelled?(v&&xr(t,s),m&&m(t)):(e(),f&&f(t)),t._leaveCb=null}));b?b(w):w()}function w(){x.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),h&&h(t),v&&(_r(t,s),_r(t,d),kr((function(){xr(t,s),x.cancelled||(_r(t,p),k||(Pr(_)?setTimeout(x,_):wr(t,o,x)))}))),u&&u(t,x),v||k||x())}}function Pr(n){return"number"==typeof n&&!isNaN(n)}function zr(n){if(i(n))return!1;var e=n.fns;return c(e)?zr(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function Br(n,e){!0!==e.data.show&&jr(e)}var Tr=function(n){var e,t,a={},p=n.modules,l=n.nodeOps;for(e=0;e<Ea.length;++e)for(a[Ea[e]]=[],t=0;t<p.length;++t)c(p[t][Ea[e]])&&a[Ea[e]].push(p[t][Ea[e]]);function d(n){var e=l.parentNode(n);c(e)&&l.removeChild(e,n)}function h(n,e,t,r,i,s,p){if(c(n.elm)&&c(s)&&(n=s[p]=gn(n)),n.isRootInsert=!i,!function(n,e,t,r){var i=n.data;if(c(i)){var s=c(n.componentInstance)&&i.keepAlive;if(c(i=i.hook)&&c(i=i.init)&&i(n,!1),c(n.componentInstance))return u(n,e),f(t,n.elm,r),o(s)&&function(n,e,t,r){var i,o=n;for(;o.componentInstance;)if(o=o.componentInstance._vnode,c(i=o.data)&&c(i=i.transition)){for(i=0;i<a.activate.length;++i)a.activate[i](Aa,o);e.push(o);break}f(t,n.elm,r)}(n,e,t,r),!0}}(n,e,t,r)){var d=n.data,h=n.children,b=n.tag;c(b)?(n.elm=n.ns?l.createElementNS(n.ns,b):l.createElement(b,n),y(n),m(n,h,e),c(d)&&g(n,e),f(t,n.elm,r)):o(n.isComment)?(n.elm=l.createComment(n.text),f(t,n.elm,r)):(n.elm=l.createTextNode(n.text),f(t,n.elm,r))}}function u(n,e){c(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,b(n)?(g(n,e),y(n)):(xa(n),e.push(n))}function f(n,e,t){c(n)&&(c(t)?l.parentNode(t)===n&&l.insertBefore(n,e,t):l.appendChild(n,e))}function m(n,e,t){if(r(e)){0;for(var a=0;a<e.length;++a)h(e[a],t,n.elm,null,!0,e,a)}else s(n.text)&&l.appendChild(n.elm,l.createTextNode(String(n.text)))}function b(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return c(n.tag)}function g(n,t){for(var r=0;r<a.create.length;++r)a.create[r](Aa,n);c(e=n.data.hook)&&(c(e.create)&&e.create(Aa,n),c(e.insert)&&t.push(n))}function y(n){var e;if(c(e=n.fnScopeId))l.setStyleScope(n.elm,e);else for(var t=n;t;)c(e=t.context)&&c(e=e.$options._scopeId)&&l.setStyleScope(n.elm,e),t=t.parent;c(e=Ze)&&e!==n.context&&e!==n.fnContext&&c(e=e.$options._scopeId)&&l.setStyleScope(n.elm,e)}function k(n,e,t,a,r,i){for(;a<=r;++a)h(t[a],i,n,e,!1,t,a)}function _(n){var e,t,r=n.data;if(c(r))for(c(e=r.hook)&&c(e=e.destroy)&&e(n),e=0;e<a.destroy.length;++e)a.destroy[e](n);if(c(e=n.children))for(t=0;t<n.children.length;++t)_(n.children[t])}function x(n,e,t){for(;e<=t;++e){var a=n[e];c(a)&&(c(a.tag)?(w(a),_(a)):d(a.elm))}}function w(n,e){if(c(e)||c(n.data)){var t,r=a.remove.length+1;for(c(e)?e.listeners+=r:e=function(n,e){function t(){0==--t.listeners&&d(n)}return t.listeners=e,t}(n.elm,r),c(t=n.componentInstance)&&c(t=t._vnode)&&c(t.data)&&w(t,e),t=0;t<a.remove.length;++t)a.remove[t](n,e);c(t=n.data.hook)&&c(t=t.remove)?t(n,e):e()}else d(n.elm)}function A(n,e,t,a){for(var r=t;r<a;r++){var i=e[r];if(c(i)&&Ca(n,i))return r}}function E(n,e,t,r,s,p){if(n!==e){c(e.elm)&&c(r)&&(e=r[s]=gn(e));var d=e.elm=n.elm;if(o(n.isAsyncPlaceholder))c(e.asyncFactory.resolved)?j(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(o(e.isStatic)&&o(n.isStatic)&&e.key===n.key&&(o(e.isCloned)||o(e.isOnce)))e.componentInstance=n.componentInstance;else{var u,f=e.data;c(f)&&c(u=f.hook)&&c(u=u.prepatch)&&u(n,e);var m=n.children,g=e.children;if(c(f)&&b(e)){for(u=0;u<a.update.length;++u)a.update[u](n,e);c(u=f.hook)&&c(u=u.update)&&u(n,e)}i(e.text)?c(m)&&c(g)?m!==g&&function(n,e,t,a,r){var o,s,p,d=0,u=0,f=e.length-1,m=e[0],b=e[f],g=t.length-1,y=t[0],v=t[g],_=!r;for(0;d<=f&&u<=g;)i(m)?m=e[++d]:i(b)?b=e[--f]:Ca(m,y)?(E(m,y,a,t,u),m=e[++d],y=t[++u]):Ca(b,v)?(E(b,v,a,t,g),b=e[--f],v=t[--g]):Ca(m,v)?(E(m,v,a,t,g),_&&l.insertBefore(n,m.elm,l.nextSibling(b.elm)),m=e[++d],v=t[--g]):Ca(b,y)?(E(b,y,a,t,u),_&&l.insertBefore(n,b.elm,m.elm),b=e[--f],y=t[++u]):(i(o)&&(o=Sa(e,d,f)),i(s=c(y.key)?o[y.key]:A(y,e,d,f))?h(y,a,n,m.elm,!1,t,u):Ca(p=e[s],y)?(E(p,y,a,t,u),e[s]=void 0,_&&l.insertBefore(n,p.elm,m.elm)):h(y,a,n,m.elm,!1,t,u),y=t[++u]);d>f?k(n,i(t[g+1])?null:t[g+1].elm,t,u,g,a):u>g&&x(e,d,f)}(d,m,g,t,p):c(g)?(c(n.text)&&l.setTextContent(d,""),k(d,null,g,0,g.length-1,t)):c(m)?x(m,0,m.length-1):c(n.text)&&l.setTextContent(d,""):n.text!==e.text&&l.setTextContent(d,e.text),c(f)&&c(u=f.hook)&&c(u=u.postpatch)&&u(n,e)}}}function C(n,e,t){if(o(t)&&c(n.parent))n.parent.data.pendingInsert=e;else for(var a=0;a<e.length;++a)e[a].data.hook.insert(e[a])}var S=v("attrs,class,staticClass,staticStyle,key");function j(n,e,t,a){var r,i=e.tag,s=e.data,p=e.children;if(a=a||s&&s.pre,e.elm=n,o(e.isComment)&&c(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(c(s)&&(c(r=s.hook)&&c(r=r.init)&&r(e,!0),c(r=e.componentInstance)))return u(e,t),!0;if(c(i)){if(c(p))if(n.hasChildNodes())if(c(r=s)&&c(r=r.domProps)&&c(r=r.innerHTML)){if(r!==n.innerHTML)return!1}else{for(var l=!0,d=n.firstChild,h=0;h<p.length;h++){if(!d||!j(d,p[h],t,a)){l=!1;break}d=d.nextSibling}if(!l||d)return!1}else m(e,p,t);if(c(s)){var f=!1;for(var b in s)if(!S(b)){f=!0,g(e,t);break}!f&&s.class&&Ke(s.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,r){if(!i(e)){var s,p=!1,d=[];if(i(n))p=!0,h(e,d);else{var u=c(n.nodeType);if(!u&&Ca(n,e))E(n,e,d,null,null,r);else{if(u){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),o(t)&&j(n,e,d))return C(e,d,!0),n;s=n,n=new fn(l.tagName(s).toLowerCase(),{},[],void 0,s)}var f=n.elm,m=l.parentNode(f);if(h(e,d,f._leaveCb?null:m,l.nextSibling(f)),c(e.parent))for(var g=e.parent,y=b(e);g;){for(var v=0;v<a.destroy.length;++v)a.destroy[v](g);if(g.elm=e.elm,y){for(var k=0;k<a.create.length;++k)a.create[k](Aa,g);var w=g.data.hook.insert;if(w.merged)for(var A=w.fns.slice(1),S=0;S<A.length;S++)A[S]()}else xa(g);g=g.parent}c(m)?x([n],0,0):c(n.tag)&&_(n)}}return C(e,d,p),e.elm}c(n)&&_(n)}}({nodeOps:ka,modules:[La,Ua,Ya,Za,sr,W?{create:Br,activate:Br,remove:function(n,e){!0!==n.data.show?qr(n,e):e()}}:{}].concat(Ia)});X&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&Ur(n,"input")}));var Ir={inserted:function(n,e,t,a){"select"===t.tag?(a.elm&&!a.elm._vOptions?Yn(t,"postpatch",(function(){Ir.componentUpdated(n,e,t)})):Dr(n,e,t.context),n._vOptions=[].map.call(n.options,Lr)):("textarea"===t.tag||va(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",Mr),n.addEventListener("compositionend",Rr),n.addEventListener("change",Rr),X&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){Dr(n,e,t.context);var a=n._vOptions,r=n._vOptions=[].map.call(n.options,Lr);if(r.some((function(n,e){return!F(n,a[e])})))(n.multiple?e.value.some((function(n){return Fr(n,r)})):e.value!==e.oldValue&&Fr(e.value,r))&&Ur(n,"change")}}};function Dr(n,e,t){Hr(n,e,t),(Z||$)&&setTimeout((function(){Hr(n,e,t)}),0)}function Hr(n,e,t){var a=e.value,r=n.multiple;if(!r||Array.isArray(a)){for(var i,c,o=0,s=n.options.length;o<s;o++)if(c=n.options[o],r)i=L(a,Lr(c))>-1,c.selected!==i&&(c.selected=i);else if(F(Lr(c),a))return void(n.selectedIndex!==o&&(n.selectedIndex=o));r||(n.selectedIndex=-1)}}function Fr(n,e){return e.every((function(e){return!F(e,n)}))}function Lr(n){return"_value"in n?n._value:n.value}function Mr(n){n.target.composing=!0}function Rr(n){n.target.composing&&(n.target.composing=!1,Ur(n.target,"input"))}function Ur(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function Or(n){return!n.componentInstance||n.data&&n.data.transition?n:Or(n.componentInstance._vnode)}var Kr={model:Ir,show:{bind:function(n,e,t){var a=e.value,r=(t=Or(t)).data&&t.data.transition,i=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;a&&r?(t.data.show=!0,jr(t,(function(){n.style.display=i}))):n.style.display=a?i:"none"},update:function(n,e,t){var a=e.value;!a!=!e.oldValue&&((t=Or(t)).data&&t.data.transition?(t.data.show=!0,a?jr(t,(function(){n.style.display=n.__vOriginalDisplay})):qr(t,(function(){n.style.display="none"}))):n.style.display=a?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,a,r){r||(n.style.display=n.__vOriginalDisplay)}}},Nr={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Gr(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?Gr(Ee(e.children)):n}function Vr(n){var e={},t=n.$options;for(var a in t.propsData)e[a]=n[a];var r=t._parentListeners;for(var a in r)e[C(a)]=r[a];return e}function Qr(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Yr=function(n){return n.tag||me(n)},Wr=function(n){return"show"===n.name},Jr={name:"transition",props:Nr,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Yr)).length){0;var a=this.mode;0;var r=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return r;var i=Gr(r);if(!i)return r;if(this._leaving)return Qr(n,r);var c="__transition-".concat(this._uid,"-");i.key=null==i.key?i.isComment?c+"comment":c+i.tag:s(i.key)?0===String(i.key).indexOf(c)?i.key:c+i.key:i.key;var o=(i.data||(i.data={})).transition=Vr(this),p=this._vnode,l=Gr(p);if(i.data.directives&&i.data.directives.some(Wr)&&(i.data.show=!0),l&&l.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(i,l)&&!me(l)&&(!l.componentInstance||!l.componentInstance._vnode.isComment)){var d=l.data.transition=B({},o);if("out-in"===a)return this._leaving=!0,Yn(d,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Qr(n,r);if("in-out"===a){if(me(i))return p;var h,u=function(){h()};Yn(o,"afterEnter",u),Yn(o,"enterCancelled",u),Yn(d,"delayLeave",(function(n){h=n}))}}return r}}},Zr=B({tag:String,moveClass:String},Nr);function Xr(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function $r(n){n.data.newPos=n.elm.getBoundingClientRect()}function ni(n){var e=n.data.pos,t=n.data.newPos,a=e.left-t.left,r=e.top-t.top;if(a||r){n.data.moved=!0;var i=n.elm.style;i.transform=i.WebkitTransform="translate(".concat(a,"px,").concat(r,"px)"),i.transitionDuration="0s"}}delete Zr.mode;var ei={Transition:Jr,TransitionGroup:{props:Zr,beforeMount:function(){var n=this,e=this._update;this._update=function(t,a){var r=Xe(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,r(),e.call(n,t,a)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),a=this.prevChildren=this.children,r=this.$slots.default||[],i=this.children=[],c=Vr(this),o=0;o<r.length;o++){if((l=r[o]).tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))i.push(l),t[l.key]=l,(l.data||(l.data={})).transition=c;else;}if(a){var s=[],p=[];for(o=0;o<a.length;o++){var l;(l=a[o]).data.transition=c,l.data.pos=l.elm.getBoundingClientRect(),t[l.key]?s.push(l):p.push(l)}this.kept=n(e,null,s),this.removed=p}return n(e,null,i)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(Xr),n.forEach($r),n.forEach(ni),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,a=t.style;_r(t,e),a.transform=a.WebkitTransform=a.transitionDuration="",t.addEventListener(br,t._moveCb=function n(a){a&&a.target!==t||a&&!/transform$/.test(a.propertyName)||(t.removeEventListener(br,n),t._moveCb=null,xr(t,e))})}})))},methods:{hasMove:function(n,e){if(!fr)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){dr(t,n)})),lr(t,e),t.style.display="none",this.$el.appendChild(t);var a=Er(t);return this.$el.removeChild(t),this._hasMove=a.hasTransform}}}};function ti(n,e){for(var t in e)n[t]=e[t];return n}Qt.config.mustUseProp=function(n,e,t){return"value"===t&&ta(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Qt.config.isReservedTag=ga,Qt.config.isReservedAttr=ea,Qt.config.getTagNamespace=function(n){return ba(n)?"svg":"math"===n?"math":void 0},Qt.config.isUnknownElement=function(n){if(!W)return!0;if(ga(n))return!1;if(n=n.toLowerCase(),null!=ya[n])return ya[n];var e=document.createElement(n);return n.indexOf("-")>-1?ya[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:ya[n]=/HTMLUnknownElement/.test(e.toString())},B(Qt.options.directives,Kr),B(Qt.options.components,ei),Qt.prototype.__patch__=W?Tr:I,Qt.prototype.$mount=function(n,e){return function(n,e,t){var a;n.$el=e,n.$options.render||(n.$options.render=mn),et(n,"beforeMount"),a=function(){n._update(n._render(),t)},new Ve(n,a,I,{before:function(){n._isMounted&&!n._isDestroyed&&et(n,"beforeUpdate")}},!0),t=!1;var r=n._preWatchers;if(r)for(var i=0;i<r.length;i++)r[i].run();return null==n.$vnode&&(n._isMounted=!0,et(n,"mounted")),n}(this,n=n&&W?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},W&&setTimeout((function(){K.devtools&&sn&&sn.emit("init",Qt)}),0);var ai=/[!'()*]/g,ri=function(n){return"%"+n.charCodeAt(0).toString(16)},ii=/%2C/g,ci=function(n){return encodeURIComponent(n).replace(ai,ri).replace(ii,",")};function oi(n){try{return decodeURIComponent(n)}catch(n){0}return n}var si=function(n){return null==n||"object"==typeof n?n:String(n)};function pi(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),a=oi(t.shift()),r=t.length>0?oi(t.join("=")):null;void 0===e[a]?e[a]=r:Array.isArray(e[a])?e[a].push(r):e[a]=[e[a],r]})),e):e}function li(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return ci(e);if(Array.isArray(t)){var a=[];return t.forEach((function(n){void 0!==n&&(null===n?a.push(ci(e)):a.push(ci(e)+"="+ci(n)))})),a.join("&")}return ci(e)+"="+ci(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var di=/\/?$/;function hi(n,e,t,a){var r=a&&a.options.stringifyQuery,i=e.query||{};try{i=ui(i)}catch(n){}var c={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:i,params:e.params||{},fullPath:bi(e,r),matched:n?mi(n):[]};return t&&(c.redirectedFrom=bi(t,r)),Object.freeze(c)}function ui(n){if(Array.isArray(n))return n.map(ui);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=ui(n[t]);return e}return n}var fi=hi(null,{path:"/"});function mi(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function bi(n,e){var t=n.path,a=n.query;void 0===a&&(a={});var r=n.hash;return void 0===r&&(r=""),(t||"/")+(e||li)(a)+r}function gi(n,e,t){return e===fi?n===e:!!e&&(n.path&&e.path?n.path.replace(di,"")===e.path.replace(di,"")&&(t||n.hash===e.hash&&yi(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&yi(n.query,e.query)&&yi(n.params,e.params))))}function yi(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),a=Object.keys(e).sort();return t.length===a.length&&t.every((function(t,r){var i=n[t];if(a[r]!==t)return!1;var c=e[t];return null==i||null==c?i===c:"object"==typeof i&&"object"==typeof c?yi(i,c):String(i)===String(c)}))}function vi(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var a in t.instances){var r=t.instances[a],i=t.enteredCbs[a];if(r&&i){delete t.enteredCbs[a];for(var c=0;c<i.length;c++)r._isBeingDestroyed||i[c](r)}}}}var ki={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,a=e.children,r=e.parent,i=e.data;i.routerView=!0;for(var c=r.$createElement,o=t.name,s=r.$route,p=r._routerViewCache||(r._routerViewCache={}),l=0,d=!1;r&&r._routerRoot!==r;){var h=r.$vnode?r.$vnode.data:{};h.routerView&&l++,h.keepAlive&&r._directInactive&&r._inactive&&(d=!0),r=r.$parent}if(i.routerViewDepth=l,d){var u=p[o],f=u&&u.component;return f?(u.configProps&&_i(f,i,u.route,u.configProps),c(f,i,a)):c()}var m=s.matched[l],b=m&&m.components[o];if(!m||!b)return p[o]=null,c();p[o]={component:b},i.registerRouteInstance=function(n,e){var t=m.instances[o];(e&&t!==n||!e&&t===n)&&(m.instances[o]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){m.instances[o]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==m.instances[o]&&(m.instances[o]=n.componentInstance),vi(s)};var g=m.props&&m.props[o];return g&&(ti(p[o],{route:s,configProps:g}),_i(b,i,s,g)),c(b,i,a)}};function _i(n,e,t,a){var r=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,a);if(r){r=e.props=ti({},r);var i=e.attrs=e.attrs||{};for(var c in r)n.props&&c in n.props||(i[c]=r[c],delete r[c])}}function xi(n,e,t){var a=n.charAt(0);if("/"===a)return n;if("?"===a||"#"===a)return e+n;var r=e.split("/");t&&r[r.length-1]||r.pop();for(var i=n.replace(/^\//,"").split("/"),c=0;c<i.length;c++){var o=i[c];".."===o?r.pop():"."!==o&&r.push(o)}return""!==r[0]&&r.unshift(""),r.join("/")}function wi(n){return n.replace(/\/(?:\s*\/)+/g,"/")}var Ai=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},Ei=Mi,Ci=zi,Si=function(n,e){return Ti(zi(n,e),e)},ji=Ti,qi=Li,Pi=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function zi(n,e){for(var t,a=[],r=0,i=0,c="",o=e&&e.delimiter||"/";null!=(t=Pi.exec(n));){var s=t[0],p=t[1],l=t.index;if(c+=n.slice(i,l),i=l+s.length,p)c+=p[1];else{var d=n[i],h=t[2],u=t[3],f=t[4],m=t[5],b=t[6],g=t[7];c&&(a.push(c),c="");var y=null!=h&&null!=d&&d!==h,v="+"===b||"*"===b,k="?"===b||"*"===b,_=t[2]||o,x=f||m;a.push({name:u||r++,prefix:h||"",delimiter:_,optional:k,repeat:v,partial:y,asterisk:!!g,pattern:x?Di(x):g?".*":"[^"+Ii(_)+"]+?"})}}return i<n.length&&(c+=n.substr(i)),c&&a.push(c),a}function Bi(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function Ti(n,e){for(var t=new Array(n.length),a=0;a<n.length;a++)"object"==typeof n[a]&&(t[a]=new RegExp("^(?:"+n[a].pattern+")$",Fi(e)));return function(e,a){for(var r="",i=e||{},c=(a||{}).pretty?Bi:encodeURIComponent,o=0;o<n.length;o++){var s=n[o];if("string"!=typeof s){var p,l=i[s.name];if(null==l){if(s.optional){s.partial&&(r+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(Ai(l)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(l)+"`");if(0===l.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var d=0;d<l.length;d++){if(p=c(l[d]),!t[o].test(p))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(p)+"`");r+=(0===d?s.prefix:s.delimiter)+p}}else{if(p=s.asterisk?encodeURI(l).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):c(l),!t[o].test(p))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+p+'"');r+=s.prefix+p}}else r+=s}return r}}function Ii(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function Di(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function Hi(n,e){return n.keys=e,n}function Fi(n){return n&&n.sensitive?"":"i"}function Li(n,e,t){Ai(e)||(t=e||t,e=[]);for(var a=(t=t||{}).strict,r=!1!==t.end,i="",c=0;c<n.length;c++){var o=n[c];if("string"==typeof o)i+=Ii(o);else{var s=Ii(o.prefix),p="(?:"+o.pattern+")";e.push(o),o.repeat&&(p+="(?:"+s+p+")*"),i+=p=o.optional?o.partial?s+"("+p+")?":"(?:"+s+"("+p+"))?":s+"("+p+")"}}var l=Ii(t.delimiter||"/"),d=i.slice(-l.length)===l;return a||(i=(d?i.slice(0,-l.length):i)+"(?:"+l+"(?=$))?"),i+=r?"$":a&&d?"":"(?="+l+"|$)",Hi(new RegExp("^"+i,Fi(t)),e)}function Mi(n,e,t){return Ai(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var a=0;a<t.length;a++)e.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return Hi(n,e)}(n,e):Ai(n)?function(n,e,t){for(var a=[],r=0;r<n.length;r++)a.push(Mi(n[r],e,t).source);return Hi(new RegExp("(?:"+a.join("|")+")",Fi(t)),e)}(n,e,t):function(n,e,t){return Li(zi(n,t),e,t)}(n,e,t)}Ei.parse=Ci,Ei.compile=Si,Ei.tokensToFunction=ji,Ei.tokensToRegExp=qi;var Ri=Object.create(null);function Ui(n,e,t){e=e||{};try{var a=Ri[n]||(Ri[n]=Ei.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),a(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function Oi(n,e,t,a){var r="string"==typeof n?{path:n}:n;if(r._normalized)return r;if(r.name){var i=(r=ti({},n)).params;return i&&"object"==typeof i&&(r.params=ti({},i)),r}if(!r.path&&r.params&&e){(r=ti({},r))._normalized=!0;var c=ti(ti({},e.params),r.params);if(e.name)r.name=e.name,r.params=c;else if(e.matched.length){var o=e.matched[e.matched.length-1].path;r.path=Ui(o,c,e.path)}else 0;return r}var s=function(n){var e="",t="",a=n.indexOf("#");a>=0&&(e=n.slice(a),n=n.slice(0,a));var r=n.indexOf("?");return r>=0&&(t=n.slice(r+1),n=n.slice(0,r)),{path:n,query:t,hash:e}}(r.path||""),p=e&&e.path||"/",l=s.path?xi(s.path,p,t||r.append):p,d=function(n,e,t){void 0===e&&(e={});var a,r=t||pi;try{a=r(n||"")}catch(n){a={}}for(var i in e){var c=e[i];a[i]=Array.isArray(c)?c.map(si):si(c)}return a}(s.query,r.query,a&&a.options.parseQuery),h=r.hash||s.hash;return h&&"#"!==h.charAt(0)&&(h="#"+h),{_normalized:!0,path:l,query:d,hash:h}}var Ki,Ni=function(){},Gi={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,a=this.$route,r=t.resolve(this.to,a,this.append),i=r.location,c=r.route,o=r.href,s={},p=t.options.linkActiveClass,l=t.options.linkExactActiveClass,d=null==p?"router-link-active":p,h=null==l?"router-link-exact-active":l,u=null==this.activeClass?d:this.activeClass,f=null==this.exactActiveClass?h:this.exactActiveClass,m=c.redirectedFrom?hi(null,Oi(c.redirectedFrom),null,t):c;s[f]=gi(a,m,this.exactPath),s[u]=this.exact||this.exactPath?s[f]:function(n,e){return 0===n.path.replace(di,"/").indexOf(e.path.replace(di,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(a,m);var b=s[f]?this.ariaCurrentValue:null,g=function(n){Vi(n)&&(e.replace?t.replace(i,Ni):t.push(i,Ni))},y={click:Vi};Array.isArray(this.event)?this.event.forEach((function(n){y[n]=g})):y[this.event]=g;var v={class:s},k=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:o,route:c,navigate:g,isActive:s[u],isExactActive:s[f]});if(k){if(1===k.length)return k[0];if(k.length>1||!k.length)return 0===k.length?n():n("span",{},k)}if("a"===this.tag)v.on=y,v.attrs={href:o,"aria-current":b};else{var _=function n(e){var t;if(e)for(var a=0;a<e.length;a++){if("a"===(t=e[a]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(_){_.isStatic=!1;var x=_.data=ti({},_.data);for(var w in x.on=x.on||{},x.on){var A=x.on[w];w in y&&(x.on[w]=Array.isArray(A)?A:[A])}for(var E in y)E in x.on?x.on[E].push(y[E]):x.on[E]=g;var C=_.data.attrs=ti({},_.data.attrs);C.href=o,C["aria-current"]=b}else v.on=y}return n(this.tag,v,this.$slots.default)}};function Vi(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var Qi="undefined"!=typeof window;function Yi(n,e,t,a,r){var i=e||[],c=t||Object.create(null),o=a||Object.create(null);n.forEach((function(n){!function n(e,t,a,r,i,c){var o=r.path,s=r.name;0;var p=r.pathToRegexpOptions||{},l=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return wi(e.path+"/"+n)}(o,i,p.strict);"boolean"==typeof r.caseSensitive&&(p.sensitive=r.caseSensitive);var d={path:l,regex:Wi(l,p),components:r.components||{default:r.component},alias:r.alias?"string"==typeof r.alias?[r.alias]:r.alias:[],instances:{},enteredCbs:{},name:s,parent:i,matchAs:c,redirect:r.redirect,beforeEnter:r.beforeEnter,meta:r.meta||{},props:null==r.props?{}:r.components?r.props:{default:r.props}};r.children&&r.children.forEach((function(r){var i=c?wi(c+"/"+r.path):void 0;n(e,t,a,r,d,i)}));t[d.path]||(e.push(d.path),t[d.path]=d);if(void 0!==r.alias)for(var h=Array.isArray(r.alias)?r.alias:[r.alias],u=0;u<h.length;++u){0;var f={path:h[u],children:r.children};n(e,t,a,f,i,d.path||"/")}s&&(a[s]||(a[s]=d))}(i,c,o,n,r)}));for(var s=0,p=i.length;s<p;s++)"*"===i[s]&&(i.push(i.splice(s,1)[0]),p--,s--);return{pathList:i,pathMap:c,nameMap:o}}function Wi(n,e){return Ei(n,[],e)}function Ji(n,e){var t=Yi(n),a=t.pathList,r=t.pathMap,i=t.nameMap;function c(n,t,c){var o=Oi(n,t,!1,e),p=o.name;if(p){var l=i[p];if(!l)return s(null,o);var d=l.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof o.params&&(o.params={}),t&&"object"==typeof t.params)for(var h in t.params)!(h in o.params)&&d.indexOf(h)>-1&&(o.params[h]=t.params[h]);return o.path=Ui(l.path,o.params),s(l,o,c)}if(o.path){o.params={};for(var u=0;u<a.length;u++){var f=a[u],m=r[f];if(Zi(m.regex,o.path,o.params))return s(m,o,c)}}return s(null,o)}function o(n,t){var a=n.redirect,r="function"==typeof a?a(hi(n,t,null,e)):a;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return s(null,t);var o=r,p=o.name,l=o.path,d=t.query,h=t.hash,u=t.params;if(d=o.hasOwnProperty("query")?o.query:d,h=o.hasOwnProperty("hash")?o.hash:h,u=o.hasOwnProperty("params")?o.params:u,p){i[p];return c({_normalized:!0,name:p,query:d,hash:h,params:u},void 0,t)}if(l){var f=function(n,e){return xi(n,e.parent?e.parent.path:"/",!0)}(l,n);return c({_normalized:!0,path:Ui(f,u),query:d,hash:h},void 0,t)}return s(null,t)}function s(n,t,a){return n&&n.redirect?o(n,a||t):n&&n.matchAs?function(n,e,t){var a=c({_normalized:!0,path:Ui(t,e.params)});if(a){var r=a.matched,i=r[r.length-1];return e.params=a.params,s(i,e)}return s(null,e)}(0,t,n.matchAs):hi(n,t,a,e)}return{match:c,addRoute:function(n,e){var t="object"!=typeof n?i[n]:void 0;Yi([e||n],a,r,i,t),t&&t.alias.length&&Yi(t.alias.map((function(n){return{path:n,children:[e]}})),a,r,i,t)},getRoutes:function(){return a.map((function(n){return r[n]}))},addRoutes:function(n){Yi(n,a,r,i)}}}function Zi(n,e,t){var a=e.match(n);if(!a)return!1;if(!t)return!0;for(var r=1,i=a.length;r<i;++r){var c=n.keys[r-1];c&&(t[c.name||"pathMatch"]="string"==typeof a[r]?oi(a[r]):a[r])}return!0}var Xi=Qi&&window.performance&&window.performance.now?window.performance:Date;function $i(){return Xi.now().toFixed(3)}var nc=$i();function ec(){return nc}function tc(n){return nc=n}var ac=Object.create(null);function rc(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=ti({},window.history.state);return t.key=ec(),window.history.replaceState(t,"",e),window.addEventListener("popstate",oc),function(){window.removeEventListener("popstate",oc)}}function ic(n,e,t,a){if(n.app){var r=n.options.scrollBehavior;r&&n.app.$nextTick((function(){var i=function(){var n=ec();if(n)return ac[n]}(),c=r.call(n,e,t,a?i:null);c&&("function"==typeof c.then?c.then((function(n){hc(n,i)})).catch((function(n){0})):hc(c,i))}))}}function cc(){var n=ec();n&&(ac[n]={x:window.pageXOffset,y:window.pageYOffset})}function oc(n){cc(),n.state&&n.state.key&&tc(n.state.key)}function sc(n){return lc(n.x)||lc(n.y)}function pc(n){return{x:lc(n.x)?n.x:window.pageXOffset,y:lc(n.y)?n.y:window.pageYOffset}}function lc(n){return"number"==typeof n}var dc=/^#\d/;function hc(n,e){var t,a="object"==typeof n;if(a&&"string"==typeof n.selector){var r=dc.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(r){var i=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),a=n.getBoundingClientRect();return{x:a.left-t.left-e.x,y:a.top-t.top-e.y}}(r,i={x:lc((t=i).x)?t.x:0,y:lc(t.y)?t.y:0})}else sc(n)&&(e=pc(n))}else a&&sc(n)&&(e=pc(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var uc,fc=Qi&&((-1===(uc=window.navigator.userAgent).indexOf("Android 2.")&&-1===uc.indexOf("Android 4.0")||-1===uc.indexOf("Mobile Safari")||-1!==uc.indexOf("Chrome")||-1!==uc.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function mc(n,e){cc();var t=window.history;try{if(e){var a=ti({},t.state);a.key=ec(),t.replaceState(a,"",n)}else t.pushState({key:tc($i())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function bc(n){mc(n,!0)}var gc={redirected:2,aborted:4,cancelled:8,duplicated:16};function yc(n,e){return kc(n,e,gc.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return _c.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function vc(n,e){return kc(n,e,gc.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function kc(n,e,t,a){var r=new Error(a);return r._isRouter=!0,r.from=n,r.to=e,r.type=t,r}var _c=["params","query","hash"];function xc(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function wc(n,e){return xc(n)&&n._isRouter&&(null==e||n.type===e)}function Ac(n,e,t){var a=function(r){r>=n.length?t():n[r]?e(n[r],(function(){a(r+1)})):a(r+1)};a(0)}function Ec(n){return function(e,t,a){var r=!1,i=0,c=null;Cc(n,(function(n,e,t,o){if("function"==typeof n&&void 0===n.cid){r=!0,i++;var s,p=qc((function(e){var r;((r=e).__esModule||jc&&"Module"===r[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:Ki.extend(e),t.components[o]=e,--i<=0&&a()})),l=qc((function(n){var e="Failed to resolve async component "+o+": "+n;c||(c=xc(n)?n:new Error(e),a(c))}));try{s=n(p,l)}catch(n){l(n)}if(s)if("function"==typeof s.then)s.then(p,l);else{var d=s.component;d&&"function"==typeof d.then&&d.then(p,l)}}})),r||a()}}function Cc(n,e){return Sc(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function Sc(n){return Array.prototype.concat.apply([],n)}var jc="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function qc(n){var e=!1;return function(){for(var t=[],a=arguments.length;a--;)t[a]=arguments[a];if(!e)return e=!0,n.apply(this,t)}}var Pc=function(n,e){this.router=n,this.base=function(n){if(!n)if(Qi){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=fi,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function zc(n,e,t,a){var r=Cc(n,(function(n,a,r,i){var c=function(n,e){"function"!=typeof n&&(n=Ki.extend(n));return n.options[e]}(n,e);if(c)return Array.isArray(c)?c.map((function(n){return t(n,a,r,i)})):t(c,a,r,i)}));return Sc(a?r.reverse():r)}function Bc(n,e){if(e)return function(){return n.apply(e,arguments)}}Pc.prototype.listen=function(n){this.cb=n},Pc.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Pc.prototype.onError=function(n){this.errorCbs.push(n)},Pc.prototype.transitionTo=function(n,e,t){var a,r=this;try{a=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var i=this.current;this.confirmTransition(a,(function(){r.updateRoute(a),e&&e(a),r.ensureURL(),r.router.afterHooks.forEach((function(n){n&&n(a,i)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(n){n(a)})))}),(function(n){t&&t(n),n&&!r.ready&&(wc(n,gc.redirected)&&i===fi||(r.ready=!0,r.readyErrorCbs.forEach((function(e){e(n)}))))}))},Pc.prototype.confirmTransition=function(n,e,t){var a=this,r=this.current;this.pending=n;var i,c,o=function(n){!wc(n)&&xc(n)&&(a.errorCbs.length?a.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},s=n.matched.length-1,p=r.matched.length-1;if(gi(n,r)&&s===p&&n.matched[s]===r.matched[p])return this.ensureURL(),n.hash&&ic(this.router,r,n,!1),o(((c=kc(i=r,n,gc.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",c));var l=function(n,e){var t,a=Math.max(n.length,e.length);for(t=0;t<a&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),d=l.updated,h=l.deactivated,u=l.activated,f=[].concat(function(n){return zc(n,"beforeRouteLeave",Bc,!0)}(h),this.router.beforeHooks,function(n){return zc(n,"beforeRouteUpdate",Bc)}(d),u.map((function(n){return n.beforeEnter})),Ec(u)),m=function(e,t){if(a.pending!==n)return o(vc(r,n));try{e(n,r,(function(e){!1===e?(a.ensureURL(!0),o(function(n,e){return kc(n,e,gc.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(r,n))):xc(e)?(a.ensureURL(!0),o(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(o(yc(r,n)),"object"==typeof e&&e.replace?a.replace(e):a.push(e)):t(e)}))}catch(n){o(n)}};Ac(f,m,(function(){Ac(function(n){return zc(n,"beforeRouteEnter",(function(n,e,t,a){return function(n,e,t){return function(a,r,i){return n(a,r,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),i(n)}))}}(n,t,a)}))}(u).concat(a.router.resolveHooks),m,(function(){if(a.pending!==n)return o(vc(r,n));a.pending=null,e(n),a.router.app&&a.router.app.$nextTick((function(){vi(n)}))}))}))},Pc.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Pc.prototype.setupListeners=function(){},Pc.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=fi,this.pending=null};var Tc=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Ic(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,a=fc&&t;a&&this.listeners.push(rc());var r=function(){var t=n.current,r=Ic(n.base);n.current===fi&&r===n._startLocation||n.transitionTo(r,(function(n){a&&ic(e,n,t,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){mc(wi(a.base+n.fullPath)),ic(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){bc(wi(a.base+n.fullPath)),ic(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Ic(this.base)!==this.current.fullPath){var e=wi(this.base+this.current.fullPath);n?mc(e):bc(e)}},e.prototype.getCurrentLocation=function(){return Ic(this.base)},e}(Pc);function Ic(n){var e=window.location.pathname,t=e.toLowerCase(),a=n.toLowerCase();return!n||t!==a&&0!==t.indexOf(wi(a+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Dc=function(n){function e(e,t,a){n.call(this,e,t),a&&function(n){var e=Ic(n);if(!/^\/#/.test(e))return window.location.replace(wi(n+"/#"+e)),!0}(this.base)||Hc()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=fc&&e;t&&this.listeners.push(rc());var a=function(){var e=n.current;Hc()&&n.transitionTo(Fc(),(function(a){t&&ic(n.router,a,e,!0),fc||Rc(a.fullPath)}))},r=fc?"popstate":"hashchange";window.addEventListener(r,a),this.listeners.push((function(){window.removeEventListener(r,a)}))}},e.prototype.push=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){Mc(n.fullPath),ic(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this,r=this.current;this.transitionTo(n,(function(n){Rc(n.fullPath),ic(a.router,n,r,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Fc()!==e&&(n?Mc(e):Rc(e))},e.prototype.getCurrentLocation=function(){return Fc()},e}(Pc);function Hc(){var n=Fc();return"/"===n.charAt(0)||(Rc("/"+n),!1)}function Fc(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Lc(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function Mc(n){fc?mc(Lc(n)):window.location.hash=n}function Rc(n){fc?bc(Lc(n)):window.location.replace(Lc(n))}var Uc=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var a=this;this.transitionTo(n,(function(n){a.stack=a.stack.slice(0,a.index+1).concat(n),a.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var a=this;this.transitionTo(n,(function(n){a.stack=a.stack.slice(0,a.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var a=this.stack[t];this.confirmTransition(a,(function(){var n=e.current;e.index=t,e.updateRoute(a),e.router.afterHooks.forEach((function(e){e&&e(a,n)}))}),(function(n){wc(n,gc.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Pc),Oc=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=Ji(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!fc&&!1!==n.fallback,this.fallback&&(e="hash"),Qi||(e="abstract"),this.mode=e,e){case"history":this.history=new Tc(this,n.base);break;case"hash":this.history=new Dc(this,n.base,this.fallback);break;case"abstract":this.history=new Uc(this,n.base);break;default:0}},Kc={currentRoute:{configurable:!0}};Oc.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Kc.currentRoute.get=function(){return this.history&&this.history.current},Oc.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof Tc||t instanceof Dc){var a=function(n){t.setupListeners(),function(n){var a=t.current,r=e.options.scrollBehavior;fc&&r&&"fullPath"in n&&ic(e,n,a,!1)}(n)};t.transitionTo(t.getCurrentLocation(),a,a)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Oc.prototype.beforeEach=function(n){return Gc(this.beforeHooks,n)},Oc.prototype.beforeResolve=function(n){return Gc(this.resolveHooks,n)},Oc.prototype.afterEach=function(n){return Gc(this.afterHooks,n)},Oc.prototype.onReady=function(n,e){this.history.onReady(n,e)},Oc.prototype.onError=function(n){this.history.onError(n)},Oc.prototype.push=function(n,e,t){var a=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){a.history.push(n,e,t)}));this.history.push(n,e,t)},Oc.prototype.replace=function(n,e,t){var a=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){a.history.replace(n,e,t)}));this.history.replace(n,e,t)},Oc.prototype.go=function(n){this.history.go(n)},Oc.prototype.back=function(){this.go(-1)},Oc.prototype.forward=function(){this.go(1)},Oc.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Oc.prototype.resolve=function(n,e,t){var a=Oi(n,e=e||this.history.current,t,this),r=this.match(a,e),i=r.redirectedFrom||r.fullPath;return{location:a,route:r,href:function(n,e,t){var a="hash"===t?"#"+e:e;return n?wi(n+"/"+a):a}(this.history.base,i,this.mode),normalizedTo:a,resolved:r}},Oc.prototype.getRoutes=function(){return this.matcher.getRoutes()},Oc.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==fi&&this.history.transitionTo(this.history.getCurrentLocation())},Oc.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==fi&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Oc.prototype,Kc);var Nc=Oc;function Gc(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Oc.install=function n(e){if(!n.installed||Ki!==e){n.installed=!0,Ki=e;var t=function(n){return void 0!==n},a=function(n,e){var a=n.$options._parentVnode;t(a)&&t(a=a.data)&&t(a=a.registerRouteInstance)&&a(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",ki),e.component("RouterLink",Gi);var r=e.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},Oc.version="3.6.5",Oc.isNavigationFailure=wc,Oc.NavigationFailureType=gc,Oc.START_LOCATION=fi,Qi&&window.Vue&&window.Vue.use(Oc);t(154),t(18),t(163);t(164),t(28);var Vc={NotFound:()=>Promise.all([t.e(0),t.e(16)]).then(t.bind(null,401)),Layout:()=>Promise.all([t.e(0),t.e(3),t.e(2)]).then(t.bind(null,400))},Qc={"v-a2faba12":()=>t.e(23).then(t.bind(null,413)),"v-497f3aa6":()=>t.e(24).then(t.bind(null,414)),"v-1caff22a":()=>t.e(25).then(t.bind(null,415)),"v-31b14f6e":()=>t.e(26).then(t.bind(null,416)),"v-72251b30":()=>t.e(27).then(t.bind(null,417)),"v-e8c1dd50":()=>t.e(30).then(t.bind(null,418)),"v-e11104d0":()=>t.e(29).then(t.bind(null,419)),"v-4b7718dc":()=>t.e(31).then(t.bind(null,420)),"v-d9602c50":()=>t.e(28).then(t.bind(null,421)),"v-43831352":()=>Promise.all([t.e(0),t.e(17)]).then(t.bind(null,422)),"v-71dca100":()=>t.e(32).then(t.bind(null,423)),"v-774b903f":()=>t.e(33).then(t.bind(null,424)),"v-cf14bae6":()=>t.e(34).then(t.bind(null,425)),"v-75220eb0":()=>Promise.all([t.e(0),t.e(18)]).then(t.bind(null,426)),"v-00eb683b":()=>Promise.all([t.e(0),t.e(19)]).then(t.bind(null,427)),"v-12fd4846":()=>t.e(35).then(t.bind(null,428)),"v-396691d7":()=>t.e(36).then(t.bind(null,429)),"v-70a22d8c":()=>t.e(38).then(t.bind(null,430)),"v-5f6ade6d":()=>t.e(37).then(t.bind(null,431)),"v-30db7074":()=>t.e(39).then(t.bind(null,432)),"v-6196f284":()=>t.e(40).then(t.bind(null,433)),"v-255664fc":()=>t.e(41).then(t.bind(null,434)),"v-41db7438":()=>t.e(42).then(t.bind(null,435)),"v-ac84e75c":()=>t.e(43).then(t.bind(null,436)),"v-3e53f494":()=>t.e(44).then(t.bind(null,437)),"v-168987d2":()=>t.e(45).then(t.bind(null,438)),"v-32e76611":()=>Promise.all([t.e(0),t.e(20)]).then(t.bind(null,439)),"v-1d543c28":()=>t.e(48).then(t.bind(null,440)),"v-52e60810":()=>t.e(46).then(t.bind(null,441)),"v-18262f98":()=>t.e(49).then(t.bind(null,442)),"v-427388d0":()=>t.e(47).then(t.bind(null,443)),"v-fe93e898":()=>t.e(50).then(t.bind(null,444)),"v-d22bfcd8":()=>t.e(51).then(t.bind(null,445)),"v-782a7e48":()=>t.e(52).then(t.bind(null,446)),"v-68e5da7e":()=>t.e(55).then(t.bind(null,447)),"v-4746c731":()=>t.e(53).then(t.bind(null,448)),"v-6312fbd8":()=>t.e(54).then(t.bind(null,449)),"v-01e22594":()=>t.e(56).then(t.bind(null,450)),"v-6e72af60":()=>t.e(58).then(t.bind(null,451)),"v-1711ca03":()=>t.e(57).then(t.bind(null,452)),"v-be5fa950":()=>t.e(59).then(t.bind(null,453)),"v-e16ad51e":()=>t.e(60).then(t.bind(null,454)),"v-e14188de":()=>t.e(61).then(t.bind(null,455)),"v-98911a1e":()=>Promise.all([t.e(0),t.e(21)]).then(t.bind(null,456)),"v-14676614":()=>t.e(62).then(t.bind(null,457)),"v-1111a9df":()=>t.e(63).then(t.bind(null,458)),"v-1498a0d1":()=>t.e(64).then(t.bind(null,459)),"v-833f7130":()=>t.e(65).then(t.bind(null,460)),"v-342dd7d0":()=>t.e(66).then(t.bind(null,461)),"v-0ab43380":()=>t.e(67).then(t.bind(null,462)),"v-a5cf239c":()=>t.e(68).then(t.bind(null,463)),"v-37b4a41c":()=>t.e(69).then(t.bind(null,464)),"v-232a20b1":()=>t.e(71).then(t.bind(null,465)),"v-48a92fcb":()=>t.e(70).then(t.bind(null,466)),"v-78f3d0bc":()=>t.e(72).then(t.bind(null,467)),"v-12e319cc":()=>Promise.all([t.e(0),t.e(22)]).then(t.bind(null,468)),"v-2a710850":()=>t.e(74).then(t.bind(null,469)),"v-185a1bf2":()=>t.e(75).then(t.bind(null,470)),"v-5ddb86d0":()=>t.e(73).then(t.bind(null,471)),"v-c3d177a8":()=>t.e(77).then(t.bind(null,472)),"v-571b7cbc":()=>t.e(76).then(t.bind(null,473)),"v-6fd2a0a2":()=>t.e(78).then(t.bind(null,474)),"v-f4006068":()=>t.e(79).then(t.bind(null,475)),"v-4a82ac02":()=>t.e(81).then(t.bind(null,476)),"v-f6eb6f0c":()=>t.e(82).then(t.bind(null,477)),"v-56895022":()=>t.e(80).then(t.bind(null,478)),"v-4cee0f62":()=>t.e(83).then(t.bind(null,479)),"v-2a02fb2a":()=>t.e(84).then(t.bind(null,480)),"v-5bfaf382":()=>t.e(85).then(t.bind(null,481)),"v-c4bba97a":()=>t.e(88).then(t.bind(null,482)),"v-4e003542":()=>t.e(87).then(t.bind(null,483)),"v-70467562":()=>t.e(90).then(t.bind(null,484)),"v-3a4bea7f":()=>t.e(91).then(t.bind(null,485)),"v-5ff500b2":()=>t.e(92).then(t.bind(null,486)),"v-bdd55902":()=>t.e(89).then(t.bind(null,487)),"v-2c345111":()=>t.e(93).then(t.bind(null,488)),"v-693acf7f":()=>t.e(86).then(t.bind(null,489)),"v-5e26df42":()=>t.e(94).then(t.bind(null,490)),"v-0b76e81b":()=>t.e(95).then(t.bind(null,491)),"v-45b0651b":()=>t.e(96).then(t.bind(null,492)),"v-373a30f5":()=>t.e(98).then(t.bind(null,493)),"v-16d17bd8":()=>t.e(100).then(t.bind(null,494)),"v-ba983518":()=>t.e(99).then(t.bind(null,495)),"v-1dbe5660":()=>t.e(102).then(t.bind(null,496)),"v-4c1c450f":()=>t.e(101).then(t.bind(null,497)),"v-214f1600":()=>t.e(103).then(t.bind(null,498)),"v-cdd670ce":()=>t.e(97).then(t.bind(null,499)),"v-3f00fb2e":()=>t.e(104).then(t.bind(null,500)),"v-8ef4dcd8":()=>t.e(105).then(t.bind(null,501)),"v-6033ca34":()=>t.e(107).then(t.bind(null,502)),"v-66c9fcc0":()=>t.e(108).then(t.bind(null,503)),"v-22d57f06":()=>t.e(109).then(t.bind(null,504)),"v-7e09ac5c":()=>t.e(110).then(t.bind(null,505)),"v-4fefb886":()=>t.e(111).then(t.bind(null,506)),"v-2365702c":()=>t.e(106).then(t.bind(null,507)),"v-db203518":()=>t.e(112).then(t.bind(null,508)),"v-78407e8c":()=>t.e(114).then(t.bind(null,509)),"v-507b5095":()=>t.e(115).then(t.bind(null,510)),"v-edcc8098":()=>t.e(116).then(t.bind(null,511)),"v-2ed5f6c4":()=>t.e(117).then(t.bind(null,512)),"v-7b767870":()=>t.e(113).then(t.bind(null,513)),"v-a54056d8":()=>t.e(118).then(t.bind(null,514)),"v-83ed8818":()=>t.e(120).then(t.bind(null,515)),"v-3c65f592":()=>t.e(122).then(t.bind(null,516)),"v-4408e1f4":()=>t.e(119).then(t.bind(null,517)),"v-8712a24c":()=>t.e(121).then(t.bind(null,518)),"v-6cbcd1e7":()=>t.e(124).then(t.bind(null,519)),"v-5d3a4341":()=>t.e(123).then(t.bind(null,520)),"v-345fa2a9":()=>t.e(125).then(t.bind(null,521)),"v-392848fe":()=>t.e(126).then(t.bind(null,522)),"v-774a2ddc":()=>t.e(127).then(t.bind(null,523)),"v-cee90ec0":()=>t.e(130).then(t.bind(null,524)),"v-20b0e7c8":()=>t.e(131).then(t.bind(null,525)),"v-3883fc5c":()=>t.e(129).then(t.bind(null,526)),"v-475ed81c":()=>t.e(128).then(t.bind(null,527)),"v-6294f18c":()=>t.e(133).then(t.bind(null,528)),"v-1d5cb25c":()=>t.e(132).then(t.bind(null,529)),"v-bf89294c":()=>t.e(135).then(t.bind(null,530)),"v-0c8e4bc1":()=>t.e(136).then(t.bind(null,531)),"v-6892eed9":()=>t.e(138).then(t.bind(null,532)),"v-3db36ba6":()=>t.e(134).then(t.bind(null,533)),"v-5f1a6be9":()=>t.e(137).then(t.bind(null,534)),"v-710239cc":()=>t.e(139).then(t.bind(null,535)),"v-64a83b72":()=>t.e(141).then(t.bind(null,536)),"v-9514734e":()=>t.e(140).then(t.bind(null,537))};function Yc(n){const e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}const Wc=/-(\w)/g,Jc=Yc(n=>n.replace(Wc,(n,e)=>e?e.toUpperCase():"")),Zc=/\B([A-Z])/g,Xc=Yc(n=>n.replace(Zc,"-$1").toLowerCase()),$c=Yc(n=>n.charAt(0).toUpperCase()+n.slice(1));function no(n,e){if(!e)return;if(n(e))return n(e);return e.includes("-")?n($c(Jc(e))):n($c(e))||n(Xc(e))}const eo=Object.assign({},Vc,Qc),to=n=>eo[n],ao=n=>Qc[n],ro=n=>Vc[n],io=n=>Qt.component(n);function co(n){return no(ao,n)}function oo(n){return no(ro,n)}function so(n){return no(to,n)}function po(n){return no(io,n)}function lo(...n){return Promise.all(n.filter(n=>n).map(async n=>{if(!po(n)&&so(n)){const e=await so(n)();Qt.component(n,e.default)}}))}function ho(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var uo=t(121),fo=t.n(uo),mo=t(122),bo=t.n(mo),go={created(){if(this.siteMeta=this.$site.headTags.filter(([n])=>"meta"===n).map(([n,e])=>e),this.$ssrContext){const e=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(n=e)?n.map(n=>{let e="<meta";return Object.keys(n).forEach(t=>{e+=` ${t}="${bo()(n[t])}"`}),e+">"}).join("\n    "):"",this.$ssrContext.canonicalLink=vo(this.$canonicalUrl)}var n},mounted(){this.currentMetaTags=[...document.querySelectorAll("meta")],this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta(){document.title=this.$title,document.documentElement.lang=this.$lang;const n=this.getMergedMetaTags();this.currentMetaTags=ko(n,this.currentMetaTags)},getMergedMetaTags(){const n=this.$page.frontmatter.meta||[];return fo()([{name:"description",content:this.$description}],n,this.siteMeta,_o)},updateCanonicalLink(){yo(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",vo(this.$canonicalUrl))}},watch:{$page(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy(){ko(null,this.currentMetaTags),yo()}};function yo(){const n=document.querySelector("link[rel='canonical']");n&&n.remove()}function vo(n=""){return n?`<link href="${n}" rel="canonical" />`:""}function ko(n,e){if(e&&[...e].filter(n=>n.parentNode===document.head).forEach(n=>document.head.removeChild(n)),n)return n.map(n=>{const e=document.createElement("meta");return Object.keys(n).forEach(t=>{e.setAttribute(t,n[t])}),document.head.appendChild(e),e})}function _o(n){for(const e of["name","property","itemprop"])if(n.hasOwnProperty(e))return n[e]+e;return JSON.stringify(n)}t(65);var xo=t(69),wo={mounted(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(xo)()((function(){this.setActiveHash()}),300),setActiveHash(){const n=[].slice.call(document.querySelectorAll(".sidebar-link")),e=[].slice.call(document.querySelectorAll(".header-anchor")).filter(e=>n.some(n=>n.hash===e.hash)),t=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),r=window.innerHeight+t;for(let n=0;n<e.length;n++){const i=e[n],c=e[n+1],o=0===n&&0===t||t>=i.parentElement.offsetTop+10&&(!c||t<c.parentElement.offsetTop-10),s=decodeURIComponent(this.$route.hash);if(o&&s!==decodeURIComponent(i.hash)){const t=i;if(r===a)for(let t=n+1;t<e.length;t++)if(s===decodeURIComponent(e[t].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(t.hash),()=>{this.$nextTick(()=>{this.$vuepress.$set("disableScrollBehavior",!1)})})}}}},beforeDestroy(){window.removeEventListener("scroll",this.onScroll)}},Ao=t(46),Eo=t.n(Ao),Co={mounted(){Eo.a.configure({showSpinner:!1}),this.$router.beforeEach((n,e,t)=>{n.path===e.path||Qt.component(n.name)||Eo.a.start(),t()}),this.$router.afterEach(()=>{Eo.a.done(),this.isSidebarOpen=!1})}};t(273),t(274);class So{constructor(){this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}show({text:n="",duration:e=3e3}){let t=document.createElement("div");t.className="message move-in",t.innerHTML=`\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">${n}</div>\n    `,this.containerEl.appendChild(t),e>0&&setTimeout(()=>{this.close(t)},e)}close(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",()=>{n.remove()})}}var jo={mounted(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy(){setTimeout(()=>{(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach(n=>{document.querySelectorAll(n).forEach(this.generateCopyButton)})},1e3)},generateCopyButton(n){if(n.classList.contains("codecopy-enabled"))return;const e=document.createElement("i");e.className="code-copy",e.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',e.title="Copy to clipboard",e.addEventListener("click",()=>{this.copyToClipboard(n.innerText)}),n.appendChild(e),n.classList.add("codecopy-enabled")},copyToClipboard(n){const e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);const t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy");(new So).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}};!function(n,e){void 0===e&&(e={});var t=e.insertAt;if(n&&"undefined"!=typeof document){var a=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===t&&a.firstChild?a.insertBefore(r,a.firstChild):a.appendChild(r),r.styleSheet?r.styleSheet.cssText=n:r.appendChild(document.createTextNode(n))}}("@media (max-width: 1000px) {\n  .vuepress-plugin-demo-block__h_code {\n    display: none;\n  }\n  .vuepress-plugin-demo-block__app {\n    margin-left: auto !important;\n    margin-right: auto !important;\n  }\n}\n.vuepress-plugin-demo-block__wrapper {\n  margin-top: 10px;\n  border: 1px solid #ebebeb;\n  border-radius: 4px;\n  transition: all 0.2s;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display {\n  height: 400px;\n  display: flex;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__app {\n  width: 300px;\n  border: 1px solid #ebebeb;\n  box-shadow: 1px 1px 3px #ebebeb;\n  margin-right: 5px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code {\n  flex: 1;\n  overflow: auto;\n  height: 100%;\n}\n.vuepress-plugin-demo-block__wrapper.vuepress-plugin-demo-block__horizontal .vuepress-plugin-demo-block__display .vuepress-plugin-demo-block__h_code > pre {\n  overflow: visible;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  max-height: 400px;\n  overflow: auto;\n}\n.vuepress-plugin-demo-block__wrapper div {\n  box-sizing: border-box;\n}\n.vuepress-plugin-demo-block__wrapper:hover {\n  box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code {\n  overflow: hidden;\n  height: 0;\n  padding: 0 !important;\n  background-color: #282c34;\n  border-radius: 0 !important;\n  transition: height 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__code pre {\n  margin: 0 !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__display {\n  padding: 20px;\n  border-bottom: 1px solid #ebebeb;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer {\n  position: relative;\n  text-align: center;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__codepen {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer.vuepress-plugin-demo-block__show-link .vuepress-plugin-demo-block__expand::before {\n  border-top: none;\n  border-right: 6px solid transparent;\n  border-bottom: 6px solid #ccc;\n  border-left: 6px solid transparent;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__codepen,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand span,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand {\n  opacity: 1;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover .vuepress-plugin-demo-block__expand::before {\n  border-top-color: #3eaf7c !important;\n  border-bottom-color: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer:hover svg {\n  fill: #3eaf7c !important;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand-text {\n  transition: all 0.5s;\n  opacity: 0;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:nth-last-child(2) {\n  right: 50px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer form:last-child {\n  right: 10px;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button {\n  border-color: transparent;\n  background-color: transparent;\n  font-size: 14px;\n  color: #3eaf7c;\n  cursor: pointer;\n  outline: none;\n  margin: 0;\n  width: 46px;\n  position: relative;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::before {\n  content: attr(data-tip);\n  white-space: nowrap;\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  color: #eee;\n  line-height: 1;\n  z-index: 1000;\n  border-radius: 4px;\n  padding: 6px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  background-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button:hover::after {\n  content: '' !important;\n  display: block;\n  position: absolute;\n  left: 50%;\n  top: -5px;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  border: 5px solid transparent;\n  border-top-color: rgba(0, 0, 0, 0.8);\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__button svg {\n  width: 34px;\n  height: 20px;\n  fill: #ccc;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__jsfiddle,\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__codepen {\n  position: absolute;\n  top: 10px;\n  transition: all 0.5s;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand {\n  position: relative;\n  width: 100px;\n  height: 40px;\n  margin: 0;\n  color: #3eaf7c;\n  font-size: 14px;\n  background-color: transparent;\n  border-color: transparent;\n  outline: none;\n  transition: all 0.5s;\n  cursor: pointer;\n}\n.vuepress-plugin-demo-block__wrapper .vuepress-plugin-demo-block__footer .vuepress-plugin-demo-block__expand::before {\n  content: \"\";\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 0;\n  height: 0;\n  border-top: 6px solid #ccc;\n  border-right: 6px solid transparent;\n  border-left: 6px solid transparent;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n}\n");var qo={jsLib:[],cssLib:[],jsfiddle:!0,codepen:!0,codepenLayout:"left",codepenJsProcessor:"babel",codepenEditors:"101",horizontal:!1,vue:"https://cdn.jsdelivr.net/npm/vue/dist/vue.min.js",react:"https://cdn.jsdelivr.net/npm/react/umd/react.production.min.js",reactDOM:"https://cdn.jsdelivr.net/npm/react-dom/umd/react-dom.production.min.js"},Po={},zo=function(n){return'<div id="app">\n'.concat(n,"\n</div>")},Bo=function(n){return window.$VUEPRESS_DEMO_BLOCK&&void 0!==window.$VUEPRESS_DEMO_BLOCK[n]?window.$VUEPRESS_DEMO_BLOCK[n]:qo[n]},To=function n(e,t,a){var r=document.createElement(e);return t&&Object.keys(t).forEach((function(n){if(n.indexOf("data"))r[n]=t[n];else{var e=n.replace("data","");r.dataset[e]=t[n]}})),a&&a.forEach((function(e){var t=e.tag,a=e.attrs,i=e.children;r.appendChild(n(t,a,i))})),r},Io=function(n,e,t){var a,r=(a=n.querySelectorAll(".".concat(e)),Array.prototype.slice.call(a));return 1!==r.length||t?r:r[0]},Do=function(n,e){var t,a,r=n.match(/<style>([\s\S]+)<\/style>/),i=n.match(/<template>([\s\S]+)<\/template>/),c=n.match(/<script>([\s\S]+)<\/script>/),o={css:r&&r[1].replace(/^\n|\n$/g,""),html:i&&i[1].replace(/^\n|\n$/g,""),js:c&&c[1].replace(/^\n|\n$/g,""),jsLib:e.jsLib||[],cssLib:e.cssLib||[]};o.htmlTpl=zo(o.html),o.jsTpl=(t=o.js,a=t.replace(/export\s+default\s*?\{\n*/,"").replace(/\n*\}\s*$/,"").trim(),"new Vue({\n  el: '#app',\n  ".concat(a,"\n})")),o.script=function(n,e){var t=n.split(/export\s+default/),a="(function() {".concat(t[0]," ; return ").concat(t[1],"})()"),r=window.Babel?window.Babel.transform(a,{presets:["es2015"]}).code:a,i=[eval][0](r);return i.template=e,i}(o.js,o.html);var s=Bo("vue");return o.jsLib.unshift(s),o},Ho=function(n,e){var t,a=n.match(/<style>([\s\S]+)<\/style>/),r=n.match(/<html>([\s\S]+)<\/html>/),i=n.match(/<script>([\s\S]+)<\/script>/),c={css:a&&a[1].replace(/^\n|\n$/g,""),html:r&&r[1].replace(/^\n|\n$/g,""),js:i&&i[1].replace(/^\n|\n$/g,""),jsLib:e.jsLib||[],cssLib:e.cssLib||[]};return c.htmlTpl=c.html,c.jsTpl=c.js,c.script=(t=c.js,window.Babel?window.Babel.transform(t,{presets:["es2015"]}).code:t),c},Fo=function(n){return n=n.replace("export default ","").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,""),n+='ReactDOM.render(React.createElement(App), document.getElementById("app"))'};function Lo(){var n=Io(document,"vuepress-plugin-demo-block__wrapper",!0);n.length?n.forEach((function(n){if("true"!==n.dataset.created){n.style.display="block";var e=Io(n,"vuepress-plugin-demo-block__code"),t=Io(n,"vuepress-plugin-demo-block__display"),a=Io(n,"vuepress-plugin-demo-block__footer"),r=Io(t,"vuepress-plugin-demo-block__app"),i=decodeURIComponent(n.dataset.code),c=decodeURIComponent(n.dataset.config),o=decodeURIComponent(n.dataset.type);c=c?JSON.parse(c):{};var s=e.querySelector("div").clientHeight,p="react"===o?function(n,e){var t=(0,window.Babel.transform)(n,{presets:["es2015","react"]}).code,a="(function(exports){var module={};module.exports=exports;".concat(t,";return module.exports.__esModule?module.exports.default:module.exports;})({})"),r=new Function("return ".concat(a))(),i={js:r,css:r.__style__||"",jsLib:e.jsLib||[],cssLib:e.cssLib||[],jsTpl:Fo(n),htmlTpl:zo("")},c=Bo("react"),o=Bo("reactDOM");return i.jsLib.unshift(c,o),i}(i,c):"vanilla"===o?Ho(i,c):Do(i,c),l=To("button",{className:"".concat("vuepress-plugin-demo-block__expand")});if(a.appendChild(l),l.addEventListener("click",Mo.bind(null,l,s,e,a)),Bo("jsfiddle")&&a.appendChild(function(n){var e=n.css,t=n.htmlTpl,a=n.jsTpl,r=n.jsLib,i=n.cssLib,c=r.concat(i).concat(Bo("cssLib")).concat(Bo("jsLib")).join(",");return To("form",{className:"vuepress-plugin-demo-block__jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"css",value:e}},{tag:"input",attrs:{type:"hidden",name:"html",value:t}},{tag:"input",attrs:{type:"hidden",name:"js",value:a}},{tag:"input",attrs:{type:"hidden",name:"panel_js",value:3}},{tag:"input",attrs:{type:"hidden",name:"wrap",value:1}},{tag:"input",attrs:{type:"hidden",name:"resources",value:c}},{tag:"button",attrs:{type:"submit",className:"vuepress-plugin-demo-block__button",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088289967" class="icon" style="" viewBox="0 0 1170 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1952" xmlns:xlink="http://www.w3.org/1999/xlink" width="228.515625" height="200"><defs><style type="text/css"></style></defs><path d="M1028.571429 441.142857q63.428571 26.285714 102.571428 83.142857T1170.285714 650.857143q0 93.714286-67.428571 160.285714T940 877.714286q-2.285714 0-6.571429-0.285715t-6-0.285714H232q-97.142857-5.714286-164.571429-71.714286T0 645.142857q0-62.857143 31.428571-116t84-84q-6.857143-22.285714-6.857142-46.857143 0-65.714286 46.857142-112t113.714286-46.285714q54.285714 0 98.285714 33.142857 42.857143-88 127.142858-141.714286t186.571428-53.714285q94.857143 0 174.857143 46T982.571429 248.571429t46.571428 172q0 3.428571-0.285714 10.285714t-0.285714 10.285714zM267.428571 593.142857q0 69.714286 48 110.285714t118.857143 40.571429q78.285714 0 137.142857-56.571429-9.142857-11.428571-27.142857-32.285714T519.428571 626.285714q-38.285714 37.142857-82.285714 37.142857-31.428571 0-53.428571-19.142857T361.714286 594.285714q0-30.285714 22-49.714285t52.285714-19.428572q25.142857 0 48.285714 12t41.714286 31.428572 37.142857 42.857142 39.428572 46.857143 44 42.857143 55.428571 31.428572 69.428571 12q69.142857 0 116.857143-40.857143T936 594.857143q0-69.142857-48-109.714286t-118.285714-40.571428q-81.714286 0-137.714286 55.428571l53.142857 61.714286q37.714286-36.571429 81.142857-36.571429 29.714286 0 52.571429 18.857143t22.857143 48q0 32.571429-21.142857 52.285714t-53.714286 19.714286q-24.571429 0-47.142857-12t-41.142857-31.428571-37.428572-42.857143-39.714286-46.857143-44.285714-42.857143-55.142857-31.428571T434.285714 444.571429q-69.714286 0-118.285714 40.285714T267.428571 593.142857z" p-id="1953"></path></svg>',datatip:"JSFiddle"}}])}(p)),Bo("codepen")&&a.appendChild(function(n){var e=n.css,t=n.htmlTpl,a=n.jsTpl,r=n.jsLib,i=n.cssLib,c=JSON.stringify({css:e,html:t,js:a,js_external:r.concat(Bo("jsLib")).join(";"),css_external:i.concat(Bo("cssLib")).join(";"),layout:Bo("codepenLayout"),js_pre_processor:Bo("codepenJsProcessor"),editors:Bo("codepenEditors")});return To("form",{className:"vuepress-plugin-demo-block__codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[{tag:"input",attrs:{type:"hidden",name:"data",value:c}},{tag:"button",attrs:{type:"submit",innerHTML:'<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg t="1547088271207" class="icon" style="" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="1737" xmlns:xlink="http://www.w3.org/1999/xlink" width="200" height="200"><defs><style type="text/css"></style></defs><path d="M123.428571 668l344.571429 229.714286v-205.142857L277.142857 565.142857z m-35.428571-82.285714l110.285714-73.714286-110.285714-73.714286v147.428572z m468 312l344.571429-229.714286-153.714286-102.857143-190.857143 127.428572v205.142857z m-44-281.714286l155.428571-104-155.428571-104-155.428571 104zM277.142857 458.857143l190.857143-127.428572V126.285714L123.428571 356z m548.571429 53.142857l110.285714 73.714286V438.285714z m-78.857143-53.142857l153.714286-102.857143-344.571429-229.714286v205.142857z m277.142857-102.857143v312q0 23.428571-19.428571 36.571429l-468 312q-12 7.428571-24.571429 7.428571t-24.571429-7.428571L19.428571 704.571429q-19.428571-13.142857-19.428571-36.571429V356q0-23.428571 19.428571-36.571429L487.428571 7.428571q12-7.428571 24.571429-7.428571t24.571429 7.428571l468 312q19.428571 13.142857 19.428571 36.571429z" p-id="1738"></path></svg>',className:"vuepress-plugin-demo-block__button",datatip:"Codepen"}}])}(p)),void 0!==c.horizontal?c.horizontal:Bo("horizontal")){n.classList.add("vuepress-plugin-demo-block__horizontal");var d=e.firstChild.cloneNode(!0);d.classList.add("vuepress-plugin-demo-block__h_code"),t.appendChild(d)}if(p.css&&function(n){if(!Po[n]){var e=To("style",{innerHTML:n});document.body.appendChild(e),Po[n]=!0}}(p.css),"react"===o)ReactDOM.render(React.createElement(p.js),r);else if("vue"===o){var h=(new(Vue.extend(p.script))).$mount();r.appendChild(h.$el)}else"vanilla"===o&&(r.innerHTML=p.html,new Function("return (function(){".concat(p.script,"})()"))());n.dataset.created="true"}})):setTimeout((function(n){Lo()}),300)}function Mo(n,e,t,a){var r="1"!==n.dataset.isExpand;t.style.height=r?"".concat(e,"px"):0,r?a.classList.add("vuepress-plugin-demo-block__show-link"):a.classList.remove("vuepress-plugin-demo-block__show-link"),n.dataset.isExpand=r?"1":"0"}var Ro={mounted:function(){window.$VUEPRESS_DEMO_BLOCK={jsfiddle:!1,codepen:!0,horizontal:!1},Lo()},updated:function(){Lo()}},Uo="auto",Oo="zoom-in",Ko="zoom-out",No="grab",Go="move";function Vo(n,e,t){var a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r={passive:!1};a?n.addEventListener(e,t,r):n.removeEventListener(e,t,r)}function Qo(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function Yo(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function Wo(n,e,t){!function(n){var e=Jo,t=Zo;if(n.transition){var a=n.transition;delete n.transition,n[e]=a}if(n.transform){var r=n.transform;delete n.transform,n[t]=r}}(e);var a=n.style,r={};for(var i in e)t&&(r[i]=a[i]||""),a[i]=e[i];return r}var Jo="transition",Zo="transform",Xo="transform",$o="transitionend";var ns=function(){},es={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:ns,onClose:ns,onGrab:ns,onMove:ns,onRelease:ns,onBeforeOpen:ns,onBeforeClose:ns,onBeforeGrab:ns,onBeforeRelease:ns,onImageLoading:ns,onImageLoaded:ns},ts={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),rs(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var a=this.lastScrollPosition.x-e,r=this.lastScrollPosition.y-t,i=this.options.scrollThreshold;(Math.abs(r)>=i||Math.abs(a)>=i)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(as(n)&&!rs(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){as(n)&&!rs(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,a=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,a)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,a=e.clientY;this.move(t,a)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function as(n){return 0===n.button}function rs(n){return n.metaKey||n.ctrlKey}var is={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,Wo(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),Vo(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){Wo(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},cs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},os=function(){function n(n,e){for(var t=0;t<e.length;t++){var a=e[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}return function(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e}}(),ss=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},ps={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Yo(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,a=n.transitionDuration,r=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?No:Ko,transition:Xo+"\n        "+a+"s\n        "+r,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=Wo(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,Wo(this.el,{transform:"none"})},grab:function(n,e,t){var a=ls(),r=a.x-n,i=a.y-e;Wo(this.el,{cursor:Go,transform:"translate3d(\n        "+(this.translate.x+r)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var a=ls(),r=a.x-n,i=a.y-e;Wo(this.el,{transition:Xo,transform:"translate3d(\n        "+(this.translate.x+r)+"px, "+(this.translate.y+i)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){Wo(this.el,this.styleClose)},restoreOpenStyle:function(){Wo(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=ls(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,a=this.instance.options,r=a.customSize,i=a.scaleBase;if(!r&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(r&&"object"===(void 0===r?"undefined":cs(r)))return{x:r.width/this.rect.width,y:r.height/this.rect.height};var c=this.rect.width/2,o=this.rect.height/2,s=ls(),p={x:s.x-c,y:s.y-o},l=p.x/c,d=p.y/o,h=i+Math.min(l,d);if(r&&"string"==typeof r){var u=t||this.el.naturalWidth,f=e||this.el.naturalHeight,m=parseFloat(r)*u/(100*this.rect.width),b=parseFloat(r)*f/(100*this.rect.height);if(h>m||h>b)return{x:m,y:b}}return{x:h,y:h}}};function ls(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function ds(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(a){Vo(n,a,e[a],t)}))}var hs=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(ps),this.overlay=Object.create(is),this.handler=Object.create(ts),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=ss({},es,e),this.overlay.init(this),this.handler.init(this)}return os(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=Oo,Vo(n,"click",this.handler.click),this.options.preloadImage&&Qo(Yo(n)));return this}},{key:"config",value:function(n){return n?(ss(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var a="string"==typeof n?document.querySelector(n):n;if("IMG"===a.tagName){if(this.options.onBeforeOpen(a),this.target.init(a,this),!this.options.preloadImage){var r=this.target.srcOriginal;null!=r&&(this.options.onImageLoading(a),Qo(r,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Vo(document,"scroll",this.handler.scroll),Vo(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Vo(window,"resize",this.handler.resizeWindow);var i=function n(){Vo(a,$o,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&ds(document,e.handler,!0),t(a)};return Vo(a,$o,i),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=Uo,this.overlay.fadeOut(),this.target.zoomOut(),Vo(document,"scroll",this.handler.scroll,!1),Vo(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Vo(window,"resize",this.handler.resizeWindow,!1);var a=function a(){Vo(t,$o,a,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&ds(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return Vo(t,$o,a),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var r=this.target.el;this.options.onBeforeGrab(r),this.released=!1,this.target.grab(n,e,t);var i=function n(){Vo(r,$o,n,!1),a(r)};return Vo(r,$o,i),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=Go,this.target.move(n,e,t);var r=this.target.el,i=function n(){Vo(r,$o,n,!1),a(r)};return Vo(r,$o,i),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=Uo,this.target.restoreOpenStyle();var a=function a(){Vo(t,$o,a,!1),n.lock=!1,n.released=!0,e(t)};return Vo(t,$o,a),this}}}]),n}();const us=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),fs=Number("500");class ms{constructor(){this.instance=new hs(us)}update(n=".theme-vdoing-content img:not(.no-zoom)"){"undefined"!=typeof window&&this.instance.listen(n)}updateDelay(n=".theme-vdoing-content img:not(.no-zoom)",e=fs){setTimeout(()=>this.update(n),e)}}var bs=[go,wo,Co,jo,Ro,{watch:{"$page.path"(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted(){this.$vuepress.zooming=new ms,this.$vuepress.zooming.updateDelay()}}],gs={name:"GlobalLayout",computed:{layout(){const n=this.getLayout();return ho("layout",n),Qt.component(n)}},methods:{getLayout(){if(this.$page.path){const n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},ys=t(15),vs=Object(ys.a)(gs,(function(){return(0,this._self._c)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),n[e].push(...t);break;default:throw new Error("Unknown option name.")}}(vs,"mixins",bs);const ks=[{name:"v-a2faba12",path:"/pages/toc/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-a2faba12").then(t)}},{path:"/pages/toc/index.html",redirect:"/pages/toc/"},{path:"/01.目录/01.目录/01.目录.html",redirect:"/pages/toc/"},{name:"v-497f3aa6",path:"/captcha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-497f3aa6").then(t)}},{path:"/captcha/index.html",redirect:"/captcha/"},{path:"/02.验证码/01.captcha.html",redirect:"/captcha/"},{name:"v-1caff22a",path:"/captcha/dingxiang/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-1caff22a").then(t)}},{path:"/captcha/dingxiang/index.html",redirect:"/captcha/dingxiang/"},{path:"/02.验证码/02.国内验证码/01.顶象 DING XIANG.html",redirect:"/captcha/dingxiang/"},{name:"v-31b14f6e",path:"/captcha/shumei/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-31b14f6e").then(t)}},{path:"/captcha/shumei/index.html",redirect:"/captcha/shumei/"},{path:"/02.验证码/02.国内验证码/02.数美 NEXTDATA.html",redirect:"/captcha/shumei/"},{name:"v-72251b30",path:"/captcha/yidun/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-72251b30").then(t)}},{path:"/captcha/yidun/index.html",redirect:"/captcha/yidun/"},{path:"/02.验证码/02.国内验证码/03.易盾 NETEASE YIDUN.html",redirect:"/captcha/yidun/"},{name:"v-e8c1dd50",path:"/captcha/geetest-v4/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-e8c1dd50").then(t)}},{path:"/captcha/geetest-v4/index.html",redirect:"/captcha/geetest-v4/"},{path:"/02.验证码/02.国内验证码/04.极验 GEETEST/03.行为验证 4.0.html",redirect:"/captcha/geetest-v4/"},{name:"v-e11104d0",path:"/captcha/geetest-v3/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-e11104d0").then(t)}},{path:"/captcha/geetest-v3/index.html",redirect:"/captcha/geetest-v3/"},{path:"/02.验证码/02.国内验证码/04.极验 GEETEST/02.行为验证 3.0.html",redirect:"/captcha/geetest-v3/"},{name:"v-4b7718dc",path:"/captcha/aliyun-v1/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-4b7718dc").then(t)}},{path:"/captcha/aliyun-v1/index.html",redirect:"/captcha/aliyun-v1/"},{path:"/02.验证码/02.国内验证码/05.阿里云云盾验证码/01.阿里云云盾验证码 1.0.html",redirect:"/captcha/aliyun-v1/"},{name:"v-d9602c50",path:"/captcha/geetest-v2/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-d9602c50").then(t)}},{path:"/captcha/geetest-v2/index.html",redirect:"/captcha/geetest-v2/"},{path:"/02.验证码/02.国内验证码/04.极验 GEETEST/01.行为验证 2.0.html",redirect:"/captcha/geetest-v2/"},{name:"v-43831352",path:"/captcha/aliyun-v2/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-43831352").then(t)}},{path:"/captcha/aliyun-v2/index.html",redirect:"/captcha/aliyun-v2/"},{path:"/02.验证码/02.国内验证码/05.阿里云云盾验证码/02.阿里云云盾验证码 2.0.html",redirect:"/captcha/aliyun-v2/"},{name:"v-71dca100",path:"/captcha/tencent/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-71dca100").then(t)}},{path:"/captcha/tencent/index.html",redirect:"/captcha/tencent/"},{path:"/02.验证码/02.国内验证码/06.腾讯天御 T-Sec.html",redirect:"/captcha/tencent/"},{name:"v-774b903f",path:"/captcha/redcaptcha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-774b903f").then(t)}},{path:"/captcha/redcaptcha/index.html",redirect:"/captcha/redcaptcha/"},{path:"/02.验证码/02.国内验证码/07.小红书 redCaptcha.html",redirect:"/captcha/redcaptcha/"},{name:"v-cf14bae6",path:"/captcha/xiaodun/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-cf14bae6").then(t)}},{path:"/captcha/xiaodun/index.html",redirect:"/captcha/xiaodun/"},{path:"/02.验证码/02.国内验证码/08.小盾 XIAODUN.html",redirect:"/captcha/xiaodun/"},{name:"v-75220eb0",path:"/captcha/yunpian/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-75220eb0").then(t)}},{path:"/captcha/yunpian/index.html",redirect:"/captcha/yunpian/"},{path:"/02.验证码/02.国内验证码/09.云片 YUNPIAN.html",redirect:"/captcha/yunpian/"},{name:"v-00eb683b",path:"/captcha/360/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-00eb683b").then(t)}},{path:"/captcha/360/index.html",redirect:"/captcha/360/"},{path:"/02.验证码/02.国内验证码/10.三六零天御.html",redirect:"/captcha/360/"},{name:"v-12fd4846",path:"/captcha/luosimao/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-12fd4846").then(t)}},{path:"/captcha/luosimao/index.html",redirect:"/captcha/luosimao/"},{path:"/02.验证码/02.国内验证码/11.螺丝帽 Luosimao.html",redirect:"/captcha/luosimao/"},{name:"v-396691d7",path:"/captcha/vaptcha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-396691d7").then(t)}},{path:"/captcha/vaptcha/index.html",redirect:"/captcha/vaptcha/"},{path:"/02.验证码/02.国内验证码/12.Vaptcha.html",redirect:"/captcha/vaptcha/"},{name:"v-70a22d8c",path:"/captcha/kgcaptcha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-70a22d8c").then(t)}},{path:"/captcha/kgcaptcha/index.html",redirect:"/captcha/kgcaptcha/"},{path:"/02.验证码/02.国内验证码/14.凯格 KYGER.html",redirect:"/captcha/kgcaptcha/"},{name:"v-5f6ade6d",path:"/captcha/verify5/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-5f6ade6d").then(t)}},{path:"/captcha/verify5/index.html",redirect:"/captcha/verify5/"},{path:"/02.验证码/02.国内验证码/13.V5 验证.html",redirect:"/captcha/verify5/"},{name:"v-30db7074",path:"/captcha/fastyotest/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-30db7074").then(t)}},{path:"/captcha/fastyotest/index.html",redirect:"/captcha/fastyotest/"},{path:"/02.验证码/02.国内验证码/15.友验 FastYotest.html",redirect:"/captcha/fastyotest/"},{name:"v-6196f284",path:"/captcha/turnstile-managed/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-6196f284").then(t)}},{path:"/captcha/turnstile-managed/index.html",redirect:"/captcha/turnstile-managed/"},{path:"/02.验证码/03.国外验证码/01.Cloudflare Turnstile/01.Turnstile Managed Challenge.html",redirect:"/captcha/turnstile-managed/"},{name:"v-255664fc",path:"/captcha/turnstile-non-interactive/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-255664fc").then(t)}},{path:"/captcha/turnstile-non-interactive/index.html",redirect:"/captcha/turnstile-non-interactive/"},{path:"/02.验证码/03.国外验证码/01.Cloudflare Turnstile/02.Turnstile Non-Interactive Challenge.html",redirect:"/captcha/turnstile-non-interactive/"},{name:"v-41db7438",path:"/captcha/turnstile-invisible/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-41db7438").then(t)}},{path:"/captcha/turnstile-invisible/index.html",redirect:"/captcha/turnstile-invisible/"},{path:"/02.验证码/03.国外验证码/01.Cloudflare Turnstile/03.Turnstile Invisible Challenge.html",redirect:"/captcha/turnstile-invisible/"},{name:"v-ac84e75c",path:"/captcha/recaptcha-v2-checkbox/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-ac84e75c").then(t)}},{path:"/captcha/recaptcha-v2-checkbox/index.html",redirect:"/captcha/recaptcha-v2-checkbox/"},{path:"/02.验证码/03.国外验证码/02.Google reCAPTCHA/01.reCAPTCHA V2 Checkbox.html",redirect:"/captcha/recaptcha-v2-checkbox/"},{name:"v-3e53f494",path:"/captcha/recaptcha-v2-invisible/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-3e53f494").then(t)}},{path:"/captcha/recaptcha-v2-invisible/index.html",redirect:"/captcha/recaptcha-v2-invisible/"},{path:"/02.验证码/03.国外验证码/02.Google reCAPTCHA/02.reCAPTCHA V2 Invisible.html",redirect:"/captcha/recaptcha-v2-invisible/"},{name:"v-168987d2",path:"/captcha/recaptcha-v2-enterprise/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-168987d2").then(t)}},{path:"/captcha/recaptcha-v2-enterprise/index.html",redirect:"/captcha/recaptcha-v2-enterprise/"},{path:"/02.验证码/03.国外验证码/02.Google reCAPTCHA/03.reCAPTCHA V2 Enterprise.html",redirect:"/captcha/recaptcha-v2-enterprise/"},{name:"v-32e76611",path:"/captcha/recaptcha-v3/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-32e76611").then(t)}},{path:"/captcha/recaptcha-v3/index.html",redirect:"/captcha/recaptcha-v3/"},{path:"/02.验证码/03.国外验证码/02.Google reCAPTCHA/04.reCAPTCHA v3.html",redirect:"/captcha/recaptcha-v3/"},{name:"v-1d543c28",path:"/captcha/hcaptcha-medium/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-1d543c28").then(t)}},{path:"/captcha/hcaptcha-medium/index.html",redirect:"/captcha/hcaptcha-medium/"},{path:"/02.验证码/03.国外验证码/03.hCaptcha/02.hCaptcha Medium.html",redirect:"/captcha/hcaptcha-medium/"},{name:"v-52e60810",path:"/captcha/recaptcha-v3-enterprise/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-52e60810").then(t)}},{path:"/captcha/recaptcha-v3-enterprise/index.html",redirect:"/captcha/recaptcha-v3-enterprise/"},{path:"/02.验证码/03.国外验证码/02.Google reCAPTCHA/05.reCAPTCHA V3 Enterprise.html",redirect:"/captcha/recaptcha-v3-enterprise/"},{name:"v-18262f98",path:"/captcha/hcaptcha-difficult/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-18262f98").then(t)}},{path:"/captcha/hcaptcha-difficult/index.html",redirect:"/captcha/hcaptcha-difficult/"},{path:"/02.验证码/03.国外验证码/03.hCaptcha/03.hCaptcha Difficult.html",redirect:"/captcha/hcaptcha-difficult/"},{name:"v-427388d0",path:"/captcha/hcaptcha-easy/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-427388d0").then(t)}},{path:"/captcha/hcaptcha-easy/index.html",redirect:"/captcha/hcaptcha-easy/"},{path:"/02.验证码/03.国外验证码/03.hCaptcha/01.hCaptcha Easy.html",redirect:"/captcha/hcaptcha-easy/"},{name:"v-fe93e898",path:"/captcha/hcaptcha-invisible/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-fe93e898").then(t)}},{path:"/captcha/hcaptcha-invisible/index.html",redirect:"/captcha/hcaptcha-invisible/"},{path:"/02.验证码/03.国外验证码/03.hCaptcha/04.hCaptcha Invisible.html",redirect:"/captcha/hcaptcha-invisible/"},{name:"v-d22bfcd8",path:"/captcha/hcaptcha-pro/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-d22bfcd8").then(t)}},{path:"/captcha/hcaptcha-pro/index.html",redirect:"/captcha/hcaptcha-pro/"},{path:"/02.验证码/03.国外验证码/03.hCaptcha/05.hCaptcha Pro.html",redirect:"/captcha/hcaptcha-pro/"},{name:"v-782a7e48",path:"/captcha/hcaptcha-enterprise/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-782a7e48").then(t)}},{path:"/captcha/hcaptcha-enterprise/index.html",redirect:"/captcha/hcaptcha-enterprise/"},{path:"/02.验证码/03.国外验证码/03.hCaptcha/06.hCaptcha Enterprise.html",redirect:"/captcha/hcaptcha-enterprise/"},{name:"v-68e5da7e",path:"/captcha/perimeterx/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-68e5da7e").then(t)}},{path:"/captcha/perimeterx/index.html",redirect:"/captcha/perimeterx/"},{path:"/02.验证码/03.国外验证码/06.PerimeterX丨HUMAN Challenge.html",redirect:"/captcha/perimeterx/"},{name:"v-4746c731",path:"/captcha/funcaptcha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-4746c731").then(t)}},{path:"/captcha/funcaptcha/index.html",redirect:"/captcha/funcaptcha/"},{path:"/02.验证码/03.国外验证码/04.Arkose Labs FunCAPTCHA.html",redirect:"/captcha/funcaptcha/"},{name:"v-6312fbd8",path:"/captcha/datadome/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-6312fbd8").then(t)}},{path:"/captcha/datadome/index.html",redirect:"/captcha/datadome/"},{path:"/02.验证码/03.国外验证码/05.DataDome CAPTCHA.html",redirect:"/captcha/datadome/"},{name:"v-01e22594",path:"/captcha/aws/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-01e22594").then(t)}},{path:"/captcha/aws/index.html",redirect:"/captcha/aws/"},{path:"/02.验证码/03.国外验证码/07.AWS (Amazon) WAF Captcha.html",redirect:"/captcha/aws/"},{name:"v-6e72af60",path:"/captcha/lemin/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-6e72af60").then(t)}},{path:"/captcha/lemin/index.html",redirect:"/captcha/lemin/"},{path:"/02.验证码/03.国外验证码/09.Lemin CAPTCHA丨Capy Puzzle.html",redirect:"/captcha/lemin/"},{name:"v-1711ca03",path:"/captcha/mtcaptcha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-1711ca03").then(t)}},{path:"/captcha/mtcaptcha/index.html",redirect:"/captcha/mtcaptcha/"},{path:"/02.验证码/03.国外验证码/08.MTCaptcha.html",redirect:"/captcha/mtcaptcha/"},{name:"v-be5fa950",path:"/captcha/yandex/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-be5fa950").then(t)}},{path:"/captcha/yandex/index.html",redirect:"/captcha/yandex/"},{path:"/02.验证码/03.国外验证码/10.Yandex SmartCaptcha.html",redirect:"/captcha/yandex/"},{name:"v-e16ad51e",path:"/captcha/mcaptcha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-e16ad51e").then(t)}},{path:"/captcha/mcaptcha/index.html",redirect:"/captcha/mcaptcha/"},{path:"/02.验证码/03.国外验证码/11.mCaptcha.html",redirect:"/captcha/mcaptcha/"},{name:"v-e14188de",path:"/captcha/keycaptcha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-e14188de").then(t)}},{path:"/captcha/keycaptcha/index.html",redirect:"/captcha/keycaptcha/"},{path:"/02.验证码/03.国外验证码/12.KeyCAPTCHA.html",redirect:"/captcha/keycaptcha/"},{name:"v-98911a1e",path:"/captcha/cybersiara/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-98911a1e").then(t)}},{path:"/captcha/cybersiara/index.html",redirect:"/captcha/cybersiara/"},{path:"/02.验证码/03.国外验证码/13.CyberSiARA.html",redirect:"/captcha/cybersiara/"},{name:"v-14676614",path:"/captcha/friendly-captcha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-14676614").then(t)}},{path:"/captcha/friendly-captcha/index.html",redirect:"/captcha/friendly-captcha/"},{path:"/02.验证码/03.国外验证码/14.Friendly Captcha.html",redirect:"/captcha/friendly-captcha/"},{name:"v-1111a9df",path:"/captcha/arcaptcha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-1111a9df").then(t)}},{path:"/captcha/arcaptcha/index.html",redirect:"/captcha/arcaptcha/"},{path:"/02.验证码/03.国外验证码/15.ARCaptcha.html",redirect:"/captcha/arcaptcha/"},{name:"v-1498a0d1",path:"/captcha/captchafox/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-1498a0d1").then(t)}},{path:"/captcha/captchafox/index.html",redirect:"/captcha/captchafox/"},{path:"/02.验证码/03.国外验证码/16.CaptchaFox.html",redirect:"/captcha/captchafox/"},{name:"v-833f7130",path:"/pages/js-hook/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-833f7130").then(t)}},{path:"/pages/js-hook/index.html",redirect:"/pages/js-hook/"},{path:"/03.辅助查询/01.辅助脚本/01.JS HOOK.html",redirect:"/pages/js-hook/"},{name:"v-342dd7d0",path:"/pages/frida-api/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-342dd7d0").then(t)}},{path:"/pages/frida-api/index.html",redirect:"/pages/frida-api/"},{path:"/03.辅助查询/01.辅助脚本/02.Frida API.html",redirect:"/pages/frida-api/"},{name:"v-0ab43380",path:"/pages/babel/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-0ab43380").then(t)}},{path:"/pages/babel/index.html",redirect:"/pages/babel/"},{path:"/03.辅助查询/01.辅助脚本/03.babel 脚本.html",redirect:"/pages/babel/"},{name:"v-a5cf239c",path:"/pages/linux/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-a5cf239c").then(t)}},{path:"/pages/linux/index.html",redirect:"/pages/linux/"},{path:"/03.辅助查询/02.命令查询/01.Linux 命令.html",redirect:"/pages/linux/"},{name:"v-37b4a41c",path:"/pages/adb/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-37b4a41c").then(t)}},{path:"/pages/adb/index.html",redirect:"/pages/adb/"},{path:"/03.辅助查询/02.命令查询/02.ADB 命令.html",redirect:"/pages/adb/"},{name:"v-232a20b1",path:"/pages/dalvik/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-232a20b1").then(t)}},{path:"/pages/dalvik/index.html",redirect:"/pages/dalvik/"},{path:"/03.辅助查询/02.命令查询/04.Dalvik 指令集.html",redirect:"/pages/dalvik/"},{name:"v-48a92fcb",path:"/pages/arm/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-48a92fcb").then(t)}},{path:"/pages/arm/index.html",redirect:"/pages/arm/"},{path:"/03.辅助查询/02.命令查询/03.ARM 指令集.html",redirect:"/pages/arm/"},{name:"v-78f3d0bc",path:"/pages/creepjs/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-78f3d0bc").then(t)}},{path:"/pages/creepjs/index.html",redirect:"/pages/creepjs/"},{path:"/03.辅助查询/03.指纹信息/01.CreepJS.html",redirect:"/pages/creepjs/"},{name:"v-12e319cc",path:"/pages/fingerprint2/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-12e319cc").then(t)}},{path:"/pages/fingerprint2/index.html",redirect:"/pages/fingerprint2/"},{path:"/03.辅助查询/03.指纹信息/02.Fingerprint2.html",redirect:"/pages/fingerprint2/"},{name:"v-2a710850",path:"/pages/url/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-2a710850").then(t)}},{path:"/pages/url/index.html",redirect:"/pages/url/"},{path:"/03.辅助查询/04.加密算法/01.url.html",redirect:"/pages/url/"},{name:"v-185a1bf2",path:"/pages/unicode/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-185a1bf2").then(t)}},{path:"/pages/unicode/index.html",redirect:"/pages/unicode/"},{path:"/03.辅助查询/04.加密算法/02.unicode.html",redirect:"/pages/unicode/"},{name:"v-5ddb86d0",path:"/pages/AHBD/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-5ddb86d0").then(t)}},{path:"/pages/AHBD/index.html",redirect:"/pages/AHBD/"},{path:"/03.辅助查询/03.指纹信息/03.自动化工具检测.html",redirect:"/pages/AHBD/"},{name:"v-c3d177a8",path:"/pages/md5/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-c3d177a8").then(t)}},{path:"/pages/md5/index.html",redirect:"/pages/md5/"},{path:"/03.辅助查询/04.加密算法/04.md5.html",redirect:"/pages/md5/"},{name:"v-571b7cbc",path:"/pages/base64/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-571b7cbc").then(t)}},{path:"/pages/base64/index.html",redirect:"/pages/base64/"},{path:"/03.辅助查询/04.加密算法/03.base64.html",redirect:"/pages/base64/"},{name:"v-6fd2a0a2",path:"/pages/hmac/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-6fd2a0a2").then(t)}},{path:"/pages/hmac/index.html",redirect:"/pages/hmac/"},{path:"/03.辅助查询/04.加密算法/05.hmac.html",redirect:"/pages/hmac/"},{name:"v-f4006068",path:"/pages/sha/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-f4006068").then(t)}},{path:"/pages/sha/index.html",redirect:"/pages/sha/"},{path:"/03.辅助查询/04.加密算法/06.sha.html",redirect:"/pages/sha/"},{name:"v-4a82ac02",path:"/pages/aes/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-4a82ac02").then(t)}},{path:"/pages/aes/index.html",redirect:"/pages/aes/"},{path:"/03.辅助查询/04.加密算法/08.aes.html",redirect:"/pages/aes/"},{name:"v-f6eb6f0c",path:"/pages/des/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-f6eb6f0c").then(t)}},{path:"/pages/des/index.html",redirect:"/pages/des/"},{path:"/03.辅助查询/04.加密算法/09.des.html",redirect:"/pages/des/"},{name:"v-56895022",path:"/pages/rsa/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-56895022").then(t)}},{path:"/pages/rsa/index.html",redirect:"/pages/rsa/"},{path:"/03.辅助查询/04.加密算法/07.rsa.html",redirect:"/pages/rsa/"},{name:"v-4cee0f62",path:"/pages/3des/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-4cee0f62").then(t)}},{path:"/pages/3des/index.html",redirect:"/pages/3des/"},{path:"/03.辅助查询/04.加密算法/10.3des.html",redirect:"/pages/3des/"},{name:"v-2a02fb2a",path:"/pages/rc4/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-2a02fb2a").then(t)}},{path:"/pages/rc4/index.html",redirect:"/pages/rc4/"},{path:"/03.辅助查询/04.加密算法/11.rc4.html",redirect:"/pages/rc4/"},{name:"v-5bfaf382",path:"/pages/sm/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-5bfaf382").then(t)}},{path:"/pages/sm/index.html",redirect:"/pages/sm/"},{path:"/03.辅助查询/04.加密算法/12.sm.html",redirect:"/pages/sm/"},{name:"v-c4bba97a",path:"/net/aiohttp/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-c4bba97a").then(t)}},{path:"/net/aiohttp/index.html",redirect:"/net/aiohttp/"},{path:"/04.网络请求/01.基本请求/01.Python/03.aiohttp.html",redirect:"/net/aiohttp/"},{name:"v-4e003542",path:"/net/urllib/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-4e003542").then(t)}},{path:"/net/urllib/index.html",redirect:"/net/urllib/"},{path:"/04.网络请求/01.基本请求/01.Python/02.urllib.html",redirect:"/net/urllib/"},{name:"v-70467562",path:"/net/pyhttpx/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-70467562").then(t)}},{path:"/net/pyhttpx/index.html",redirect:"/net/pyhttpx/"},{path:"/04.网络请求/01.基本请求/01.Python/05.pyhttpx.html",redirect:"/net/pyhttpx/"},{name:"v-3a4bea7f",path:"/net/tls_client/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-3a4bea7f").then(t)}},{path:"/net/tls_client/index.html",redirect:"/net/tls_client/"},{path:"/04.网络请求/01.基本请求/01.Python/06.tls_client.html",redirect:"/net/tls_client/"},{name:"v-5ff500b2",path:"/net/curl_cffi/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-5ff500b2").then(t)}},{path:"/net/curl_cffi/index.html",redirect:"/net/curl_cffi/"},{path:"/04.网络请求/01.基本请求/01.Python/07.curl_cffi.html",redirect:"/net/curl_cffi/"},{name:"v-bdd55902",path:"/net/httpx/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-bdd55902").then(t)}},{path:"/net/httpx/index.html",redirect:"/net/httpx/"},{path:"/04.网络请求/01.基本请求/01.Python/04.httpx.html",redirect:"/net/httpx/"},{name:"v-2c345111",path:"/net/requests_go/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-2c345111").then(t)}},{path:"/net/requests_go/index.html",redirect:"/net/requests_go/"},{path:"/04.网络请求/01.基本请求/01.Python/08.requests_go.html",redirect:"/net/requests_go/"},{name:"v-693acf7f",path:"/net/requests/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-693acf7f").then(t)}},{path:"/net/requests/index.html",redirect:"/net/requests/"},{path:"/04.网络请求/01.基本请求/01.Python/01.requests.html",redirect:"/net/requests/"},{name:"v-5e26df42",path:"/net/pycurl/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-5e26df42").then(t)}},{path:"/net/pycurl/index.html",redirect:"/net/pycurl/"},{path:"/04.网络请求/01.基本请求/01.Python/09.pycurl.html",redirect:"/net/pycurl/"},{name:"v-0b76e81b",path:"/net/websocket/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-0b76e81b").then(t)}},{path:"/net/websocket/index.html",redirect:"/net/websocket/"},{path:"/04.网络请求/01.基本请求/01.Python/10.websocket.html",redirect:"/net/websocket/"},{name:"v-45b0651b",path:"/net/pysocks/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-45b0651b").then(t)}},{path:"/net/pysocks/index.html",redirect:"/net/pysocks/"},{path:"/04.网络请求/01.基本请求/01.Python/11.pysocks.html",redirect:"/net/pysocks/"},{name:"v-373a30f5",path:"/pages/gevent/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-373a30f5").then(t)}},{path:"/pages/gevent/index.html",redirect:"/pages/gevent/"},{path:"/04.网络请求/02.异步协程/02.gevent.html",redirect:"/pages/gevent/"},{name:"v-16d17bd8",path:"/pages/vthread/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-16d17bd8").then(t)}},{path:"/pages/vthread/index.html",redirect:"/pages/vthread/"},{path:"/04.网络请求/03.多线程/02.vthread.html",redirect:"/pages/vthread/"},{name:"v-ba983518",path:"/pages/threading/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-ba983518").then(t)}},{path:"/pages/threading/index.html",redirect:"/pages/threading/"},{path:"/04.网络请求/03.多线程/01.threading.html",redirect:"/pages/threading/"},{name:"v-1dbe5660",path:"/pages/selenium/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-1dbe5660").then(t)}},{path:"/pages/selenium/index.html",redirect:"/pages/selenium/"},{path:"/05.框架接口/01.自动化框架/01.selenium.html",redirect:"/pages/selenium/"},{name:"v-4c1c450f",path:"/pages/multiprocessing/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-4c1c450f").then(t)}},{path:"/pages/multiprocessing/index.html",redirect:"/pages/multiprocessing/"},{path:"/04.网络请求/04.多进程/01.multiprocessing.html",redirect:"/pages/multiprocessing/"},{name:"v-214f1600",path:"/pages/pyppeteer/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-214f1600").then(t)}},{path:"/pages/pyppeteer/index.html",redirect:"/pages/pyppeteer/"},{path:"/05.框架接口/01.自动化框架/02.pyppeteer.html",redirect:"/pages/pyppeteer/"},{name:"v-cdd670ce",path:"/pages/asyncio/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-cdd670ce").then(t)}},{path:"/pages/asyncio/index.html",redirect:"/pages/asyncio/"},{path:"/04.网络请求/02.异步协程/01.asyncio.html",redirect:"/pages/asyncio/"},{name:"v-3f00fb2e",path:"/pages/playwright/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-3f00fb2e").then(t)}},{path:"/pages/playwright/index.html",redirect:"/pages/playwright/"},{path:"/05.框架接口/01.自动化框架/03.playwright.html",redirect:"/pages/playwright/"},{name:"v-8ef4dcd8",path:"/pages/splash/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-8ef4dcd8").then(t)}},{path:"/pages/splash/index.html",redirect:"/pages/splash/"},{path:"/05.框架接口/01.自动化框架/04.splash.html",redirect:"/pages/splash/"},{name:"v-6033ca34",path:"/pages/appium/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-6033ca34").then(t)}},{path:"/pages/appium/index.html",redirect:"/pages/appium/"},{path:"/05.框架接口/01.自动化框架/06.appium.html",redirect:"/pages/appium/"},{name:"v-66c9fcc0",path:"/pages/airtest/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-66c9fcc0").then(t)}},{path:"/pages/airtest/index.html",redirect:"/pages/airtest/"},{path:"/05.框架接口/01.自动化框架/07.airtest.html",redirect:"/pages/airtest/"},{name:"v-22d57f06",path:"/pages/scrapy/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-22d57f06").then(t)}},{path:"/pages/scrapy/index.html",redirect:"/pages/scrapy/"},{path:"/05.框架接口/02.爬虫框架/01.scrapy.html",redirect:"/pages/scrapy/"},{name:"v-7e09ac5c",path:"/pages/feapder/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-7e09ac5c").then(t)}},{path:"/pages/feapder/index.html",redirect:"/pages/feapder/"},{path:"/05.框架接口/02.爬虫框架/02.feapder.html",redirect:"/pages/feapder/"},{name:"v-4fefb886",path:"/pages/pyspider/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-4fefb886").then(t)}},{path:"/pages/pyspider/index.html",redirect:"/pages/pyspider/"},{path:"/05.框架接口/02.爬虫框架/03.pyspider.html",redirect:"/pages/pyspider/"},{name:"v-2365702c",path:"/pages/DrissionPage/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-2365702c").then(t)}},{path:"/pages/DrissionPage/index.html",redirect:"/pages/DrissionPage/"},{path:"/05.框架接口/01.自动化框架/05.DrissionPage.html",redirect:"/pages/DrissionPage/"},{name:"v-db203518",path:"/pages/FastAPI/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-db203518").then(t)}},{path:"/pages/FastAPI/index.html",redirect:"/pages/FastAPI/"},{path:"/05.框架接口/03.接口编写/01.FastAPI.html",redirect:"/pages/FastAPI/"},{name:"v-78407e8c",path:"/pages/express/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-78407e8c").then(t)}},{path:"/pages/express/index.html",redirect:"/pages/express/"},{path:"/05.框架接口/03.接口编写/03.express.html",redirect:"/pages/express/"},{name:"v-507b5095",path:"/pages/re/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-507b5095").then(t)}},{path:"/pages/re/index.html",redirect:"/pages/re/"},{path:"/06.数据处理/01.解析提取/01.正则 re.html",redirect:"/pages/re/"},{name:"v-edcc8098",path:"/pages/lxml/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-edcc8098").then(t)}},{path:"/pages/lxml/index.html",redirect:"/pages/lxml/"},{path:"/06.数据处理/01.解析提取/02.lxml.html",redirect:"/pages/lxml/"},{name:"v-2ed5f6c4",path:"/pages/BeautifulSoup/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-2ed5f6c4").then(t)}},{path:"/pages/BeautifulSoup/index.html",redirect:"/pages/BeautifulSoup/"},{path:"/06.数据处理/01.解析提取/03.BeautifulSoup.html",redirect:"/pages/BeautifulSoup/"},{name:"v-7b767870",path:"/pages/flask/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-7b767870").then(t)}},{path:"/pages/flask/index.html",redirect:"/pages/flask/"},{path:"/05.框架接口/03.接口编写/02.flask.html",redirect:"/pages/flask/"},{name:"v-a54056d8",path:"/pages/pyquery/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-a54056d8").then(t)}},{path:"/pages/pyquery/index.html",redirect:"/pages/pyquery/"},{path:"/06.数据处理/01.解析提取/04.pyquery.html",redirect:"/pages/pyquery/"},{name:"v-83ed8818",path:"/pages/6010ec/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-83ed8818").then(t)}},{path:"/pages/6010ec/index.html",redirect:"/pages/6010ec/"},{path:"/06.数据处理/01.解析提取/06.GeneralNewsExtractor.html",redirect:"/pages/6010ec/"},{name:"v-3c65f592",path:"/pages/wordcloud/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-3c65f592").then(t)}},{path:"/pages/wordcloud/index.html",redirect:"/pages/wordcloud/"},{path:"/06.数据处理/02.数据分析/01.wordcloud.html",redirect:"/pages/wordcloud/"},{name:"v-4408e1f4",path:"/pages/selectolax/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-4408e1f4").then(t)}},{path:"/pages/selectolax/index.html",redirect:"/pages/selectolax/"},{path:"/06.数据处理/01.解析提取/05.selectolax.html",redirect:"/pages/selectolax/"},{name:"v-8712a24c",path:"/pages/25a157/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-8712a24c").then(t)}},{path:"/pages/25a157/index.html",redirect:"/pages/25a157/"},{path:"/06.数据处理/01.解析提取/07.newspaper.html",redirect:"/pages/25a157/"},{name:"v-6cbcd1e7",path:"/pages/pandas/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-6cbcd1e7").then(t)}},{path:"/pages/pandas/index.html",redirect:"/pages/pandas/"},{path:"/06.数据处理/02.数据分析/03.pandas.html",redirect:"/pages/pandas/"},{name:"v-5d3a4341",path:"/pages/jieba/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-5d3a4341").then(t)}},{path:"/pages/jieba/index.html",redirect:"/pages/jieba/"},{path:"/06.数据处理/02.数据分析/02.jieba.html",redirect:"/pages/jieba/"},{name:"v-345fa2a9",path:"/pages/NumPy/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-345fa2a9").then(t)}},{path:"/pages/NumPy/index.html",redirect:"/pages/NumPy/"},{path:"/06.数据处理/02.数据分析/04.NumPy.html",redirect:"/pages/NumPy/"},{name:"v-392848fe",path:"/pages/SciPy/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-392848fe").then(t)}},{path:"/pages/SciPy/index.html",redirect:"/pages/SciPy/"},{path:"/06.数据处理/02.数据分析/05.SciPy.html",redirect:"/pages/SciPy/"},{name:"v-774a2ddc",path:"/pages/matplotlib/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-774a2ddc").then(t)}},{path:"/pages/matplotlib/index.html",redirect:"/pages/matplotlib/"},{path:"/06.数据处理/03.制表绘图/01.matplotlib.html",redirect:"/pages/matplotlib/"},{name:"v-cee90ec0",path:"/pages/seaborn/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-cee90ec0").then(t)}},{path:"/pages/seaborn/index.html",redirect:"/pages/seaborn/"},{path:"/06.数据处理/03.制表绘图/04.seaborn.html",redirect:"/pages/seaborn/"},{name:"v-20b0e7c8",path:"/pages/file-storage/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-20b0e7c8").then(t)}},{path:"/pages/file-storage/index.html",redirect:"/pages/file-storage/"},{path:"/06.数据处理/04.数据存储/01.文件存储.html",redirect:"/pages/file-storage/"},{name:"v-3883fc5c",path:"/pages/plotly/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-3883fc5c").then(t)}},{path:"/pages/plotly/index.html",redirect:"/pages/plotly/"},{path:"/06.数据处理/03.制表绘图/03.plotly.html",redirect:"/pages/plotly/"},{name:"v-475ed81c",path:"/pages/pyecharts/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-475ed81c").then(t)}},{path:"/pages/pyecharts/index.html",redirect:"/pages/pyecharts/"},{path:"/06.数据处理/03.制表绘图/02.pyecharts.html",redirect:"/pages/pyecharts/"},{name:"v-6294f18c",path:"/pages/MongoDB/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-6294f18c").then(t)}},{path:"/pages/MongoDB/index.html",redirect:"/pages/MongoDB/"},{path:"/06.数据处理/04.数据存储/03.MongoDB.html",redirect:"/pages/MongoDB/"},{name:"v-1d5cb25c",path:"/pages/MySQL/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-1d5cb25c").then(t)}},{path:"/pages/MySQL/index.html",redirect:"/pages/MySQL/"},{path:"/06.数据处理/04.数据存储/02.MySQL.html",redirect:"/pages/MySQL/"},{name:"v-bf89294c",path:"/pages/SQLite/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-bf89294c").then(t)}},{path:"/pages/SQLite/index.html",redirect:"/pages/SQLite/"},{path:"/06.数据处理/04.数据存储/05.SQLite.html",redirect:"/pages/SQLite/"},{name:"v-0c8e4bc1",path:"/pages/goku/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-0c8e4bc1").then(t)}},{path:"/pages/goku/index.html",redirect:"/pages/goku/"},{path:"/07.悟空风控/01.悟空风控.html",redirect:"/pages/goku/"},{name:"v-6892eed9",path:"/pages/spiderbox-qa-changelog/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-6892eed9").then(t)}},{path:"/pages/spiderbox-qa-changelog/index.html",redirect:"/pages/spiderbox-qa-changelog/"},{path:"/09.更新日志/01.SpiderBox QA.html",redirect:"/pages/spiderbox-qa-changelog/"},{name:"v-3db36ba6",path:"/pages/Redis/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-3db36ba6").then(t)}},{path:"/pages/Redis/index.html",redirect:"/pages/Redis/"},{path:"/06.数据处理/04.数据存储/04.Redis.html",redirect:"/pages/Redis/"},{name:"v-5f1a6be9",path:"/pages/sponsor/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-5f1a6be9").then(t)}},{path:"/pages/sponsor/index.html",redirect:"/pages/sponsor/"},{path:"/08.赞助/01.赞助.html",redirect:"/pages/sponsor/"},{name:"v-710239cc",path:"/pages/changelog/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-710239cc").then(t)}},{path:"/pages/changelog/index.html",redirect:"/pages/changelog/"},{path:"/09.更新日志/02.changelog.html",redirect:"/pages/changelog/"},{name:"v-64a83b72",path:"/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-64a83b72").then(t)}},{path:"/index.html",redirect:"/"},{name:"v-9514734e",path:"/blog/",component:vs,beforeEnter:(n,e,t)=>{lo("Layout","v-9514734e").then(t)}},{path:"/blog/index.html",redirect:"/blog/"},{path:"/@pages/archivesPage.html",redirect:"/blog/"},{path:"*",component:vs}],_s={title:"SpiderAPI - 虫术 - 爬虫逆向常用 API",description:"SpiderAPI - 虫术 - 汇总各种爬虫逆向常用 API，涉及各种网络请求库，自动化框架，爬虫框架，HOOK 脚本，ADB 命令等。",base:"/",headTags:[["link",{rel:"icon",href:"https://static.wukongsec.com/spiderdoc/images/favicon.ico"}],["meta",{name:"keywords",content:"spiderapi,jsvmp,frida,spider,api,hook,adb"}],["meta",{name:"theme-color",content:"#11a8cd"}],["meta",{name:"baidu-site-verification",content:"codeva-L7Nb1StNAA"}],["script",{src:"//sdk.51.la/js-sdk-pro.min.js",type:"text/javascript",id:"LA_COLLECT",charset:"UTF-8"}],["script",{src:"https://lib.baomitu.com/jquery/1.9.1/jquery.min.js",type:"text/javascript"}],["script",{src:"/js/spiderapi.js",type:"text/javascript"}],["script",{src:"https://static.geetest.com/static/js/geetest.0.0.0.js",type:"text/javascript"}]],pages:[{title:"目录",frontmatter:{title:"目录",date:"2020-05-12T14:57:21.000Z",permalink:"/pages/toc",article:!1,sidebar:!1},regularPath:"/01.%E7%9B%AE%E5%BD%95/01.%E7%9B%AE%E5%BD%95/01.%E7%9B%AE%E5%BD%95.html",relativePath:"01.目录/01.目录/01.目录.md",key:"v-a2faba12",path:"/pages/toc/",headers:[{level:2,title:"目录",slug:"目录",normalizedTitle:"目录",charIndex:71}],headersStr:"目录",content:"❗❗❗注意\n\n本项在业余时间不断完善，仍处于初期建设当中，面向所有工程师征集常用工具/代码。\n\n\n所有内容未最终确定，随时可能变化！\n\n\n# 目录\n\n * 验证码\n   \n   * 国内验证码\n   * 国外验证码\n\n * 辅助查询\n   \n   * 辅助脚本\n   * 命令查询\n   * 指纹信息\n   * 加密算法\n\n * 网络请求\n   \n   * 基本请求\n   * 异步协程\n   * 多线程\n   * 多进程\n\n * 框架接口\n   \n   * 自动化框架\n   * 爬虫框架\n   * 接口编写\n\n * 数据处理\n   \n   * 解析提取\n   * 数据分析\n   * 制表绘图\n   * 数据存储\n\n * 报错处理",normalizedContent:"❗❗❗注意\n\n本项在业余时间不断完善，仍处于初期建设当中，面向所有工程师征集常用工具/代码。\n\n\n所有内容未最终确定，随时可能变化！\n\n\n# 目录\n\n * 验证码\n   \n   * 国内验证码\n   * 国外验证码\n\n * 辅助查询\n   \n   * 辅助脚本\n   * 命令查询\n   * 指纹信息\n   * 加密算法\n\n * 网络请求\n   \n   * 基本请求\n   * 异步协程\n   * 多线程\n   * 多进程\n\n * 框架接口\n   \n   * 自动化框架\n   * 爬虫框架\n   * 接口编写\n\n * 数据处理\n   \n   * 解析提取\n   * 数据分析\n   * 制表绘图\n   * 数据存储\n\n * 报错处理",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"目录总览",frontmatter:{title:"目录总览",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/01.captcha.html",relativePath:"02.验证码/01.captcha.md",key:"v-497f3aa6",path:"/captcha/",headers:[{level:2,title:"国内验证码",slug:"国内验证码",normalizedTitle:"国内验证码",charIndex:704},{level:2,title:"国外验证码",slug:"国外验证码",normalizedTitle:"国外验证码",charIndex:492}],headersStr:"国内验证码 国外验证码",content:"为什么会有这个页面？\n\n想做验证码逆向，但找不到 Demo？收藏本页即可快速查找市面上主流的验证码 Demo。\n\n所有 Demo 都是购买的正版服务吗？\n\n验证码普遍收费在 ￥3000+/年，没那个实力购买正版服务，大多数 Demo 使用 iframe 嵌入其他网站的方式进行展示，仅有少部分收费较低或者免费的服务是接入的正版，目前接入的正版服务有：\n\n * 极验行为验证 2.0：离线验证；\n * 极验行为验证 3.0：滑动拼图，业务场景（风控模型）：登陆/注册/找回密码；\n * 极验行为验证 4.0：智能模式，大多数情况为滑动拼图，业务场景（风控模型）：反爬虫；\n * 阿里云云盾验证码 2.0：无痕验证、滑块验证、拼图验证、空间推理；\n * Vaptcha：校验严格度：中等；\n * V5 验证：应用场景：登录/注册/表单/外挂/知识防护/短信防刷，超限密度：2QPS；\n * 友验 FastYotest：场景智能适配。\n\nDemo 页面加载异常？\n\n大部分 Demo 采用的是 iframe 嵌入其他网页的方式，推荐 PC 端访问，如果发现样式混乱，建议访问原地址进行测试！国外验证码如果出现显示异常、没有界面等情况，请尝试科学访问。\n\n有更好的 / 本页没有的 Demo？\n\n站长个人精力有限，如果您有更好的 Demo 页面，或者本页没有的 Demo，或者本页有误的地方，欢迎给我提 Issues，也可以直接联系站长添加收录或者修正！\n\n资料\n\n排名前 100 万网站的验证码使用分布（定期更新）：https://trends.builtwith.com/widgets/captcha\n\n\n# 国内验证码\n\n * 顶象 DING XIANG\n\n * 数美 NEXTDATA\n\n * 易盾 NETEASE YIDUN\n\n * 极验 GEETEST\n   \n   * 极验行为验证 2.0\n   * 极验行为验证 3.0\n   * 极验行为验证 4.0\n\n * 阿里云云盾验证码\n   \n   * 阿里云云盾验证码 1.0\n   * 阿里云云盾验证码 2.0\n\n * 腾讯天御 T-Sec\n\n * 小红书 redcaptcha\n\n * 小盾 XIAODUN\n\n * 云片 YUNPIAN\n\n * 三六零天御\n\n * 螺丝帽 Luosimao\n\n * Vaptcha\n\n * V5 验证\n\n * 凯格 KYGER\n\n * 友验 FastYotest\n\n\n# 国外验证码\n\n * Cloudflare turnstile\n   \n   * Cloudflare Managed Challenge\n   * Cloudflare Non-Interactive Challenge\n   * Cloudflare Invisible Challenge\n\n * Google reCAPTCHA\n   \n   * reCAPTCHA v2 Checkbox\n   * reCAPTCHA v2 Invisible\n   * reCAPTCHA v2 Enterprise\n   * reCAPTCHA v3\n   * reCAPTCHA v3 Enterprise\n\n * hCaptcha\n   \n   * hCaptcha Easy\n   * hCaptcha Medium\n   * hCaptcha Difficult\n   * hCaptcha Invisible\n   * hCaptcha Pro\n   * hCaptcha Enterprise\n\n * Arkose Labs FunCAPTCHA\n\n * DataDome CAPTCHA\n\n * PerimeterX丨HUMAN Challenge\n\n * AWS (Amazon) WAF Captcha\n\n * MTCaptcha\n\n * Lemin CAPTCHA丨Capy Puzzle\n\n * Yandex SmartCaptcha\n\n * mCaptcha\n\n * KeyCAPTCHA\n\n * CyberSiARA\n\n * Friendly Captcha\n\n * ARCaptcha",normalizedContent:"为什么会有这个页面？\n\n想做验证码逆向，但找不到 demo？收藏本页即可快速查找市面上主流的验证码 demo。\n\n所有 demo 都是购买的正版服务吗？\n\n验证码普遍收费在 ￥3000+/年，没那个实力购买正版服务，大多数 demo 使用 iframe 嵌入其他网站的方式进行展示，仅有少部分收费较低或者免费的服务是接入的正版，目前接入的正版服务有：\n\n * 极验行为验证 2.0：离线验证；\n * 极验行为验证 3.0：滑动拼图，业务场景（风控模型）：登陆/注册/找回密码；\n * 极验行为验证 4.0：智能模式，大多数情况为滑动拼图，业务场景（风控模型）：反爬虫；\n * 阿里云云盾验证码 2.0：无痕验证、滑块验证、拼图验证、空间推理；\n * vaptcha：校验严格度：中等；\n * v5 验证：应用场景：登录/注册/表单/外挂/知识防护/短信防刷，超限密度：2qps；\n * 友验 fastyotest：场景智能适配。\n\ndemo 页面加载异常？\n\n大部分 demo 采用的是 iframe 嵌入其他网页的方式，推荐 pc 端访问，如果发现样式混乱，建议访问原地址进行测试！国外验证码如果出现显示异常、没有界面等情况，请尝试科学访问。\n\n有更好的 / 本页没有的 demo？\n\n站长个人精力有限，如果您有更好的 demo 页面，或者本页没有的 demo，或者本页有误的地方，欢迎给我提 issues，也可以直接联系站长添加收录或者修正！\n\n资料\n\n排名前 100 万网站的验证码使用分布（定期更新）：https://trends.builtwith.com/widgets/captcha\n\n\n# 国内验证码\n\n * 顶象 ding xiang\n\n * 数美 nextdata\n\n * 易盾 netease yidun\n\n * 极验 geetest\n   \n   * 极验行为验证 2.0\n   * 极验行为验证 3.0\n   * 极验行为验证 4.0\n\n * 阿里云云盾验证码\n   \n   * 阿里云云盾验证码 1.0\n   * 阿里云云盾验证码 2.0\n\n * 腾讯天御 t-sec\n\n * 小红书 redcaptcha\n\n * 小盾 xiaodun\n\n * 云片 yunpian\n\n * 三六零天御\n\n * 螺丝帽 luosimao\n\n * vaptcha\n\n * v5 验证\n\n * 凯格 kyger\n\n * 友验 fastyotest\n\n\n# 国外验证码\n\n * cloudflare turnstile\n   \n   * cloudflare managed challenge\n   * cloudflare non-interactive challenge\n   * cloudflare invisible challenge\n\n * google recaptcha\n   \n   * recaptcha v2 checkbox\n   * recaptcha v2 invisible\n   * recaptcha v2 enterprise\n   * recaptcha v3\n   * recaptcha v3 enterprise\n\n * hcaptcha\n   \n   * hcaptcha easy\n   * hcaptcha medium\n   * hcaptcha difficult\n   * hcaptcha invisible\n   * hcaptcha pro\n   * hcaptcha enterprise\n\n * arkose labs funcaptcha\n\n * datadome captcha\n\n * perimeterx丨human challenge\n\n * aws (amazon) waf captcha\n\n * mtcaptcha\n\n * lemin captcha丨capy puzzle\n\n * yandex smartcaptcha\n\n * mcaptcha\n\n * keycaptcha\n\n * cybersiara\n\n * friendly captcha\n\n * arcaptcha",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"顶象 DING XIANG",frontmatter:{title:"顶象 DING XIANG",date:"2023-10-20T15:51:41.000Z",permalink:"/captcha/dingxiang/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/01.%E9%A1%B6%E8%B1%A1%20DING%20XIANG.html",relativePath:"02.验证码/02.国内验证码/01.顶象 DING XIANG.md",key:"v-1caff22a",path:"/captcha/dingxiang/",headersStr:null,content:"关于顶象丨DING XIANG\n\n北京顶象技术有限公司旗下第五代验证码采用设备环境、行为特征、访问频率等多个风险判断要素，以及业内最丰富的验证方式帮助客户进行人机风险防控。并通过顶象防御云进行感知迭代， 能够有效拦截批量撞库扫号、批量注册等机器风险行为。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://www.dingxiang-inc.com/business/captcha\n * 官方 Demo2：https://cdn.dingxiang-inc.com/ctu-group/captcha-ui/\n * 官方 Demo3：https://cdn.dingxiang-inc.com/ctu-group/captcha-ui/demo/\n\n访问 顶象官网\n\n注意\n\n由于顶象官网 X-Frame-Options 限制，不允许 iframe 嵌入，建议访问官方 Demo1，有完整的 13 种验证方式在线体验！",normalizedContent:"关于顶象丨ding xiang\n\n北京顶象技术有限公司旗下第五代验证码采用设备环境、行为特征、访问频率等多个风险判断要素，以及业内最丰富的验证方式帮助客户进行人机风险防控。并通过顶象防御云进行感知迭代， 能够有效拦截批量撞库扫号、批量注册等机器风险行为。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://www.dingxiang-inc.com/business/captcha\n * 官方 demo2：https://cdn.dingxiang-inc.com/ctu-group/captcha-ui/\n * 官方 demo3：https://cdn.dingxiang-inc.com/ctu-group/captcha-ui/demo/\n\n访问 顶象官网\n\n注意\n\n由于顶象官网 x-frame-options 限制，不允许 iframe 嵌入，建议访问官方 demo1，有完整的 13 种验证方式在线体验！",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"数美 NEXTDATA",frontmatter:{title:"数美 NEXTDATA",date:"2023-10-20T17:22:24.000Z",permalink:"/captcha/shumei/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E6%95%B0%E7%BE%8E%20NEXTDATA.html",relativePath:"02.验证码/02.国内验证码/02.数美 NEXTDATA.md",key:"v-31b14f6e",path:"/captcha/shumei/",headersStr:null,content:"关于数美丨NEXTDATA\n\n北京数美时代科技有限公司成立于 2015 年 6 月，旗下智能验证码在用户注册、登录、搜索等场景下，通过智能验证码精准防御机器刷单、刷榜、刷评论等欺诈行为，保障真实用户体验。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://www.ishumei.com/trial/captcha.html\n * 官方 Demo2：https://castatic.fengkongcloud.cn/pr/v1.0.4/demo.html\n\n访问 数美官网",normalizedContent:"关于数美丨nextdata\n\n北京数美时代科技有限公司成立于 2015 年 6 月，旗下智能验证码在用户注册、登录、搜索等场景下，通过智能验证码精准防御机器刷单、刷榜、刷评论等欺诈行为，保障真实用户体验。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://www.ishumei.com/trial/captcha.html\n * 官方 demo2：https://castatic.fengkongcloud.cn/pr/v1.0.4/demo.html\n\n访问 数美官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"易盾 NETEASE YIDUN",frontmatter:{title:"易盾 NETEASE YIDUN",date:"2023-10-20T15:26:21.000Z",permalink:"/captcha/yidun/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E6%98%93%E7%9B%BE%20NETEASE%20YIDUN.html",relativePath:"02.验证码/02.国内验证码/03.易盾 NETEASE YIDUN.md",key:"v-72251b30",path:"/captcha/yidun/",headersStr:null,content:"关于网易易盾丨NETEASE YIDUN\n\n网易（杭州）网络有限公司旗下产品易盾，是一个一站式数字内容风控品牌，其行为式验证码搭载风险感知引擎，智能切换验证难度，安全性高，支持 78 种国际语言、支持样式、文案、语言自定义，全球CDN加速，多通道智能切换，极致用户体验。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://dun.163.com/trial/sense\n * 知乎登录：https://www.zhihu.com/signin\n * 网易严选登录：https://you.163.com/\n * 中影华夏聚合登录：https://www.zyhxjh.com/#/login\n\n访问 易盾官网\n\n注意\n\n官方 Demo 与实际验证场景可能有所出入，相关请求参数校验的严格程度、风控难度可能有所差别！",normalizedContent:"关于网易易盾丨netease yidun\n\n网易（杭州）网络有限公司旗下产品易盾，是一个一站式数字内容风控品牌，其行为式验证码搭载风险感知引擎，智能切换验证难度，安全性高，支持 78 种国际语言、支持样式、文案、语言自定义，全球cdn加速，多通道智能切换，极致用户体验。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://dun.163.com/trial/sense\n * 知乎登录：https://www.zhihu.com/signin\n * 网易严选登录：https://you.163.com/\n * 中影华夏聚合登录：https://www.zyhxjh.com/#/login\n\n访问 易盾官网\n\n注意\n\n官方 demo 与实际验证场景可能有所出入，相关请求参数校验的严格程度、风控难度可能有所差别！",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"极验行为验证 4.0",frontmatter:{title:"极验行为验证 4.0",date:"2023-10-20T10:59:50.000Z",permalink:"/captcha/geetest-v4/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/04.%E6%9E%81%E9%AA%8C%20GEETEST/03.%E8%A1%8C%E4%B8%BA%E9%AA%8C%E8%AF%81%204.0.html",relativePath:"02.验证码/02.国内验证码/04.极验 GEETEST/03.行为验证 4.0.md",key:"v-e8c1dd50",path:"/captcha/geetest-v4/",headersStr:null,content:"关于极验行为验证 丨GEETEST\n\n武汉极意网络科技有限公司（简称：极验）于 2012 年首次提出行为式验证的概念，开创了验证码新时代。2021 年推出了第四代行为验，全新第四代行为式验证码，以变应万变，安全能力、体验配置和验证模式全面升级，以更有趣的验证形式为企业对抗黑产保驾护航。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://gt4.geetest.com/\n * 官方 Demo2：https://www.geetest.com/adaptive-captcha-demo\n * 官方 Demo3：https://gt4.geetest.com/demov4/index-zh.html\n\n访问 极验官网\n\n提示\n\n本页面 Demo 为智能模式，大多数情况下为滑块验证码，更多类型请访问官方 Demo 查看。\n",normalizedContent:"关于极验行为验证 丨geetest\n\n武汉极意网络科技有限公司（简称：极验）于 2012 年首次提出行为式验证的概念，开创了验证码新时代。2021 年推出了第四代行为验，全新第四代行为式验证码，以变应万变，安全能力、体验配置和验证模式全面升级，以更有趣的验证形式为企业对抗黑产保驾护航。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://gt4.geetest.com/\n * 官方 demo2：https://www.geetest.com/adaptive-captcha-demo\n * 官方 demo3：https://gt4.geetest.com/demov4/index-zh.html\n\n访问 极验官网\n\n提示\n\n本页面 demo 为智能模式，大多数情况下为滑块验证码，更多类型请访问官方 demo 查看。\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"极验行为验证 3.0",frontmatter:{title:"极验行为验证 3.0",date:"2023-10-20T10:59:50.000Z",permalink:"/captcha/geetest-v3/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/04.%E6%9E%81%E9%AA%8C%20GEETEST/02.%E8%A1%8C%E4%B8%BA%E9%AA%8C%E8%AF%81%203.0.html",relativePath:"02.验证码/02.国内验证码/04.极验 GEETEST/02.行为验证 3.0.md",key:"v-e11104d0",path:"/captcha/geetest-v3/",headersStr:null,content:"关于极验行为验证 丨GEETEST\n\n武汉极意网络科技有限公司（简称：极验）于 2012 年首次提出行为式验证的概念，开创了验证码新时代。2017 年推出第三代行为验证，基于生物的行为特征，结合 AI 技术，帮助36万+网站和 APP 智能区分人机，识别恶意流量，保障业务安全。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://www.geetest.com/demo/\n * 官方 Demo2：https://www.geetest.com/show\n\n访问 极验官网\n\n提示\n\n本页面 Demo 仅展示滑块验证码，更多类型请访问官方 Demo 查看。\n",normalizedContent:"关于极验行为验证 丨geetest\n\n武汉极意网络科技有限公司（简称：极验）于 2012 年首次提出行为式验证的概念，开创了验证码新时代。2017 年推出第三代行为验证，基于生物的行为特征，结合 ai 技术，帮助36万+网站和 app 智能区分人机，识别恶意流量，保障业务安全。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://www.geetest.com/demo/\n * 官方 demo2：https://www.geetest.com/show\n\n访问 极验官网\n\n提示\n\n本页面 demo 仅展示滑块验证码，更多类型请访问官方 demo 查看。\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"阿里云云盾验证码 1.0",frontmatter:{title:"阿里云云盾验证码 1.0",date:"2023-10-20T17:59:11.000Z",permalink:"/captcha/aliyun-v1/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/05.%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%91%E7%9B%BE%E9%AA%8C%E8%AF%81%E7%A0%81/01.%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%91%E7%9B%BE%E9%AA%8C%E8%AF%81%E7%A0%81%201.0.html",relativePath:"02.验证码/02.国内验证码/05.阿里云云盾验证码/01.阿里云云盾验证码 1.0.md",key:"v-4b7718dc",path:"/captcha/aliyun-v1/",headersStr:null,content:"关于阿里云云盾验证码\n\n阿里云计算有限公司旗下的验证码产品，通过简单、安全、多样的交互逻辑，提供区分机器脚本和自然人的验证服务，能够缓解及防止计算机程序模拟人类用户来滥用网络资源，在提升网站资源不被恶意程序访问的防御能力的同时，保持真实的用户体验。\n\n\n阿里云验证码有两种版本：\n\n * 验证码 1.0：支持滑动验证、无痕验证、智能验证，民间常说的 140、226、水果滑块等都属于验证码 1.0；\n * 验证码 2.0：支持滑动验证、无痕验证、空间推理、拼图验证，于 2023 年 7 月推出。其中无痕验证可配置二次挑战。\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://promotion.aliyun.com/ntms/act/captchaIntroAndDemo.html\n * 众安在线：http://subao.zhonganib.com//subao-h5/aggregation/login/index.html\n * 1688（清除 cookie 访问）：https://detail.1688.com/offer/691529887014.html\n * 车网：http://company.ecrrc.com/sup-6875-0-0/list-0-0-2.html\n * 高德地图：https://ditu.amap.com/detail/get/detail\n * 淘宝：https://scportal.taobao.com/quali_show.htm\n\n访问 阿里云 Captcha 官网\n\n注意\n\n本页 Demo 没有后台二次校验，仅可用于相关参数逻辑分析，需要校验完整流程请访问其他 Demo。\n",normalizedContent:"关于阿里云云盾验证码\n\n阿里云计算有限公司旗下的验证码产品，通过简单、安全、多样的交互逻辑，提供区分机器脚本和自然人的验证服务，能够缓解及防止计算机程序模拟人类用户来滥用网络资源，在提升网站资源不被恶意程序访问的防御能力的同时，保持真实的用户体验。\n\n\n阿里云验证码有两种版本：\n\n * 验证码 1.0：支持滑动验证、无痕验证、智能验证，民间常说的 140、226、水果滑块等都属于验证码 1.0；\n * 验证码 2.0：支持滑动验证、无痕验证、空间推理、拼图验证，于 2023 年 7 月推出。其中无痕验证可配置二次挑战。\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://promotion.aliyun.com/ntms/act/captchaintroanddemo.html\n * 众安在线：http://subao.zhonganib.com//subao-h5/aggregation/login/index.html\n * 1688（清除 cookie 访问）：https://detail.1688.com/offer/691529887014.html\n * 车网：http://company.ecrrc.com/sup-6875-0-0/list-0-0-2.html\n * 高德地图：https://ditu.amap.com/detail/get/detail\n * 淘宝：https://scportal.taobao.com/quali_show.htm\n\n访问 阿里云 captcha 官网\n\n注意\n\n本页 demo 没有后台二次校验，仅可用于相关参数逻辑分析，需要校验完整流程请访问其他 demo。\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"极验行为验证 2.0",frontmatter:{title:"极验行为验证 2.0",date:"2023-10-20T10:59:50.000Z",permalink:"/captcha/geetest-v2/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/04.%E6%9E%81%E9%AA%8C%20GEETEST/01.%E8%A1%8C%E4%B8%BA%E9%AA%8C%E8%AF%81%202.0.html",relativePath:"02.验证码/02.国内验证码/04.极验 GEETEST/01.行为验证 2.0.md",key:"v-d9602c50",path:"/captcha/geetest-v2/",headersStr:null,content:"关于极验行为验证 丨GEETEST\n\n武汉极意网络科技有限公司（简称：极验）于 2012 年首次提出行为式验证的概念，开创了验证码新时代。2015 年推出第二代智能验证，率先融入 AI 能力，多维联动探寻人机边界，服务全球企业突破 6 万家，掀起验证码创新风潮。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 不知名网站注册：https://nozomi.wtf/auth/register\n * 上海市市场主体信用信息公示系统：https://fw.scjgj.sh.gov.cn/noticesh/home\n * 江苏小微企业名录：http://www.jsgsj.gov.cn:58888/mini/netweb/SMLibrary.jsp\n\n访问 极验官网\n\n提示\n\n本页 Demo 为离线验证，由于极验官方已经关闭了 2 代的后台，无法新增相关配置信息，所以本页模拟获取 gt 和 challenge 是直接写死了，校验是否成功，也没有什么风控判断，只要有参数即可。\n",normalizedContent:"关于极验行为验证 丨geetest\n\n武汉极意网络科技有限公司（简称：极验）于 2012 年首次提出行为式验证的概念，开创了验证码新时代。2015 年推出第二代智能验证，率先融入 ai 能力，多维联动探寻人机边界，服务全球企业突破 6 万家，掀起验证码创新风潮。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 不知名网站注册：https://nozomi.wtf/auth/register\n * 上海市市场主体信用信息公示系统：https://fw.scjgj.sh.gov.cn/noticesh/home\n * 江苏小微企业名录：http://www.jsgsj.gov.cn:58888/mini/netweb/smlibrary.jsp\n\n访问 极验官网\n\n提示\n\n本页 demo 为离线验证，由于极验官方已经关闭了 2 代的后台，无法新增相关配置信息，所以本页模拟获取 gt 和 challenge 是直接写死了，校验是否成功，也没有什么风控判断，只要有参数即可。\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"阿里云云盾验证码 2.0",frontmatter:{title:"阿里云云盾验证码 2.0",date:"2023-10-20T17:59:11.000Z",permalink:"/captcha/aliyun-v2/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/05.%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%91%E7%9B%BE%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E9%98%BF%E9%87%8C%E4%BA%91%E4%BA%91%E7%9B%BE%E9%AA%8C%E8%AF%81%E7%A0%81%202.0.html",relativePath:"02.验证码/02.国内验证码/05.阿里云云盾验证码/02.阿里云云盾验证码 2.0.md",key:"v-43831352",path:"/captcha/aliyun-v2/",headersStr:null,content:"关于阿里云云盾验证码\n\n阿里云计算有限公司旗下的验证码产品，通过简单、安全、多样的交互逻辑，提供区分机器脚本和自然人的验证服务，能够缓解及防止计算机程序模拟人类用户来滥用网络资源，在提升网站资源不被恶意程序访问的防御能力的同时，保持真实的用户体验。\n\n\n阿里云验证码有两种版本：\n\n * 验证码 1.0：支持滑动验证、无痕验证、智能验证，民间常说的 140、226、水果滑块等都属于验证码 1.0；\n * 验证码 2.0：支持滑动验证、无痕验证、空间推理、拼图验证，于 2023 年 7 月推出。其中无痕验证可配置二次挑战。\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://promotion.aliyun.com/ntms/act/captchaIntroAndDemo.html\n * 众安在线：http://subao.zhonganib.com//subao-h5/aggregation/login/index.html\n * 1688（清除 cookie 访问）：https://detail.1688.com/offer/691529887014.html\n * 车网：http://company.ecrrc.com/sup-6875-0-0/list-0-0-2.html\n * 高德地图：https://ditu.amap.com/detail/get/detail\n * 淘宝：https://scportal.taobao.com/quali_show.htm\n\n访问 阿里云 Captcha 官网\n\n注意\n\n验证码 2.0 无痕验证直接点击登录即可，若出现滑块验证，说明需要二次验证，/aliyun2/login 接口返回的 result.verify_result 为 true 则表示验证通过。\n\n\n\n阿里云云盾验证码 2.0 Demo\n\n无痕验证 滑块验证 拼图验证 空间推理\n\n\n\n\n\n点击上方橙色按钮，选择模式后加载验证码！",normalizedContent:"关于阿里云云盾验证码\n\n阿里云计算有限公司旗下的验证码产品，通过简单、安全、多样的交互逻辑，提供区分机器脚本和自然人的验证服务，能够缓解及防止计算机程序模拟人类用户来滥用网络资源，在提升网站资源不被恶意程序访问的防御能力的同时，保持真实的用户体验。\n\n\n阿里云验证码有两种版本：\n\n * 验证码 1.0：支持滑动验证、无痕验证、智能验证，民间常说的 140、226、水果滑块等都属于验证码 1.0；\n * 验证码 2.0：支持滑动验证、无痕验证、空间推理、拼图验证，于 2023 年 7 月推出。其中无痕验证可配置二次挑战。\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://promotion.aliyun.com/ntms/act/captchaintroanddemo.html\n * 众安在线：http://subao.zhonganib.com//subao-h5/aggregation/login/index.html\n * 1688（清除 cookie 访问）：https://detail.1688.com/offer/691529887014.html\n * 车网：http://company.ecrrc.com/sup-6875-0-0/list-0-0-2.html\n * 高德地图：https://ditu.amap.com/detail/get/detail\n * 淘宝：https://scportal.taobao.com/quali_show.htm\n\n访问 阿里云 captcha 官网\n\n注意\n\n验证码 2.0 无痕验证直接点击登录即可，若出现滑块验证，说明需要二次验证，/aliyun2/login 接口返回的 result.verify_result 为 true 则表示验证通过。\n\n\n\n阿里云云盾验证码 2.0 demo\n\n无痕验证 滑块验证 拼图验证 空间推理\n\n\n\n\n\n点击上方橙色按钮，选择模式后加载验证码！",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"腾讯天御 T-Sec",frontmatter:{title:"腾讯天御 T-Sec",date:"2023-10-20T18:08:23.000Z",permalink:"/captcha/tencent/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/06.%E8%85%BE%E8%AE%AF%E5%A4%A9%E5%BE%A1%20T-Sec.html",relativePath:"02.验证码/02.国内验证码/06.腾讯天御 T-Sec.md",key:"v-71dca100",path:"/captcha/tencent/",headersStr:null,content:"关于腾讯天御 T-Sec\n\n腾讯云计算（北京）有限责任公司旗下产品腾讯天御 T-Sec，原腾讯防水墙，是新一代行为验证码（Captcha），基于十道安全栅栏， 为网页、App、小程序开发者打造立体、全面的人机验证。最大程度保护注册登录、活动秒杀、点赞发帖、数据保护等各大场景下业务安全的同时，提供更精细化的用户体验。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://cloud.tencent.com/product/captcha\n * QQ 找回密码页：https://accounts.qq.com/find/password\n * 腾讯企业邮手机号登录：https://exmail.qq.com/login\n * 小鹅通手机注册页：https://admin.xiaoe-tech.com/t/login?src_page=A#/phoneRegister\n * 图形点选：https://ssl.captcha.qq.com/template/wireless_mqq_captcha.html?clientype=1&apptype=1&aid=199519516\n\n访问 腾讯天御 T-Sec 官网",normalizedContent:"关于腾讯天御 t-sec\n\n腾讯云计算（北京）有限责任公司旗下产品腾讯天御 t-sec，原腾讯防水墙，是新一代行为验证码（captcha），基于十道安全栅栏， 为网页、app、小程序开发者打造立体、全面的人机验证。最大程度保护注册登录、活动秒杀、点赞发帖、数据保护等各大场景下业务安全的同时，提供更精细化的用户体验。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://cloud.tencent.com/product/captcha\n * qq 找回密码页：https://accounts.qq.com/find/password\n * 腾讯企业邮手机号登录：https://exmail.qq.com/login\n * 小鹅通手机注册页：https://admin.xiaoe-tech.com/t/login?src_page=a#/phoneregister\n * 图形点选：https://ssl.captcha.qq.com/template/wireless_mqq_captcha.html?clientype=1&apptype=1&aid=199519516\n\n访问 腾讯天御 t-sec 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"小红书 redCaptcha",frontmatter:{title:"小红书 redCaptcha",date:"2023-10-21T20:06:55.000Z",permalink:"/captcha/redcaptcha/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/07.%E5%B0%8F%E7%BA%A2%E4%B9%A6%20redCaptcha.html",relativePath:"02.验证码/02.国内验证码/07.小红书 redCaptcha.md",key:"v-774b903f",path:"/captcha/redcaptcha/",headersStr:null,content:"关于小红书丨redCaptcha\n\n行吟信息科技（上海）有限公司旗下产品小红书于 2013 年 6 月在上海市成立，是一个生活方式平台和消费决策入口，小红书平台前期使用数美验证码，现改为自研的旋转验证码，redcaptcha 是其接口的命名，目前仅应用于小红书平台。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方页面：https://www.xiaohongshu.com/web-login/captcha\n\n访问 小红书官网\n\n注意\n\n小红书对于爬虫限制比较严格，容易收到律师函！本页 Demo 仅供学习交流使用，请勿大规模发起请求验证，合理合法合规使用，若恶意使用所导致的任何风险及后果与本站无关，本站概不负责！",normalizedContent:"关于小红书丨redcaptcha\n\n行吟信息科技（上海）有限公司旗下产品小红书于 2013 年 6 月在上海市成立，是一个生活方式平台和消费决策入口，小红书平台前期使用数美验证码，现改为自研的旋转验证码，redcaptcha 是其接口的命名，目前仅应用于小红书平台。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方页面：https://www.xiaohongshu.com/web-login/captcha\n\n访问 小红书官网\n\n注意\n\n小红书对于爬虫限制比较严格，容易收到律师函！本页 demo 仅供学习交流使用，请勿大规模发起请求验证，合理合法合规使用，若恶意使用所导致的任何风险及后果与本站无关，本站概不负责！",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"小盾 XIAODUN",frontmatter:{title:"小盾 XIAODUN",date:"2023-10-20T18:08:23.000Z",permalink:"/captcha/xiaodun/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/08.%E5%B0%8F%E7%9B%BE%20XIAODUN.html",relativePath:"02.验证码/02.国内验证码/08.小盾 XIAODUN.md",key:"v-cf14bae6",path:"/captcha/xiaodun/",headersStr:null,content:"关于小盾安全丨XIAODUN\n\n杭州小盾安全科技有限公司是同盾科技旗下全新业务安全独立品牌，其智能验证码通过用户行为验证识别出风险，将根据当前会话安全系数，提出更有难度的验证挑战，以对抗机器攻击。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://sec.xiaodun.com/onlineExperience/captcha\n\n访问 小盾安全官网",normalizedContent:"关于小盾安全丨xiaodun\n\n杭州小盾安全科技有限公司是同盾科技旗下全新业务安全独立品牌，其智能验证码通过用户行为验证识别出风险，将根据当前会话安全系数，提出更有难度的验证挑战，以对抗机器攻击。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://sec.xiaodun.com/onlineexperience/captcha\n\n访问 小盾安全官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"云片 YUNPIAN",frontmatter:{title:"云片 YUNPIAN",date:"2023-10-20T18:08:23.000Z",permalink:"/captcha/yunpian/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/09.%E4%BA%91%E7%89%87%20YUNPIAN.html",relativePath:"02.验证码/02.国内验证码/09.云片 YUNPIAN.md",key:"v-75220eb0",path:"/captcha/yunpian/",headersStr:null,content:"关于云片丨YUNPIAN\n\n杭州云片网络科技有限公司成立于 2013 年，是全球智能云通讯服务商，旗下行为验证能帮助网站智能区分人机，防止恶意攻击。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.yunpian.com/product/captcha\n\n访问 小盾安全官网\n\n",normalizedContent:"关于云片丨yunpian\n\n杭州云片网络科技有限公司成立于 2013 年，是全球智能云通讯服务商，旗下行为验证能帮助网站智能区分人机，防止恶意攻击。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.yunpian.com/product/captcha\n\n访问 小盾安全官网\n\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"三六零天御",frontmatter:{title:"三六零天御",date:"2023-11-07T15:06:00.000Z",permalink:"/captcha/360/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/10.%E4%B8%89%E5%85%AD%E9%9B%B6%E5%A4%A9%E5%BE%A1.html",relativePath:"02.验证码/02.国内验证码/10.三六零天御.md",key:"v-00eb683b",path:"/captcha/360/",headersStr:null,content:"关于三六零天御\n\n三六零科技集团有限公司旗下产品三六零天御是面向移动应用打造的安全品牌，拥有涵盖移动应用全生命周期的安全产品和整体解决方案。旗下行为式验证结合异常环境监测、设备指纹、访问频率等多种技术，通过验证后台对多种数据的建模分析，可以准确判定人机结果，有效拦截恶意登录、批量注册等黑灰产攻击。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://tianyu.360.cn/#/global/details/sliding-puzzle\n * 坦克世界商城账号手机登录：https://shop.wot.360.cn/\n * 360 安全大脑情报搜索：https://ti.360.com/\n\n访问 三六零天御官网\n\n",normalizedContent:"关于三六零天御\n\n三六零科技集团有限公司旗下产品三六零天御是面向移动应用打造的安全品牌，拥有涵盖移动应用全生命周期的安全产品和整体解决方案。旗下行为式验证结合异常环境监测、设备指纹、访问频率等多种技术，通过验证后台对多种数据的建模分析，可以准确判定人机结果，有效拦截恶意登录、批量注册等黑灰产攻击。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://tianyu.360.cn/#/global/details/sliding-puzzle\n * 坦克世界商城账号手机登录：https://shop.wot.360.cn/\n * 360 安全大脑情报搜索：https://ti.360.com/\n\n访问 三六零天御官网\n\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"螺丝帽 Luosimao",frontmatter:{title:"螺丝帽 Luosimao",date:"2023-10-21T17:51:56.000Z",permalink:"/captcha/luosimao/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/11.%E8%9E%BA%E4%B8%9D%E5%B8%BD%20Luosimao.html",relativePath:"02.验证码/02.国内验证码/11.螺丝帽 Luosimao.md",key:"v-12fd4846",path:"/captcha/luosimao/",headersStr:null,content:"关于螺丝帽丨Luosimao\n\n上海铁壳网络科技有限公司旗下产品 Luosimao 人机验证，免去了复杂的输入过程，具有更加优秀的操作体验，更加美观的设计，多种有效特征检测手段以及复杂多变的图形生成相配合，简化操作的同时全面提高了验证的安全性。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://captcha.luosimao.com/demo/\n\n访问 螺丝帽官网",normalizedContent:"关于螺丝帽丨luosimao\n\n上海铁壳网络科技有限公司旗下产品 luosimao 人机验证，免去了复杂的输入过程，具有更加优秀的操作体验，更加美观的设计，多种有效特征检测手段以及复杂多变的图形生成相配合，简化操作的同时全面提高了验证的安全性。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://captcha.luosimao.com/demo/\n\n访问 螺丝帽官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Vaptcha",frontmatter:{title:"Vaptcha",date:"2023-10-21T17:35:35.000Z",permalink:"/captcha/vaptcha/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/12.Vaptcha.html",relativePath:"02.验证码/02.国内验证码/12.Vaptcha.md",key:"v-396691d7",path:"/captcha/vaptcha/",headersStr:null,content:"关于 Vaptcha\n\n重庆白狮网络科技有限公司旗下产品 Vaptcha 首创手势验证码，是基于人工智能和大数据的创新人机验证解决方案。通过综合分析用户的行为特征、生物特征、网络环境等，Vaptcha 高效、不断进化的智能风控引擎能准确的识别并拦截包括人工打码在内的攻击请求。与传统验证码相比，无论在安全级别还是用户体验，Vaptcha 都有显著的优势。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.vaptcha.com/#demo\n\n访问 Vaptcha 官网\n",normalizedContent:"关于 vaptcha\n\n重庆白狮网络科技有限公司旗下产品 vaptcha 首创手势验证码，是基于人工智能和大数据的创新人机验证解决方案。通过综合分析用户的行为特征、生物特征、网络环境等，vaptcha 高效、不断进化的智能风控引擎能准确的识别并拦截包括人工打码在内的攻击请求。与传统验证码相比，无论在安全级别还是用户体验，vaptcha 都有显著的优势。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.vaptcha.com/#demo\n\n访问 vaptcha 官网\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"凯格 KYGER",frontmatter:{title:"凯格 KYGER",date:"2023-10-20T17:34:52.000Z",permalink:"/captcha/kgcaptcha/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/14.%E5%87%AF%E6%A0%BC%20KYGER.html",relativePath:"02.验证码/02.国内验证码/14.凯格 KYGER.md",key:"v-70a22d8c",path:"/captcha/kgcaptcha/",headersStr:null,content:"关于凯格丨KYGER\n\n广东凯格科技有限公司旗下产品凯格行为验证码，开创行为验证新时代，行为 AI 技术结合先进的风控引擎，基于生物行为特征，利用深度学习构建安全防御体系，持续进化提升人机区分能力，保障业务稳定的同时提升用户体验。有效区分真实用户和机器自动化脚本攻击，避免机器请求造成业务损失。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://www.kgcaptcha.com/demo/\n * 官方 Demo2：https://kgoa.net/\n\n访问 凯格官网",normalizedContent:"关于凯格丨kyger\n\n广东凯格科技有限公司旗下产品凯格行为验证码，开创行为验证新时代，行为 ai 技术结合先进的风控引擎，基于生物行为特征，利用深度学习构建安全防御体系，持续进化提升人机区分能力，保障业务稳定的同时提升用户体验。有效区分真实用户和机器自动化脚本攻击，避免机器请求造成业务损失。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://www.kgcaptcha.com/demo/\n * 官方 demo2：https://kgoa.net/\n\n访问 凯格官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"V5 验证",frontmatter:{title:"V5 验证",date:"2023-10-20T17:16:56.000Z",permalink:"/captcha/verify5/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/13.V5%20%E9%AA%8C%E8%AF%81.html",relativePath:"02.验证码/02.国内验证码/13.V5 验证.md",key:"v-5f6ade6d",path:"/captcha/verify5/",headersStr:null,content:"关于 V5 验证\n\n深圳市智睦信息技术有限公司旗下产品 V5 验证是新一代的客户端识别及验证控件，通过多项智能检测及分析黑科技，识别恶意刷单脚本和机器人(Robot)，帮助企业应用和互联网平台构筑数据安全防线。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.verify5.com/demo\n\n访问 V5 验证官网\n",normalizedContent:"关于 v5 验证\n\n深圳市智睦信息技术有限公司旗下产品 v5 验证是新一代的客户端识别及验证控件，通过多项智能检测及分析黑科技，识别恶意刷单脚本和机器人(robot)，帮助企业应用和互联网平台构筑数据安全防线。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.verify5.com/demo\n\n访问 v5 验证官网\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"友验 FastYotest",frontmatter:{title:"友验 FastYotest",date:"2023-10-21T20:00:34.000Z",permalink:"/captcha/fastyotest/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/02.%E5%9B%BD%E5%86%85%E9%AA%8C%E8%AF%81%E7%A0%81/15.%E5%8F%8B%E9%AA%8C%20FastYotest.html",relativePath:"02.验证码/02.国内验证码/15.友验 FastYotest.md",key:"v-30db7074",path:"/captcha/fastyotest/",headersStr:null,content:"关于友验丨FastYotest\n\n重庆艇镫科技有限公司旗下产品友验智能验证码，基于虚拟机保护、设备特征识别、AI 行为判断等多项功能打造的全面可靠的验证体系，强力护航您的业务安全。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.fastyotest.com/demo\n\n访问 友验官网\n",normalizedContent:"关于友验丨fastyotest\n\n重庆艇镫科技有限公司旗下产品友验智能验证码，基于虚拟机保护、设备特征识别、ai 行为判断等多项功能打造的全面可靠的验证体系，强力护航您的业务安全。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.fastyotest.com/demo\n\n访问 友验官网\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Turnstile Managed Challenge",frontmatter:{title:"Turnstile Managed Challenge",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/turnstile-managed",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/01.Cloudflare%20Turnstile/01.Turnstile%20Managed%20Challenge.html",relativePath:"02.验证码/03.国外验证码/01.Cloudflare Turnstile/01.Turnstile Managed Challenge.md",key:"v-6196f284",path:"/captcha/turnstile-managed/",headersStr:null,content:"关于 Cloudflare Turnstile\n\nCloudflare Inc.旗下产品 Cloudflare Turnstile 是一款替代 CAPTCHA 的免费工具，Turnstile 仅需一个简单的免费代码片段，即可向网站访问者提供零挫败感、无 CAPTCHA 的 Web 体验。此外，Turnstile 可以阻止滥用并确认访问者的真实性，但不会有任何 CAPTCHA 给用户造成的数据隐私担忧或糟糕体验。\n\n\nTurnstile 有三种模式：\n\n * Managed Challenge：托管模式，自动判断是否需要用户交互，即自动判断是否需要点一下；\n * Non-Interactive Challenge：非交互式模式，永远不会要求用户交互；\n * Invisible Challenge：无感模式，不会显示任何信息。\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * vercel.app：https://react-turnstile.vercel.app/basic/\n * pages.dev：https://svelte-turnstile.pages.dev/\n * nowsecure.nl：https://nowsecure.nl/\n * cfschl.peet.ws：https://cfschl.peet.ws/\n * nopecha.com：https://nopecha.com/demo/cloudflare\n * gleam.io：https://gleam.io/0Kbee/rolex-oyster-perpetual\n * peet.ws：https://peet.ws/turnstile-test/managed.html\n * peet.ws：https://peet.ws/turnstile-test/non-interactive.html\n * emload.com：https://www.emload.com/v2\n * peet.ws：https://peet.ws/turnstile-test/invisible.html\n\n访问 Cloudflare 官网",normalizedContent:"关于 cloudflare turnstile\n\ncloudflare inc.旗下产品 cloudflare turnstile 是一款替代 captcha 的免费工具，turnstile 仅需一个简单的免费代码片段，即可向网站访问者提供零挫败感、无 captcha 的 web 体验。此外，turnstile 可以阻止滥用并确认访问者的真实性，但不会有任何 captcha 给用户造成的数据隐私担忧或糟糕体验。\n\n\nturnstile 有三种模式：\n\n * managed challenge：托管模式，自动判断是否需要用户交互，即自动判断是否需要点一下；\n * non-interactive challenge：非交互式模式，永远不会要求用户交互；\n * invisible challenge：无感模式，不会显示任何信息。\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * vercel.app：https://react-turnstile.vercel.app/basic/\n * pages.dev：https://svelte-turnstile.pages.dev/\n * nowsecure.nl：https://nowsecure.nl/\n * cfschl.peet.ws：https://cfschl.peet.ws/\n * nopecha.com：https://nopecha.com/demo/cloudflare\n * gleam.io：https://gleam.io/0kbee/rolex-oyster-perpetual\n * peet.ws：https://peet.ws/turnstile-test/managed.html\n * peet.ws：https://peet.ws/turnstile-test/non-interactive.html\n * emload.com：https://www.emload.com/v2\n * peet.ws：https://peet.ws/turnstile-test/invisible.html\n\n访问 cloudflare 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Turnstile Non-Interactive Challenge",frontmatter:{title:"Turnstile Non-Interactive Challenge",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/turnstile-non-interactive",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/01.Cloudflare%20Turnstile/02.Turnstile%20Non-Interactive%20Challenge.html",relativePath:"02.验证码/03.国外验证码/01.Cloudflare Turnstile/02.Turnstile Non-Interactive Challenge.md",key:"v-255664fc",path:"/captcha/turnstile-non-interactive/",headersStr:null,content:"关于 Cloudflare Turnstile\n\nCloudflare Inc.旗下产品 Cloudflare Turnstile 是一款替代 CAPTCHA 的免费工具，Turnstile 仅需一个简单的免费代码片段，即可向网站访问者提供零挫败感、无 CAPTCHA 的 Web 体验。此外，Turnstile 可以阻止滥用并确认访问者的真实性，但不会有任何 CAPTCHA 给用户造成的数据隐私担忧或糟糕体验。\n\n\nTurnstile 有三种模式：\n\n * Managed Challenge：托管模式，自动判断是否需要用户交互，即自动判断是否需要点一下；\n * Non-Interactive Challenge：非交互式模式，永远不会要求用户交互；\n * Invisible Challenge：无感模式，不会显示任何信息。\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * vercel.app：https://react-turnstile.vercel.app/basic/\n * pages.dev：https://svelte-turnstile.pages.dev/\n * nowsecure.nl：https://nowsecure.nl/\n * cfschl.peet.ws：https://cfschl.peet.ws/\n * nopecha.com：https://nopecha.com/demo/cloudflare\n * gleam.io：https://gleam.io/0Kbee/rolex-oyster-perpetual\n * peet.ws：https://peet.ws/turnstile-test/managed.html\n * peet.ws：https://peet.ws/turnstile-test/non-interactive.html\n * emload.com：https://www.emload.com/v2\n * peet.ws：https://peet.ws/turnstile-test/invisible.html\n\n访问 Cloudflare 官网",normalizedContent:"关于 cloudflare turnstile\n\ncloudflare inc.旗下产品 cloudflare turnstile 是一款替代 captcha 的免费工具，turnstile 仅需一个简单的免费代码片段，即可向网站访问者提供零挫败感、无 captcha 的 web 体验。此外，turnstile 可以阻止滥用并确认访问者的真实性，但不会有任何 captcha 给用户造成的数据隐私担忧或糟糕体验。\n\n\nturnstile 有三种模式：\n\n * managed challenge：托管模式，自动判断是否需要用户交互，即自动判断是否需要点一下；\n * non-interactive challenge：非交互式模式，永远不会要求用户交互；\n * invisible challenge：无感模式，不会显示任何信息。\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * vercel.app：https://react-turnstile.vercel.app/basic/\n * pages.dev：https://svelte-turnstile.pages.dev/\n * nowsecure.nl：https://nowsecure.nl/\n * cfschl.peet.ws：https://cfschl.peet.ws/\n * nopecha.com：https://nopecha.com/demo/cloudflare\n * gleam.io：https://gleam.io/0kbee/rolex-oyster-perpetual\n * peet.ws：https://peet.ws/turnstile-test/managed.html\n * peet.ws：https://peet.ws/turnstile-test/non-interactive.html\n * emload.com：https://www.emload.com/v2\n * peet.ws：https://peet.ws/turnstile-test/invisible.html\n\n访问 cloudflare 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Turnstile Invisible Challenge",frontmatter:{title:"Turnstile Invisible Challenge",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/turnstile-invisible",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/01.Cloudflare%20Turnstile/03.Turnstile%20Invisible%20Challenge.html",relativePath:"02.验证码/03.国外验证码/01.Cloudflare Turnstile/03.Turnstile Invisible Challenge.md",key:"v-41db7438",path:"/captcha/turnstile-invisible/",headersStr:null,content:"关于 Cloudflare Turnstile\n\nCloudflare Inc.旗下产品 Cloudflare Turnstile 是一款替代 CAPTCHA 的免费工具，Turnstile 仅需一个简单的免费代码片段，即可向网站访问者提供零挫败感、无 CAPTCHA 的 Web 体验。此外，Turnstile 可以阻止滥用并确认访问者的真实性，但不会有任何 CAPTCHA 给用户造成的数据隐私担忧或糟糕体验。\n\n\nTurnstile 有三种模式：\n\n * Managed Challenge：托管模式，自动判断是否需要用户交互，即自动判断是否需要点一下；\n * Non-Interactive Challenge：非交互式模式，永远不会要求用户交互；\n * Invisible Challenge：无感模式，不会显示任何信息。\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * vercel.app：https://react-turnstile.vercel.app/basic/\n * pages.dev：https://svelte-turnstile.pages.dev/\n * nowsecure.nl：https://nowsecure.nl/\n * cfschl.peet.ws：https://cfschl.peet.ws/\n * nopecha.com：https://nopecha.com/demo/cloudflare\n * gleam.io：https://gleam.io/0Kbee/rolex-oyster-perpetual\n * peet.ws：https://peet.ws/turnstile-test/managed.html\n * peet.ws：https://peet.ws/turnstile-test/non-interactive.html\n * emload.com：https://www.emload.com/v2\n * peet.ws：https://peet.ws/turnstile-test/invisible.html\n\n访问 Cloudflare 官网",normalizedContent:"关于 cloudflare turnstile\n\ncloudflare inc.旗下产品 cloudflare turnstile 是一款替代 captcha 的免费工具，turnstile 仅需一个简单的免费代码片段，即可向网站访问者提供零挫败感、无 captcha 的 web 体验。此外，turnstile 可以阻止滥用并确认访问者的真实性，但不会有任何 captcha 给用户造成的数据隐私担忧或糟糕体验。\n\n\nturnstile 有三种模式：\n\n * managed challenge：托管模式，自动判断是否需要用户交互，即自动判断是否需要点一下；\n * non-interactive challenge：非交互式模式，永远不会要求用户交互；\n * invisible challenge：无感模式，不会显示任何信息。\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * vercel.app：https://react-turnstile.vercel.app/basic/\n * pages.dev：https://svelte-turnstile.pages.dev/\n * nowsecure.nl：https://nowsecure.nl/\n * cfschl.peet.ws：https://cfschl.peet.ws/\n * nopecha.com：https://nopecha.com/demo/cloudflare\n * gleam.io：https://gleam.io/0kbee/rolex-oyster-perpetual\n * peet.ws：https://peet.ws/turnstile-test/managed.html\n * peet.ws：https://peet.ws/turnstile-test/non-interactive.html\n * emload.com：https://www.emload.com/v2\n * peet.ws：https://peet.ws/turnstile-test/invisible.html\n\n访问 cloudflare 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"reCAPTCHA V2 Checkbox",frontmatter:{title:"reCAPTCHA V2 Checkbox",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/recaptcha-v2-checkbox",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/02.Google%20reCAPTCHA/01.reCAPTCHA%20V2%20Checkbox.html",relativePath:"02.验证码/03.国外验证码/02.Google reCAPTCHA/01.reCAPTCHA V2 Checkbox.md",key:"v-ac84e75c",path:"/captcha/recaptcha-v2-checkbox/",headersStr:null,content:"关于 Google reCAPTCHA\n\nGoogle Inc.旗下产品 reCAPTCHA 使用先进的风险分析引擎和自适应挑战来防止恶意软件在您的网站上进行滥用活动。同时，合法用户将能够登录、购买、查看页面或创建帐户，而虚假用户将被阻止。\n\n\nreCAPTCHA 有三种版本、多种模式：\n\n * reCAPTCHA v1：V1 版本，早期为英文数字验证码，自 2018 年 3 月起已弃用；\n * reCAPTCHA V2 Checkbox：V2 版本，需要用户点击后，系统自动判断是否通过或者需要图片验证；\n * reCAPTCHA V2 Invisible：V2 版本，无感验证，不会显示任何信息；\n * reCAPTCHA V2 Enterprise：V2 企业版；\n * reCAPTCHA v3：V3 版本，无感模式，不会显示任何信息；\n * reCAPTCHA V3 Enterprise：V3 企业版；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.google.com/recaptcha/api2/demo\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-checkbox.php\n * democaptcha.com：https://democaptcha.com/demo-form-eng/recaptcha-2.html\n * react.captcha：https://sarneeh.github.io/reaptcha/\n * 官方 Demo：https://www.google.com/recaptcha/api2/demo?invisible=true\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-invisible\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-invisible.php\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-enterprise\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\n * antcpt.com：https://antcpt.com/score_detector/\n * xushanxiang.com：https://xushanxiang.com/demo/recaptcha/a.html\n * 42web.io：http://recaptcha-example.42web.io/\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3-enterprise\n\n访问 reCAPTCHA 官网",normalizedContent:"关于 google recaptcha\n\ngoogle inc.旗下产品 recaptcha 使用先进的风险分析引擎和自适应挑战来防止恶意软件在您的网站上进行滥用活动。同时，合法用户将能够登录、购买、查看页面或创建帐户，而虚假用户将被阻止。\n\n\nrecaptcha 有三种版本、多种模式：\n\n * recaptcha v1：v1 版本，早期为英文数字验证码，自 2018 年 3 月起已弃用；\n * recaptcha v2 checkbox：v2 版本，需要用户点击后，系统自动判断是否通过或者需要图片验证；\n * recaptcha v2 invisible：v2 版本，无感验证，不会显示任何信息；\n * recaptcha v2 enterprise：v2 企业版；\n * recaptcha v3：v3 版本，无感模式，不会显示任何信息；\n * recaptcha v3 enterprise：v3 企业版；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.google.com/recaptcha/api2/demo\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-checkbox.php\n * democaptcha.com：https://democaptcha.com/demo-form-eng/recaptcha-2.html\n * react.captcha：https://sarneeh.github.io/reaptcha/\n * 官方 demo：https://www.google.com/recaptcha/api2/demo?invisible=true\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-invisible\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-invisible.php\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-enterprise\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\n * antcpt.com：https://antcpt.com/score_detector/\n * xushanxiang.com：https://xushanxiang.com/demo/recaptcha/a.html\n * 42web.io：http://recaptcha-example.42web.io/\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3-enterprise\n\n访问 recaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"reCAPTCHA V2 Invisible",frontmatter:{title:"reCAPTCHA V2 Invisible",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/recaptcha-v2-invisible",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/02.Google%20reCAPTCHA/02.reCAPTCHA%20V2%20Invisible.html",relativePath:"02.验证码/03.国外验证码/02.Google reCAPTCHA/02.reCAPTCHA V2 Invisible.md",key:"v-3e53f494",path:"/captcha/recaptcha-v2-invisible/",headersStr:null,content:"关于 Google reCAPTCHA\n\nGoogle Inc.旗下产品 reCAPTCHA 使用先进的风险分析引擎和自适应挑战来防止恶意软件在您的网站上进行滥用活动。同时，合法用户将能够登录、购买、查看页面或创建帐户，而虚假用户将被阻止。\n\n\nreCAPTCHA 有三种版本、多种模式：\n\n * reCAPTCHA v1：V1 版本，早期为英文数字验证码，自 2018 年 3 月起已弃用；\n * reCAPTCHA V2 Checkbox：V2 版本，需要用户点击后，系统自动判断是否通过或者需要图片验证；\n * reCAPTCHA V2 Invisible：V2 版本，无感验证，不会显示任何信息；\n * reCAPTCHA V2 Enterprise：V2 企业版；\n * reCAPTCHA v3：V3 版本，无感模式，不会显示任何信息；\n * reCAPTCHA V3 Enterprise：V3 企业版；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.google.com/recaptcha/api2/demo\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-checkbox.php\n * democaptcha.com：https://democaptcha.com/demo-form-eng/recaptcha-2.html\n * react.captcha：https://sarneeh.github.io/reaptcha/\n * 官方 Demo：https://www.google.com/recaptcha/api2/demo?invisible=true\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-invisible\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-invisible.php\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-enterprise\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\n * antcpt.com：https://antcpt.com/score_detector/\n * xushanxiang.com：https://xushanxiang.com/demo/recaptcha/a.html\n * 42web.io：http://recaptcha-example.42web.io/\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3-enterprise\n\n访问 reCAPTCHA 官网",normalizedContent:"关于 google recaptcha\n\ngoogle inc.旗下产品 recaptcha 使用先进的风险分析引擎和自适应挑战来防止恶意软件在您的网站上进行滥用活动。同时，合法用户将能够登录、购买、查看页面或创建帐户，而虚假用户将被阻止。\n\n\nrecaptcha 有三种版本、多种模式：\n\n * recaptcha v1：v1 版本，早期为英文数字验证码，自 2018 年 3 月起已弃用；\n * recaptcha v2 checkbox：v2 版本，需要用户点击后，系统自动判断是否通过或者需要图片验证；\n * recaptcha v2 invisible：v2 版本，无感验证，不会显示任何信息；\n * recaptcha v2 enterprise：v2 企业版；\n * recaptcha v3：v3 版本，无感模式，不会显示任何信息；\n * recaptcha v3 enterprise：v3 企业版；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.google.com/recaptcha/api2/demo\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-checkbox.php\n * democaptcha.com：https://democaptcha.com/demo-form-eng/recaptcha-2.html\n * react.captcha：https://sarneeh.github.io/reaptcha/\n * 官方 demo：https://www.google.com/recaptcha/api2/demo?invisible=true\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-invisible\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-invisible.php\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-enterprise\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\n * antcpt.com：https://antcpt.com/score_detector/\n * xushanxiang.com：https://xushanxiang.com/demo/recaptcha/a.html\n * 42web.io：http://recaptcha-example.42web.io/\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3-enterprise\n\n访问 recaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"reCAPTCHA V2 Enterprise",frontmatter:{title:"reCAPTCHA V2 Enterprise",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/recaptcha-v2-enterprise",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/02.Google%20reCAPTCHA/03.reCAPTCHA%20V2%20Enterprise.html",relativePath:"02.验证码/03.国外验证码/02.Google reCAPTCHA/03.reCAPTCHA V2 Enterprise.md",key:"v-168987d2",path:"/captcha/recaptcha-v2-enterprise/",headersStr:null,content:"关于 Google reCAPTCHA\n\nGoogle Inc.旗下产品 reCAPTCHA 使用先进的风险分析引擎和自适应挑战来防止恶意软件在您的网站上进行滥用活动。同时，合法用户将能够登录、购买、查看页面或创建帐户，而虚假用户将被阻止。\n\n\nreCAPTCHA 有三种版本、多种模式：\n\n * reCAPTCHA v1：V1 版本，早期为英文数字验证码，自 2018 年 3 月起已弃用；\n * reCAPTCHA V2 Checkbox：V2 版本，需要用户点击后，系统自动判断是否通过或者需要图片验证；\n * reCAPTCHA V2 Invisible：V2 版本，无感验证，不会显示任何信息；\n * reCAPTCHA V2 Enterprise：V2 企业版；\n * reCAPTCHA v3：V3 版本，无感模式，不会显示任何信息；\n * reCAPTCHA V3 Enterprise：V3 企业版；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.google.com/recaptcha/api2/demo\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-checkbox.php\n * democaptcha.com：https://democaptcha.com/demo-form-eng/recaptcha-2.html\n * react.captcha：https://sarneeh.github.io/reaptcha/\n * 官方 Demo：https://www.google.com/recaptcha/api2/demo?invisible=true\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-invisible\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-invisible.php\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-enterprise\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\n * antcpt.com：https://antcpt.com/score_detector/\n * xushanxiang.com：https://xushanxiang.com/demo/recaptcha/a.html\n * 42web.io：http://recaptcha-example.42web.io/\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3-enterprise\n\n访问 reCAPTCHA 官网",normalizedContent:"关于 google recaptcha\n\ngoogle inc.旗下产品 recaptcha 使用先进的风险分析引擎和自适应挑战来防止恶意软件在您的网站上进行滥用活动。同时，合法用户将能够登录、购买、查看页面或创建帐户，而虚假用户将被阻止。\n\n\nrecaptcha 有三种版本、多种模式：\n\n * recaptcha v1：v1 版本，早期为英文数字验证码，自 2018 年 3 月起已弃用；\n * recaptcha v2 checkbox：v2 版本，需要用户点击后，系统自动判断是否通过或者需要图片验证；\n * recaptcha v2 invisible：v2 版本，无感验证，不会显示任何信息；\n * recaptcha v2 enterprise：v2 企业版；\n * recaptcha v3：v3 版本，无感模式，不会显示任何信息；\n * recaptcha v3 enterprise：v3 企业版；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.google.com/recaptcha/api2/demo\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-checkbox.php\n * democaptcha.com：https://democaptcha.com/demo-form-eng/recaptcha-2.html\n * react.captcha：https://sarneeh.github.io/reaptcha/\n * 官方 demo：https://www.google.com/recaptcha/api2/demo?invisible=true\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-invisible\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-invisible.php\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-enterprise\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\n * antcpt.com：https://antcpt.com/score_detector/\n * xushanxiang.com：https://xushanxiang.com/demo/recaptcha/a.html\n * 42web.io：http://recaptcha-example.42web.io/\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3-enterprise\n\n访问 recaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"reCAPTCHA v3",frontmatter:{title:"reCAPTCHA v3",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/recaptcha-v3",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/02.Google%20reCAPTCHA/04.reCAPTCHA%20v3.html",relativePath:"02.验证码/03.国外验证码/02.Google reCAPTCHA/04.reCAPTCHA v3.md",key:"v-32e76611",path:"/captcha/recaptcha-v3/",headersStr:null,content:"关于 Google reCAPTCHA\n\nGoogle Inc.旗下产品 reCAPTCHA 使用先进的风险分析引擎和自适应挑战来防止恶意软件在您的网站上进行滥用活动。同时，合法用户将能够登录、购买、查看页面或创建帐户，而虚假用户将被阻止。\n\n\nreCAPTCHA 有三种版本、多种模式：\n\n * reCAPTCHA v1：V1 版本，早期为英文数字验证码，自 2018 年 3 月起已弃用；\n * reCAPTCHA V2 Checkbox：V2 版本，需要用户点击后，系统自动判断是否通过或者需要图片验证；\n * reCAPTCHA V2 Invisible：V2 版本，无感验证，不会显示任何信息；\n * reCAPTCHA V2 Enterprise：V2 企业版；\n * reCAPTCHA v3：V3 版本，无感模式，不会显示任何信息；\n * reCAPTCHA V3 Enterprise：V3 企业版；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.google.com/recaptcha/api2/demo\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-checkbox.php\n * democaptcha.com：https://democaptcha.com/demo-form-eng/recaptcha-2.html\n * react.captcha：https://sarneeh.github.io/reaptcha/\n * 官方 Demo：https://www.google.com/recaptcha/api2/demo?invisible=true\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-invisible\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-invisible.php\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-enterprise\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\n * antcpt.com：https://antcpt.com/score_detector/\n * xushanxiang.com：https://xushanxiang.com/demo/recaptcha/a.html\n * 42web.io：http://recaptcha-example.42web.io/\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3-enterprise\n\n访问 reCAPTCHA 官网\n\n",normalizedContent:"关于 google recaptcha\n\ngoogle inc.旗下产品 recaptcha 使用先进的风险分析引擎和自适应挑战来防止恶意软件在您的网站上进行滥用活动。同时，合法用户将能够登录、购买、查看页面或创建帐户，而虚假用户将被阻止。\n\n\nrecaptcha 有三种版本、多种模式：\n\n * recaptcha v1：v1 版本，早期为英文数字验证码，自 2018 年 3 月起已弃用；\n * recaptcha v2 checkbox：v2 版本，需要用户点击后，系统自动判断是否通过或者需要图片验证；\n * recaptcha v2 invisible：v2 版本，无感验证，不会显示任何信息；\n * recaptcha v2 enterprise：v2 企业版；\n * recaptcha v3：v3 版本，无感模式，不会显示任何信息；\n * recaptcha v3 enterprise：v3 企业版；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.google.com/recaptcha/api2/demo\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-checkbox.php\n * democaptcha.com：https://democaptcha.com/demo-form-eng/recaptcha-2.html\n * react.captcha：https://sarneeh.github.io/reaptcha/\n * 官方 demo：https://www.google.com/recaptcha/api2/demo?invisible=true\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-invisible\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-invisible.php\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-enterprise\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\n * antcpt.com：https://antcpt.com/score_detector/\n * xushanxiang.com：https://xushanxiang.com/demo/recaptcha/a.html\n * 42web.io：http://recaptcha-example.42web.io/\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3-enterprise\n\n访问 recaptcha 官网\n\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"hCaptcha Medium",frontmatter:{title:"hCaptcha Medium",date:"2023-10-20T11:59:20.000Z",permalink:"/captcha/hcaptcha-medium/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/03.hCaptcha/02.hCaptcha%20Medium.html",relativePath:"02.验证码/03.国外验证码/03.hCaptcha/02.hCaptcha Medium.md",key:"v-1d543c28",path:"/captcha/hcaptcha-medium/",headersStr:null,content:"关于 hCaptcha\n\nIntuition Machines, Inc.旗下产品 hCaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhCaptcha 有三种计划、五种模式，即 Publisher、Pro、Enterprise 三种计划和 Auto、Easy、Medium、Difficult、Invisible 五种模式：\n\n * hCaptcha Publisher：免费版；\n * hCaptcha Pro：专业版；\n * hCaptcha Enterprise：企业版；\n   \n   \n * hCaptcha Auto：系统自动判断难度级别；\n * hCaptcha Easy：简易难度 ；\n * hCaptcha Medium：中等难度；\n * hCaptcha Difficult：困难难度；\n * hCaptcha Invisible：无感验证；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 Demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hCaptcha 官网",normalizedContent:"关于 hcaptcha\n\nintuition machines, inc.旗下产品 hcaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhcaptcha 有三种计划、五种模式，即 publisher、pro、enterprise 三种计划和 auto、easy、medium、difficult、invisible 五种模式：\n\n * hcaptcha publisher：免费版；\n * hcaptcha pro：专业版；\n * hcaptcha enterprise：企业版；\n   \n   \n * hcaptcha auto：系统自动判断难度级别；\n * hcaptcha easy：简易难度 ；\n * hcaptcha medium：中等难度；\n * hcaptcha difficult：困难难度；\n * hcaptcha invisible：无感验证；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hcaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"reCAPTCHA V3 Enterprise",frontmatter:{title:"reCAPTCHA V3 Enterprise",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/recaptcha-v3-enterprise",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/02.Google%20reCAPTCHA/05.reCAPTCHA%20V3%20Enterprise.html",relativePath:"02.验证码/03.国外验证码/02.Google reCAPTCHA/05.reCAPTCHA V3 Enterprise.md",key:"v-52e60810",path:"/captcha/recaptcha-v3-enterprise/",headersStr:null,content:"关于 Google reCAPTCHA\n\nGoogle Inc.旗下产品 reCAPTCHA 使用先进的风险分析引擎和自适应挑战来防止恶意软件在您的网站上进行滥用活动。同时，合法用户将能够登录、购买、查看页面或创建帐户，而虚假用户将被阻止。\n\n\nreCAPTCHA 有三种版本、多种模式：\n\n * reCAPTCHA v1：V1 版本，早期为英文数字验证码，自 2018 年 3 月起已弃用；\n * reCAPTCHA V2 Checkbox：V2 版本，需要用户点击后，系统自动判断是否通过或者需要图片验证；\n * reCAPTCHA V2 Invisible：V2 版本，无感验证，不会显示任何信息；\n * reCAPTCHA V2 Enterprise：V2 企业版；\n * reCAPTCHA v3：V3 版本，无感模式，不会显示任何信息；\n * reCAPTCHA V3 Enterprise：V3 企业版；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.google.com/recaptcha/api2/demo\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-checkbox.php\n * democaptcha.com：https://democaptcha.com/demo-form-eng/recaptcha-2.html\n * react.captcha：https://sarneeh.github.io/reaptcha/\n * 官方 Demo：https://www.google.com/recaptcha/api2/demo?invisible=true\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-invisible\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-invisible.php\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-enterprise\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\n * antcpt.com：https://antcpt.com/score_detector/\n * xushanxiang.com：https://xushanxiang.com/demo/recaptcha/a.html\n * 42web.io：http://recaptcha-example.42web.io/\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3-enterprise\n\n访问 reCAPTCHA 官网",normalizedContent:"关于 google recaptcha\n\ngoogle inc.旗下产品 recaptcha 使用先进的风险分析引擎和自适应挑战来防止恶意软件在您的网站上进行滥用活动。同时，合法用户将能够登录、购买、查看页面或创建帐户，而虚假用户将被阻止。\n\n\nrecaptcha 有三种版本、多种模式：\n\n * recaptcha v1：v1 版本，早期为英文数字验证码，自 2018 年 3 月起已弃用；\n * recaptcha v2 checkbox：v2 版本，需要用户点击后，系统自动判断是否通过或者需要图片验证；\n * recaptcha v2 invisible：v2 版本，无感验证，不会显示任何信息；\n * recaptcha v2 enterprise：v2 企业版；\n * recaptcha v3：v3 版本，无感模式，不会显示任何信息；\n * recaptcha v3 enterprise：v3 企业版；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.google.com/recaptcha/api2/demo\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-checkbox.php\n * democaptcha.com：https://democaptcha.com/demo-form-eng/recaptcha-2.html\n * react.captcha：https://sarneeh.github.io/reaptcha/\n * 官方 demo：https://www.google.com/recaptcha/api2/demo?invisible=true\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-invisible\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v2-invisible.php\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v2-enterprise\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3\n * appspot.com：https://recaptcha-demo.appspot.com/recaptcha-v3-request-scores.php\n * antcpt.com：https://antcpt.com/score_detector/\n * xushanxiang.com：https://xushanxiang.com/demo/recaptcha/a.html\n * 42web.io：http://recaptcha-example.42web.io/\n * 2captcha.com：https://2captcha.com/demo/recaptcha-v3-enterprise\n\n访问 recaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"hCaptcha Difficult",frontmatter:{title:"hCaptcha Difficult",date:"2023-10-20T14:26:44.000Z",permalink:"/captcha/hcaptcha-difficult/"},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/03.hCaptcha/03.hCaptcha%20Difficult.html",relativePath:"02.验证码/03.国外验证码/03.hCaptcha/03.hCaptcha Difficult.md",key:"v-18262f98",path:"/captcha/hcaptcha-difficult/",headersStr:null,content:"关于 hCaptcha\n\nIntuition Machines, Inc.旗下产品 hCaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhCaptcha 有三种计划、五种模式，即 Publisher、Pro、Enterprise 三种计划和 Auto、Easy、Medium、Difficult、Invisible 五种模式：\n\n * hCaptcha Publisher：免费版；\n * hCaptcha Pro：专业版；\n * hCaptcha Enterprise：企业版；\n   \n   \n * hCaptcha Auto：系统自动判断难度级别；\n * hCaptcha Easy：简易难度 ；\n * hCaptcha Medium：中等难度；\n * hCaptcha Difficult：困难难度；\n * hCaptcha Invisible：无感验证；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 Demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hCaptcha 官网",normalizedContent:"关于 hcaptcha\n\nintuition machines, inc.旗下产品 hcaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhcaptcha 有三种计划、五种模式，即 publisher、pro、enterprise 三种计划和 auto、easy、medium、difficult、invisible 五种模式：\n\n * hcaptcha publisher：免费版；\n * hcaptcha pro：专业版；\n * hcaptcha enterprise：企业版；\n   \n   \n * hcaptcha auto：系统自动判断难度级别；\n * hcaptcha easy：简易难度 ；\n * hcaptcha medium：中等难度；\n * hcaptcha difficult：困难难度；\n * hcaptcha invisible：无感验证；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hcaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"hCaptcha Easy",frontmatter:{title:"hCaptcha Easy",date:"2023-10-20T11:59:20.000Z",permalink:"/captcha/hcaptcha-easy/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/03.hCaptcha/01.hCaptcha%20Easy.html",relativePath:"02.验证码/03.国外验证码/03.hCaptcha/01.hCaptcha Easy.md",key:"v-427388d0",path:"/captcha/hcaptcha-easy/",headersStr:null,content:"关于 hCaptcha\n\nIntuition Machines, Inc.旗下产品 hCaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhCaptcha 有三种计划、五种模式，即 Publisher、Pro、Enterprise 三种计划和 Auto、Easy、Medium、Difficult、Invisible 五种模式：\n\n * hCaptcha Publisher：免费版；\n * hCaptcha Pro：专业版；\n * hCaptcha Enterprise：企业版；\n   \n   \n * hCaptcha Auto：系统自动判断难度级别；\n * hCaptcha Easy：简易难度 ；\n * hCaptcha Medium：中等难度；\n * hCaptcha Difficult：困难难度；\n * hCaptcha Invisible：无感验证；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 Demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hCaptcha 官网",normalizedContent:"关于 hcaptcha\n\nintuition machines, inc.旗下产品 hcaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhcaptcha 有三种计划、五种模式，即 publisher、pro、enterprise 三种计划和 auto、easy、medium、difficult、invisible 五种模式：\n\n * hcaptcha publisher：免费版；\n * hcaptcha pro：专业版；\n * hcaptcha enterprise：企业版；\n   \n   \n * hcaptcha auto：系统自动判断难度级别；\n * hcaptcha easy：简易难度 ；\n * hcaptcha medium：中等难度；\n * hcaptcha difficult：困难难度；\n * hcaptcha invisible：无感验证；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hcaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"hCaptcha Invisible",frontmatter:{title:"hCaptcha Invisible",date:"2023-10-20T14:26:44.000Z",permalink:"/captcha/hcaptcha-invisible/"},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/03.hCaptcha/04.hCaptcha%20Invisible.html",relativePath:"02.验证码/03.国外验证码/03.hCaptcha/04.hCaptcha Invisible.md",key:"v-fe93e898",path:"/captcha/hcaptcha-invisible/",headersStr:null,content:"关于 hCaptcha\n\nIntuition Machines, Inc.旗下产品 hCaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhCaptcha 有三种计划、五种模式，即 Publisher、Pro、Enterprise 三种计划和 Auto、Easy、Medium、Difficult、Invisible 五种模式：\n\n * hCaptcha Publisher：免费版；\n * hCaptcha Pro：专业版；\n * hCaptcha Enterprise：企业版；\n   \n   \n * hCaptcha Auto：系统自动判断难度级别；\n * hCaptcha Easy：简易难度 ；\n * hCaptcha Medium：中等难度；\n * hCaptcha Difficult：困难难度；\n * hCaptcha Invisible：无感验证；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 Demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hCaptcha 官网",normalizedContent:"关于 hcaptcha\n\nintuition machines, inc.旗下产品 hcaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhcaptcha 有三种计划、五种模式，即 publisher、pro、enterprise 三种计划和 auto、easy、medium、difficult、invisible 五种模式：\n\n * hcaptcha publisher：免费版；\n * hcaptcha pro：专业版；\n * hcaptcha enterprise：企业版；\n   \n   \n * hcaptcha auto：系统自动判断难度级别；\n * hcaptcha easy：简易难度 ；\n * hcaptcha medium：中等难度；\n * hcaptcha difficult：困难难度；\n * hcaptcha invisible：无感验证；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hcaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"hCaptcha Pro",frontmatter:{title:"hCaptcha Pro",date:"2023-10-20T14:26:44.000Z",permalink:"/captcha/hcaptcha-pro/"},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/03.hCaptcha/05.hCaptcha%20Pro.html",relativePath:"02.验证码/03.国外验证码/03.hCaptcha/05.hCaptcha Pro.md",key:"v-d22bfcd8",path:"/captcha/hcaptcha-pro/",headersStr:null,content:"关于 hCaptcha\n\nIntuition Machines, Inc.旗下产品 hCaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhCaptcha 有三种计划、五种模式，即 Publisher、Pro、Enterprise 三种计划和 Auto、Easy、Medium、Difficult、Invisible 五种模式：\n\n * hCaptcha Publisher：免费版；\n * hCaptcha Pro：专业版；\n * hCaptcha Enterprise：企业版；\n   \n   \n * hCaptcha Auto：系统自动判断难度级别；\n * hCaptcha Easy：简易难度 ；\n * hCaptcha Medium：中等难度；\n * hCaptcha Difficult：困难难度；\n * hCaptcha Invisible：无感验证；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 Demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hCaptcha 官网\n\n注意\n\n由于 hcaptcha.com X-Frame-Options 限制，不允许 iframe 嵌入，且暂未找到其他 Demo，hCaptcha Pro 请访问原网址进行体验。",normalizedContent:"关于 hcaptcha\n\nintuition machines, inc.旗下产品 hcaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhcaptcha 有三种计划、五种模式，即 publisher、pro、enterprise 三种计划和 auto、easy、medium、difficult、invisible 五种模式：\n\n * hcaptcha publisher：免费版；\n * hcaptcha pro：专业版；\n * hcaptcha enterprise：企业版；\n   \n   \n * hcaptcha auto：系统自动判断难度级别；\n * hcaptcha easy：简易难度 ；\n * hcaptcha medium：中等难度；\n * hcaptcha difficult：困难难度；\n * hcaptcha invisible：无感验证；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hcaptcha 官网\n\n注意\n\n由于 hcaptcha.com x-frame-options 限制，不允许 iframe 嵌入，且暂未找到其他 demo，hcaptcha pro 请访问原网址进行体验。",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"hCaptcha Enterprise",frontmatter:{title:"hCaptcha Enterprise",date:"2023-10-20T14:26:44.000Z",permalink:"/captcha/hcaptcha-enterprise/"},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/03.hCaptcha/06.hCaptcha%20Enterprise.html",relativePath:"02.验证码/03.国外验证码/03.hCaptcha/06.hCaptcha Enterprise.md",key:"v-782a7e48",path:"/captcha/hcaptcha-enterprise/",headersStr:null,content:"关于 hCaptcha\n\nIntuition Machines, Inc.旗下产品 hCaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhCaptcha 有三种计划、五种模式，即 Publisher、Pro、Enterprise 三种计划和 Auto、Easy、Medium、Difficult、Invisible 五种模式：\n\n * hCaptcha Publisher：免费版；\n * hCaptcha Pro：专业版；\n * hCaptcha Enterprise：企业版；\n   \n   \n * hCaptcha Auto：系统自动判断难度级别；\n * hCaptcha Easy：简易难度 ；\n * hCaptcha Medium：中等难度；\n * hCaptcha Difficult：困难难度；\n * hCaptcha Invisible：无感验证；\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 Demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hCaptcha 官网",normalizedContent:"关于 hcaptcha\n\nintuition machines, inc.旗下产品 hcaptcha 带来了一种现代的、注重隐私的方法来阻止机器人，以最大限度地减少数据收集和保留，同时保持一流的安全性。\n\n\nhcaptcha 有三种计划、五种模式，即 publisher、pro、enterprise 三种计划和 auto、easy、medium、difficult、invisible 五种模式：\n\n * hcaptcha publisher：免费版；\n * hcaptcha pro：专业版；\n * hcaptcha enterprise：企业版；\n   \n   \n * hcaptcha auto：系统自动判断难度级别；\n * hcaptcha easy：简易难度 ；\n * hcaptcha medium：中等难度；\n * hcaptcha difficult：困难难度；\n * hcaptcha invisible：无感验证；\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://accounts.hcaptcha.com/demo\n * jawne.info.pl：http://hcaptcha.jawne.info.pl/\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/display\n * democaptcha.com：https://democaptcha.com/demo-form-eng/hcaptcha.html\n * 官方 demo2：https://www.hcaptcha.com/pro\n * nopecha.com：https://nopecha.com/demo/hcaptcha#enterprise\n * nopecha.com：https://nopecha.com/demo/hcaptcha#easy\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=easy\n * nopecha.com：https://nopecha.com/demo/hcaptcha#moderate\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=moderate\n * nopecha.com：https://nopecha.com/demo/recaptcha#hard\n * 2captcha.com：https://2captcha.com/demo/hcaptcha?difficulty=difficult\n * 2captcha.com：https://2captcha.com/demo/hcaptcha-invisible\n * leeay.com：https://captcha.leeay.com/captcha/hcaptcha/invisible\n\n访问 hcaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"PerimeterX | HUMAN Challenge",frontmatter:{title:"PerimeterX | HUMAN Challenge",date:"2023-10-21T22:43:03.000Z",permalink:"/captcha/perimeterx/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/06.PerimeterX%E4%B8%A8HUMAN%20Challenge.html",relativePath:"02.验证码/03.国外验证码/06.PerimeterX丨HUMAN Challenge.md",key:"v-68e5da7e",path:"/captcha/perimeterx/",headersStr:null,content:"关于 PerimeterX丨HUMAN Challenge\n\nPerimeterX成立于 2014 年，Human Security 成立于 2012 年，这两家公司已于 2022 年合并，现统一为 Human Security。PX 盾，也称为 HUMAN Challenge，它是 HUMAN Bot Defender 产品中的一部分，不同于其他验证码，HUMAN Challenge 不需要用户答题，只需要用户一直按住按钮，当用户按住按钮时，HUMAN 会在幕后捕获更多数据，使其能够更准确地做出是否为机器人的判定。这极大地减少了误报并提高了决策精度。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 沃尔玛官网：https://www.walmart.com/blocked\n\n访问 PerimeterX丨HUMAN Challenge 官方文档",normalizedContent:"关于 perimeterx丨human challenge\n\nperimeterx成立于 2014 年，human security 成立于 2012 年，这两家公司已于 2022 年合并，现统一为 human security。px 盾，也称为 human challenge，它是 human bot defender 产品中的一部分，不同于其他验证码，human challenge 不需要用户答题，只需要用户一直按住按钮，当用户按住按钮时，human 会在幕后捕获更多数据，使其能够更准确地做出是否为机器人的判定。这极大地减少了误报并提高了决策精度。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 沃尔玛官网：https://www.walmart.com/blocked\n\n访问 perimeterx丨human challenge 官方文档",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Arkose Labs FunCAPTCHA",frontmatter:{title:"Arkose Labs FunCAPTCHA",date:"2023-10-20T12:20:32.000Z",permalink:"/captcha/funcaptcha/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/04.Arkose%20Labs%20FunCAPTCHA.html",relativePath:"02.验证码/03.国外验证码/04.Arkose Labs FunCAPTCHA.md",key:"v-4746c731",path:"/captcha/funcaptcha/",headersStr:null,content:"关于 Arkose Labs FunCAPTCHA丨Arkose Labs MatchKey\n\nArkose Labs Inc.旗下产品 FunCAPTCHA（又称 MatchKey）拥有数十种挑战样式：选择螺旋星系、选择与手指方向相同的图片、选择虚线连接相同的两个图标、选择筛子相加等于提示数字的图片、选择坐在指定座位的人物图片等，算得上是最变态的验证码，正常人通过都需要花费数十秒。\n\n\n\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * FunCaptcha 的图片数量和难度，取决于当前环境指纹质量的高低，指纹质量越低，验证码的难度越高；\n * 部分网站直接访问验证码页面和从原始页面访问验证码，可能有差异，例如 public_key/ 接口缺少 data[blob] 参数，可能触发风控，或者导致最终的 token 不可用。\n\n说明                   验证码页面                                  原始页面\n官方 Demo              3EE79F8D-13A6-474B-9278-448EA19F79B3   点击访问\nTwitter PC 端注册       2CB16598-CB82-4CF7-B332-5990DB66F3AB   点击访问\n                                                            （点击创建账号）\nTwitter 移动端注册        867D55F2-24FD-4C56-AB6D-589EDAF5E7C5   点击访问\n                                                            （手机模式）\nTwitter 解锁账户         0152B4EB-D2DC-460A-89A1-629838B529C9   暂无页面\n                                                            （部分账号需要解锁账户）\nRockstarGames 注册     A5A70501-FCDE-4065-AF18-D9FAF06EF479   点击访问\nAmazon 验证页面          2F1CD804-FE45-F12B-9723-240962EBA6F8   点击访问\nLinkedin 账号注册        9E881D9A-F495-4A23-BE4B-16067FF8CC3B   点击访问\nElectronic Arts 注册   0F5FE186-B3CA-4EDB-A39B-9B9A3397D01D   点击访问\nMicrosoft 账号注册       B7D8911C-5CC8-A9A3-35B0-554ACEE604DA   点击访问\n                                                            （使用 outlook 邮箱注册）\nGithub OctoCaptcha   D72ECCFB-262E-4065-9196-856E70BE98ED   点击访问\nSnapchat 注册          EA4B65CB-594A-438E-B4B5-D0DBA28C9334   点击访问\n\n访问 Arkose Labs 官网",normalizedContent:"关于 arkose labs funcaptcha丨arkose labs matchkey\n\narkose labs inc.旗下产品 funcaptcha（又称 matchkey）拥有数十种挑战样式：选择螺旋星系、选择与手指方向相同的图片、选择虚线连接相同的两个图标、选择筛子相加等于提示数字的图片、选择坐在指定座位的人物图片等，算得上是最变态的验证码，正常人通过都需要花费数十秒。\n\n\n\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * funcaptcha 的图片数量和难度，取决于当前环境指纹质量的高低，指纹质量越低，验证码的难度越高；\n * 部分网站直接访问验证码页面和从原始页面访问验证码，可能有差异，例如 public_key/ 接口缺少 data[blob] 参数，可能触发风控，或者导致最终的 token 不可用。\n\n说明                   验证码页面                                  原始页面\n官方 demo              3ee79f8d-13a6-474b-9278-448ea19f79b3   点击访问\ntwitter pc 端注册       2cb16598-cb82-4cf7-b332-5990db66f3ab   点击访问\n                                                            （点击创建账号）\ntwitter 移动端注册        867d55f2-24fd-4c56-ab6d-589edaf5e7c5   点击访问\n                                                            （手机模式）\ntwitter 解锁账户         0152b4eb-d2dc-460a-89a1-629838b529c9   暂无页面\n                                                            （部分账号需要解锁账户）\nrockstargames 注册     a5a70501-fcde-4065-af18-d9faf06ef479   点击访问\namazon 验证页面          2f1cd804-fe45-f12b-9723-240962eba6f8   点击访问\nlinkedin 账号注册        9e881d9a-f495-4a23-be4b-16067ff8cc3b   点击访问\nelectronic arts 注册   0f5fe186-b3ca-4edb-a39b-9b9a3397d01d   点击访问\nmicrosoft 账号注册       b7d8911c-5cc8-a9a3-35b0-554acee604da   点击访问\n                                                            （使用 outlook 邮箱注册）\ngithub octocaptcha   d72eccfb-262e-4065-9196-856e70be98ed   点击访问\nsnapchat 注册          ea4b65cb-594a-438e-b4b5-d0dba28c9334   点击访问\n\n访问 arkose labs 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"DataDome CAPTCHA",frontmatter:{title:"DataDome CAPTCHA",date:"2023-10-21T22:43:03.000Z",permalink:"/captcha/datadome/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/05.DataDome%20CAPTCHA.html",relativePath:"02.验证码/03.国外验证码/05.DataDome CAPTCHA.md",key:"v-6312fbd8",path:"/captcha/datadome/",headersStr:null,content:"关于 DataDome CAPTCHA\n\nDataDome旗下产品 DataDome CAPTCHA 宣称可在移动设备、Web 和 API 的所有端点上 100% 检测到机器人，且不会对用户体验产生负面影响，是全球唯一符合隐私的验证码，在无障碍方面包括了 13 种不同语言的音频验证码，借助 DataDome，只有万分之一的人类请求会受到可见验证码的挑战，从而确保 99.99% 的验证码仅用于阻止机器人和欺诈活动。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * vercel.app：https://edge-functions-bot-protection-datadome.vercel.app/\n * 爱马仕官网：https://rendezvousparis.hermes.com/client/register\n * allopneus.com：https://www.allopneus.com/liste/pneu-auto\n\n访问 DataDome 官网",normalizedContent:"关于 datadome captcha\n\ndatadome旗下产品 datadome captcha 宣称可在移动设备、web 和 api 的所有端点上 100% 检测到机器人，且不会对用户体验产生负面影响，是全球唯一符合隐私的验证码，在无障碍方面包括了 13 种不同语言的音频验证码，借助 datadome，只有万分之一的人类请求会受到可见验证码的挑战，从而确保 99.99% 的验证码仅用于阻止机器人和欺诈活动。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * vercel.app：https://edge-functions-bot-protection-datadome.vercel.app/\n * 爱马仕官网：https://rendezvousparis.hermes.com/client/register\n * allopneus.com：https://www.allopneus.com/liste/pneu-auto\n\n访问 datadome 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"AWS (Amazon) WAF Captcha",frontmatter:{title:"AWS (Amazon) WAF Captcha",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/aws",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/07.AWS%20(Amazon)%20WAF%20Captcha.html",relativePath:"02.验证码/03.国外验证码/07.AWS (Amazon) WAF Captcha.md",key:"v-01e22594",path:"/captcha/aws/",headersStr:null,content:"关于 AWS (Amazon) WAF Captcha\n\nAmazon Web Services, Inc. 亚马逊云科技旗下产品 AWS WAF，是一种 Web 应用程序防火墙，其中集成了一种 Captcha puzzle，一般分为两种挑战：点击汽车路径的尽头和滑动图像拼接指定的形状。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * wslab.no：https://norway-meetup.aws.wslab.no/\n * amazonaws.com：https://efw47fpad9.execute-api.us-east-1.amazonaws.com/latest\n * porsche.com：https://nft.porsche.com/onboarding@6\n\n访问 AWS (Amazon) WAF Captcha 官方文档",normalizedContent:"关于 aws (amazon) waf captcha\n\namazon web services, inc. 亚马逊云科技旗下产品 aws waf，是一种 web 应用程序防火墙，其中集成了一种 captcha puzzle，一般分为两种挑战：点击汽车路径的尽头和滑动图像拼接指定的形状。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * wslab.no：https://norway-meetup.aws.wslab.no/\n * amazonaws.com：https://efw47fpad9.execute-api.us-east-1.amazonaws.com/latest\n * porsche.com：https://nft.porsche.com/onboarding@6\n\n访问 aws (amazon) waf captcha 官方文档",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Lemin CAPTCHA | Capy Puzzle",frontmatter:{title:"Lemin CAPTCHA | Capy Puzzle",date:"2023-10-21T23:03:19.000Z",permalink:"/captcha/lemin/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/09.Lemin%20CAPTCHA%E4%B8%A8Capy%20Puzzle.html",relativePath:"02.验证码/03.国外验证码/09.Lemin CAPTCHA丨Capy Puzzle.md",key:"v-6e72af60",path:"/captcha/lemin/",headersStr:null,content:"关于 Lemin CAPTCHA丨Capy Puzzle\n\nCapy Inc. 旗下产品 Lemin Captcha，又称 Capy Puzzle，提供简单而强大的保护，免受暴力登录攻击、凭据填充和其他自动威胁。本质类似滑动验证码，但不同的是，滑动验证码一般是通过水平左右移动来拼合滑块，但 Lemin Captcha 则是随意拖动缺口图片到正确位置。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方登录页1：https://www.capy.me/account/signin\n * 官方登录页2：https://dashboard.leminnow.com/auth/login\n\n访问 Lemin CAPTCHA丨Capy Puzzle 官网",normalizedContent:"关于 lemin captcha丨capy puzzle\n\ncapy inc. 旗下产品 lemin captcha，又称 capy puzzle，提供简单而强大的保护，免受暴力登录攻击、凭据填充和其他自动威胁。本质类似滑动验证码，但不同的是，滑动验证码一般是通过水平左右移动来拼合滑块，但 lemin captcha 则是随意拖动缺口图片到正确位置。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方登录页1：https://www.capy.me/account/signin\n * 官方登录页2：https://dashboard.leminnow.com/auth/login\n\n访问 lemin captcha丨capy puzzle 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"MTCaptcha",frontmatter:{title:"MTCaptcha",date:"2023-10-20T12:40:57.000Z",permalink:"/captcha/mtcaptcha",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/08.MTCaptcha.html",relativePath:"02.验证码/03.国外验证码/08.MTCaptcha.md",key:"v-1711ca03",path:"/captcha/mtcaptcha/",headersStr:null,content:"关于 MTCaptcha\n\nSun Spray Technologies LLC. 旗下产品 MTCaptcha 是一种符合 GDPR 和 WCAG 的智能 Captcha 服务，验证码主要是一些英文字母，属于英数验证码。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://www.mtcaptcha.com/#mtcaptcha-demo\n * 官方 Demo2：https://service.mtcaptcha.com/mtcv1/demo/index.html\n\n访问 MTCaptcha 官网",normalizedContent:"关于 mtcaptcha\n\nsun spray technologies llc. 旗下产品 mtcaptcha 是一种符合 gdpr 和 wcag 的智能 captcha 服务，验证码主要是一些英文字母，属于英数验证码。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://www.mtcaptcha.com/#mtcaptcha-demo\n * 官方 demo2：https://service.mtcaptcha.com/mtcv1/demo/index.html\n\n访问 mtcaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Yandex SmartCaptcha",frontmatter:{title:"Yandex SmartCaptcha",date:"2023-10-21T23:12:27.000Z",permalink:"/captcha/yandex/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/10.Yandex%20SmartCaptcha.html",relativePath:"02.验证码/03.国外验证码/10.Yandex SmartCaptcha.md",key:"v-be5fa950",path:"/captcha/yandex/",headersStr:null,content:"关于 Yandex SmartCaptcha\n\nYandex 旗下产品 Yandex SmartCaptcha 是用于验证查询以识别用户请求并阻止机器人的服务。最多只需要两步验证，首先，用户勾选“我不是机器人”复选框，如果被判断为可疑请求，系统会向用户显示验证码并要求其输入几个单词。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://captcha-api.yandex.ru/demo\n * 官方 Demo2：https://smartcaptcha.yandexcloud.net/demo\n\n访问 Yandex SmartCaptcha 官网",normalizedContent:"关于 yandex smartcaptcha\n\nyandex 旗下产品 yandex smartcaptcha 是用于验证查询以识别用户请求并阻止机器人的服务。最多只需要两步验证，首先，用户勾选“我不是机器人”复选框，如果被判断为可疑请求，系统会向用户显示验证码并要求其输入几个单词。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://captcha-api.yandex.ru/demo\n * 官方 demo2：https://smartcaptcha.yandexcloud.net/demo\n\n访问 yandex smartcaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"mCaptcha",frontmatter:{title:"mCaptcha",date:"2023-10-21T23:29:56.000Z",permalink:"/captcha/mcaptcha/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/11.mCaptcha.html",relativePath:"02.验证码/03.国外验证码/11.mCaptcha.md",key:"v-e16ad51e",path:"/captcha/mcaptcha/",headersStr:null,content:"关于 mCaptcha\n\nmCaptcha 注重隐私且完全自动化，是基于 PoW 工作量证明的验证码系统，因此属于无感验证码，不再有烦人的图像。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://showcase.mcaptcha.org/\n\n访问 mCaptcha 官网",normalizedContent:"关于 mcaptcha\n\nmcaptcha 注重隐私且完全自动化，是基于 pow 工作量证明的验证码系统，因此属于无感验证码，不再有烦人的图像。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://showcase.mcaptcha.org/\n\n访问 mcaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"KeyCAPTCHA",frontmatter:{title:"KeyCAPTCHA",date:"2023-10-21T23:34:34.000Z",permalink:"/captcha/keycaptcha/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/12.KeyCAPTCHA.html",relativePath:"02.验证码/03.国外验证码/12.KeyCAPTCHA.md",key:"v-e14188de",path:"/captcha/keycaptcha/",headersStr:null,content:"关于 KeyCAPTCHA\n\nKeyCAPTCHA 的验证形式比较独特，需要用户将数个图片对象移动到对应的分类里，或者移动多个缺口图片拼合成完整的图片。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.keycaptcha.com/\n * 官方重置密码页面：https://www.keycaptcha.com/reset/\n\n访问 KeyCAPTCHA 官网",normalizedContent:"关于 keycaptcha\n\nkeycaptcha 的验证形式比较独特，需要用户将数个图片对象移动到对应的分类里，或者移动多个缺口图片拼合成完整的图片。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.keycaptcha.com/\n * 官方重置密码页面：https://www.keycaptcha.com/reset/\n\n访问 keycaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"CyberSiARA",frontmatter:{title:"CyberSiARA",date:"2023-10-22T00:07:48.000Z",permalink:"/captcha/cybersiara/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/13.CyberSiARA.html",relativePath:"02.验证码/03.国外验证码/13.CyberSiARA.md",key:"v-98911a1e",path:"/captcha/cybersiara/",headersStr:null,content:"关于 CyberSiARA\n\nCyberSiARA 利用先进的机器学习来阻止机器人和网络欺诈，提供的 Captcha 服务只需要用户从头滑到尾即可通过验证。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://www.cybersiara.com/book-a-demo\n\n访问 CyberSiARA 官网\n\n",normalizedContent:"关于 cybersiara\n\ncybersiara 利用先进的机器学习来阻止机器人和网络欺诈，提供的 captcha 服务只需要用户从头滑到尾即可通过验证。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://www.cybersiara.com/book-a-demo\n\n访问 cybersiara 官网\n\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Friendly Captcha",frontmatter:{title:"Friendly Captcha",date:"2023-11-21T09:53:48.000Z",permalink:"/captcha/friendly-captcha/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/14.Friendly%20Captcha.html",relativePath:"02.验证码/03.国外验证码/14.Friendly Captcha.md",key:"v-14676614",path:"/captcha/friendly-captcha/",headersStr:null,content:"关于 Friendly Captcha\n\nFriendly Captcha 符合 GDPR 标准，是一种基于 PoW 工作量证明的验证码替代方案，尊重用户的隐私，此外 Friendly Captcha 还有个特点是一旦用户开始填写表单，Captcha 就会开始自动运行。通过一个 Captcha 通常需要几秒钟的时间，当用户准备提交时，Captcha 就可能已经验证通过了。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://friendlycaptcha.com/demo\n * 官方 Demo2：https://friendlycaptcha.com/#demo\n\n访问 Friendly Captcha 官网",normalizedContent:"关于 friendly captcha\n\nfriendly captcha 符合 gdpr 标准，是一种基于 pow 工作量证明的验证码替代方案，尊重用户的隐私，此外 friendly captcha 还有个特点是一旦用户开始填写表单，captcha 就会开始自动运行。通过一个 captcha 通常需要几秒钟的时间，当用户准备提交时，captcha 就可能已经验证通过了。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://friendlycaptcha.com/demo\n * 官方 demo2：https://friendlycaptcha.com/#demo\n\n访问 friendly captcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"ARCaptcha",frontmatter:{title:"ARCaptcha",date:"2023-11-21T10:24:48.000Z",permalink:"/captcha/arcaptcha/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/15.ARCaptcha.html",relativePath:"02.验证码/03.国外验证码/15.ARCaptcha.md",key:"v-1111a9df",path:"/captcha/arcaptcha/",headersStr:null,content:"关于 ARCaptcha\n\nARCaptcha 是一家位于伊朗的公司开发的验证码服务，支持波斯语，通过人工智能分析用户的行为来智能检测可疑请求，并在需要时根据请求的可疑程度显示适用的挑战。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo1：https://arcaptcha.co/en#try_section\n * 官方 Demo2：https://widget.arcaptcha.ir/3/demo\n\n访问 ARCaptcha 官网",normalizedContent:"关于 arcaptcha\n\narcaptcha 是一家位于伊朗的公司开发的验证码服务，支持波斯语，通过人工智能分析用户的行为来智能检测可疑请求，并在需要时根据请求的可疑程度显示适用的挑战。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo1：https://arcaptcha.co/en#try_section\n * 官方 demo2：https://widget.arcaptcha.ir/3/demo\n\n访问 arcaptcha 官网",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"CaptchaFox",frontmatter:{title:"CaptchaFox",date:"2023-11-21T10:24:48.000Z",permalink:"/captcha/captchafox/",article:!1},regularPath:"/02.%E9%AA%8C%E8%AF%81%E7%A0%81/03.%E5%9B%BD%E5%A4%96%E9%AA%8C%E8%AF%81%E7%A0%81/16.CaptchaFox.html",relativePath:"02.验证码/03.国外验证码/16.CaptchaFox.md",key:"v-1498a0d1",path:"/captcha/captchafox/",headersStr:null,content:"关于 CaptchaFox\n\nScoria Labs GmbH 旗下产品 CaptchaFox，是一种隐私友好的解决方案，可保护用户的应用程序免受机器人或垃圾邮件等自动滥用，符合 GDPR 标准。\n\n\nDemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 Demo：https://captchafox.com/#demo\n\n访问 CaptchaFox 官网\n\n注意\n\n由于 CaptchaFox X-Frame-Options 限制，不允许 iframe 嵌入，且暂未找到其他 Demo，CaptchaFox 请访问官方 Demo进行体验。",normalizedContent:"关于 captchafox\n\nscoria labs gmbh 旗下产品 captchafox，是一种隐私友好的解决方案，可保护用户的应用程序免受机器人或垃圾邮件等自动滥用，符合 gdpr 标准。\n\n\ndemo 样例（随时有可能变化，以实际情况为准）：\n\n\n * 官方 demo：https://captchafox.com/#demo\n\n访问 captchafox 官网\n\n注意\n\n由于 captchafox x-frame-options 限制，不允许 iframe 嵌入，且暂未找到其他 demo，captchafox 请访问官方 demo进行体验。",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"JS Hook",frontmatter:{title:"JS Hook",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/js-hook",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/01.%E8%BE%85%E5%8A%A9%E8%84%9A%E6%9C%AC/01.JS%20HOOK.html",relativePath:"03.辅助查询/01.辅助脚本/01.JS HOOK.md",key:"v-833f7130",path:"/pages/js-hook/",headers:[{level:2,title:"Hook Cookie",slug:"hook-cookie",normalizedTitle:"hook cookie",charIndex:284},{level:2,title:"Hook Request Header",slug:"hook-request-header",normalizedTitle:"hook request header",charIndex:1241},{level:2,title:"Hook 无限 Debugger",slug:"hook-无限-debugger",normalizedTitle:"hook 无限 debugger",charIndex:1651},{level:2,title:"Hook XHR",slug:"hook-xhr",normalizedTitle:"hook xhr",charIndex:3275},{level:2,title:"Hook fetch",slug:"hook-fetch",normalizedTitle:"hook fetch",charIndex:3668},{level:2,title:"Hook JSON.stringify",slug:"hook-json-stringify",normalizedTitle:"hook json.stringify",charIndex:4029},{level:2,title:"Hook JSON.parse",slug:"hook-json-parse",normalizedTitle:"hook json.parse",charIndex:4296},{level:2,title:"Hook Function",slug:"hook-function",normalizedTitle:"hook function",charIndex:4539},{level:2,title:"Hook WebSocket",slug:"hook-websocket",normalizedTitle:"hook websocket",charIndex:4994},{level:2,title:"Hook String.prototype.split",slug:"hook-string-prototype-split",normalizedTitle:"hook string.prototype.split",charIndex:5241},{level:2,title:"Hook console",slug:"hook-console",normalizedTitle:"hook console",charIndex:5703},{level:2,title:"Hook eval",slug:"hook-eval",normalizedTitle:"hook eval",charIndex:3046},{level:2,title:"Hook onbeforeunload",slug:"hook-onbeforeunload",normalizedTitle:"hook onbeforeunload",charIndex:6313},{level:2,title:"Hook RegExp",slug:"hook-regexp",normalizedTitle:"hook regexp",charIndex:6607},{level:2,title:"Hook Canvas",slug:"hook-canvas",normalizedTitle:"hook canvas",charIndex:6883},{level:2,title:"Hook createElement",slug:"hook-createelement",normalizedTitle:"hook createelement",charIndex:7036},{level:2,title:"Hook getElementById",slug:"hook-getelementbyid",normalizedTitle:"hook getelementbyid",charIndex:7583},{level:2,title:"Hook setAttribute",slug:"hook-setattribute",normalizedTitle:"hook setattribute",charIndex:7923},{level:2,title:"Hook setInterval",slug:"hook-setinterval",normalizedTitle:"hook setinterval",charIndex:2398},{level:2,title:"Hook setTimeout",slug:"hook-settimeout",normalizedTitle:"hook settimeout",charIndex:2735},{level:2,title:"清除定时器",slug:"清除定时器",normalizedTitle:"清除定时器",charIndex:8911},{level:2,title:"Hook 固定随机变量",slug:"hook-固定随机变量",normalizedTitle:"hook 固定随机变量",charIndex:8984},{level:2,title:"Hook 固定浏览器高度和宽度值",slug:"hook-固定浏览器高度和宽度值",normalizedTitle:"hook 固定浏览器高度和宽度值",charIndex:9655},{level:2,title:"Hook 通用模板",slug:"hook-通用模板",normalizedTitle:"hook 通用模板",charIndex:10941}],headersStr:"Hook Cookie Hook Request Header Hook 无限 Debugger Hook XHR Hook fetch Hook JSON.stringify Hook JSON.parse Hook Function Hook WebSocket Hook String.prototype.split Hook console Hook eval Hook onbeforeunload Hook RegExp Hook Canvas Hook createElement Hook getElementById Hook setAttribute Hook setInterval Hook setTimeout 清除定时器 Hook 固定随机变量 Hook 固定浏览器高度和宽度值 Hook 通用模板",content:'什么是 Hook？\n\nHook 中文译为钩子，在程序中可以将其理解为“劫持”，我们可以通过 Hook 技术来劫持某个对象，把这个对象的程序拉出来替换成我们自己改写的代码片段，修改参数或替换返回值，从而控制它与其他对象的交互。\n\n\n通俗来讲，Hook 其实就是拦路打劫，马邦德带着老婆，出了城，吃着火锅，还唱着歌，突然就被麻匪劫了，张麻子劫下县长马邦德的火车，摇身一变化身县长，带着手下赶赴鹅城上任。Hook 的过程，就是张麻子顶替马邦德的过程。\n\n\n\n注意\n\n收录的 Hook 脚本有限，若需要 Hook 其他函数，可参考 MDN Web API 自行编写。\n\n\n# Hook Cookie\n\n警告\n\n不推荐方法二，部分特性可能正准备或者已经从相关的 web 标准中移除，参考文档：MDN\n\n(function () {\n    let cookieCache = "";\n    Object.defineProperty(document, "cookie", {\n        set: function (val) {\n            console.log("Hook set cookie => ", val);\n            if (val.indexOf("spiderapi.cn") !== -1) {\n                debugger;\n            }\n            cookieCache = val;\n            return val;\n        },\n        get: function () {\n            return cookieCache;\n        }\n    });\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n(function () {\n    let cookieCache = document.cookie.__lookupSetter__("cookie");\n    document.__defineSetter__("cookie", function (val) {\n        console.log("Hook set cookie => ", val);\n        if (val.indexOf("spiderapi.cn") !== -1) {\n            debugger;\n        }\n        cookieCache = val;\n    });\n    document.__defineGetter__("cookie", function () {\n        return cookieCache;\n    });\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# Hook Request Header\n\n(function () {\n    let headerCache = window.XMLHttpRequest.prototype.setRequestHeader;\n    window.XMLHttpRequest.prototype.setRequestHeader = function (key, value) {\n        console.log("Hook set header %s => %s", key, value);\n        if (key === "spiderapi.cn") {\n            debugger;\n        }\n        return headerCache.apply(this, arguments);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Hook 无限 Debugger\n\n注意\n\nFirefox、Firefox Developer Edition 浏览器从 121 版本开始，添加了 Pause on debugger statement（在调试器语句上暂停）功能，默认勾选，取消勾选即可轻松绕过无限 debugger。具体详见更新日志。\n\n\n\n\n\n\n\n提示\n\n无限 debugger 生成的形式比较多样，常见于构造函数、定时器和 eval 里，可根据实际场景进行调整。\n\n(function () {\n    let constructorCache = Function.prototype.constructor;\n    Function.prototype.constructor = function (string) {\n        if (string === "debugger") {\n            console.log("Hook constructor debugger!");\n            return function () {};\n        }\n        return constructorCache(string);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n(function () {\n    let setIntervalCache = setInterval;\n    setInterval = function (func, delay) {\n        if (func.toString().indexOf("debugger") !== -1) {\n            console.log("Hook setInterval debugger!");\n            return function () {};\n        }\n        return setIntervalCache(func, delay);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n(function () {\n    let setTimeoutCache = setTimeout;\n    setTimeout = function (func, delay) {\n        if (func.toString().indexOf("debugger") !== -1) {\n            console.log("Hook setTimeout debugger!");\n            return function () {};\n        }\n        return setTimeoutCache(func, delay);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n(function () {\n    let evalCache = window.eval;\n    window.eval = function (string) {\n        if (string.includes("debugger")) {\n            console.log("Hook eval debugger!");\n        }\n        return evalCache(string.replace(/debugger\\s*;?/g, ""));\n    };\n    window.eval.toString = function () {\n        return evalCache.toString();\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# Hook XHR\n\n(function () {\n    let openCache = window.XMLHttpRequest.prototype.open;\n    window.XMLHttpRequest.prototype.open = function (method, url) {\n        console.log("Hook xhr method => %s, url => %s", method, url);\n        if (url.indexOf("spiderapi.cn") !== -1) {\n            debugger;\n        }\n        return openCache.apply(this, arguments);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Hook fetch\n\n(function () {\n    let fetchCache = Object.getOwnPropertyDescriptor(window, "fetch");\n    Object.defineProperty(window, "fetch", {\n        value: function (url) {\n            console.log("Hook fetch url => ", url);\n            debugger;\n            return fetchCache.value.apply(this, arguments);\n        }\n    });\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Hook JSON.stringify\n\n(function () {\n    let stringifyCache = JSON.stringify;\n    JSON.stringify = function (params) {\n        console.log("Hook JSON.stringify => ", params);\n        debugger;\n        return stringifyCache(params);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# Hook JSON.parse\n\n(function () {\n    let parseCache = JSON.parse;\n    JSON.parse = function (params) {\n        console.log("Hook JSON.parse => ", params);\n        debugger;\n        return parseCache(params);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# Hook Function\n\n提示\n\n以下代码执行后，所有的函数操作都会在控制台打印输出将要执行的 JS 源码。\n\n(function () {\n    let FunctionCache = window.Function;\n    let newFunction = function () {\n        let src = arguments[arguments.length - 1];\n        console.log("Hook Function => ", src);\n        debugger;\n        return FunctionCache.apply(this, arguments);\n    };\n    newFunction.toString = function () {\n        return FunctionCache.toString();\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# Hook WebSocket\n\n(function () {\n    let sendCache = WebSocket.prototype.send;\n    WebSocket.prototype.send = function (data) {\n        console.info("Hook WebSocket send => ", data);\n        return sendCache(data);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# Hook String.prototype.split\n\n(function () {\n    String.prototype.splitCache = String.prototype.split;\n    String.prototype.split = function (separator, limit) {\n        console.log("Hook String.prototype.split separator => %s, limit => %s", separator, limit);\n        let str = this.toString();\n        if(str.includes("spiderapi.cn")) {\n            debugger;\n        }\n        return str.splitCache(separator, limit)\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# Hook console\n\n(function () {\n    let consoleCache = console.log;\n    console.log = function (msg) {\n        consoleCache("Hook console.log =>", msg);\n        if(msg === "spiderapi.cn") {\n            debugger;\n        }\n        consoleCache(msg);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Hook eval\n\n(function () {\n    let evalCache = window.eval;\n    window.eval = function (string) {\n        console.log("Hook eval =>", string);\n        debugger;\n        return evalCache(string);\n    };\n    window.eval.toString = function () {\n        return evalCache.toString();\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# Hook onbeforeunload\n\n提示\n\nonbeforeunload 事件在即将离开当前页面（刷新或关闭）时触发。Hook 此事件可阻断跳转，使其留在当前页面，通常用来应对网站打开 F12 就跳转页面的情况。\n\n(function () {\n    window.onbeforeunload = function () {\n        console.log("Hook window.onbeforeunload.");\n        debugger;\n        return false;\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# Hook RegExp\n\n(function () {\n    let RegExpCache = RegExp;\n    RegExp = function (pattern, flags) {\n        console.log("Hook RegExp pattern => %s, flags => %s", pattern, flags);\n        debugger;\n        return RegExpCache(pattern, flags);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# Hook Canvas\n\n(function () {\n    let createElementCache = document.createElement;\n    document.createElement = function (tagName) {\n        console.info("Hook createElement tagName => ", tagName);\n        if(tagName === "canvas") {\n            debugger;\n        }\n        return createElementCache(tagName);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Hook createElement\n\n(function () {\n    let createElementCache = document.createElement;\n    document.createElement = function (tagName) {\n        console.info("Hook createElement tagName => ", tagName);\n        if(tagName === "div") {\n            debugger;\n        }\n        return createElementCache(tagName);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Hook getElementById\n\n(function () {\n    let getElementByIdCache = document.getElementById;\n    document.getElementById = function (id) {\n        console.info("Hook getElementById id => ", id);\n        if (id === "spiderapi") {\n            debugger;\n        }\n        return getElementByIdCache(id);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Hook setAttribute\n\n(function () {\n    let setAttributeCache = window.Element.prototype.setAttribute;\n    window.Element.prototype.setAttribute = function (name, value) {\n        console.info("Hook setAttribute name => %s, value => %s", name, value);\n        if (name === "spiderapi") {\n            debugger;\n        }\n        return setAttributeCache(name, value);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Hook setInterval\n\n(function () {\n    let setIntervalCache = setInterval;\n    setInterval = function (func, delay) {\n        console.log("Hook setInterval func => %s, delay => %s", func, delay);\n        debugger;\n        return setIntervalCache(func, delay);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# Hook setTimeout\n\n(function () {\n    let setTimeoutCache = setTimeout;\n    setTimeout = function (func, delay) {\n        console.log("Hook setTimeout func => %s, delay => %s", func, delay);\n        debugger;\n        return setTimeoutCache(func, delay);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 清除定时器\n\nfor (let i = 1; i < 99999; i++) window.clearInterval(i);\n\n\n1\n\n\n\n# Hook 固定随机变量\n\n提示\n\n来源于公众号：y小白的笔记\n\n(function () {\n    Date.now = function now() { return 1661986251253 };\n    Date.parse = function () { return 1661986251253 };\n    Date.prototype.valueOf = function () { return 1661986251253 };\n    Date.prototype.getTime = function () { return 1661986251253 };\n    Date.prototype.toString = function () { return 1661986251253 };\n    Performance.prototype.now = function now(){ return Number(\'1661986251253\'.slice(8))}\n\n    Math.random = function random() { return 0.08636862211354912 };\n    window.crypto.getRandomValues = function getRandomValues(array32, ...args){\n        return array32;\n    }\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# Hook 固定浏览器高度和宽度值\n\n提示\n\n来源于Github：0xsdeo\'s Github\n\n    let height = 660; // 固定的高度值\n    let width = 1366; // 固定的宽度值\n\n    let innerHeight_property_accessor = Object.getOwnPropertyDescriptor(window, "innerHeight"); // 获取innerHeight属性访问器描述符\n    let innerHeight_set_accessor = innerHeight_property_accessor.set; // 获取setter\n\n    Object.defineProperty(window, "innerHeight", {\n        get: function () {\n            // 在这里写你想让hook后的属性在被获取值时执行的代码\n            return height;\n        },\n        set: function () {\n            // 在这里写你想让hook后的属性在被设置值时执行的代码\n            innerHeight_set_accessor.call(window, height);// 将网站js设置目标属性值时所传入的内容传给原setter设置并返回结果\n        }\n    });\n\n    let innerWidth_property_accessor = Object.getOwnPropertyDescriptor(window, "innerWidth"); // 获取innerWidth属性访问器描述符\n    let innerWidth_set_accessor = innerWidth_property_accessor.set; // 获取setter\n\n    Object.defineProperty(window, "innerWidth", {\n        get: function () {\n            // 在这里写你想让hook后的属性在被获取值时执行的代码\n            return width;\n        },\n        set: function () {\n            // 在这里写你想让hook后的属性在被设置值时执行的代码\n            innerWidth_set_accessor.call(window, width);// 将网站js设置目标属性值时所传入的内容传给原setter设置并返回结果\n        }\n    });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# Hook 通用模板\n\n(function () {\n    let oldFunc = func;\n    func = function (arguments) {\n        console.log(arguments);\n        return oldFunc.apply(arguments);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n',normalizedContent:'什么是 hook？\n\nhook 中文译为钩子，在程序中可以将其理解为“劫持”，我们可以通过 hook 技术来劫持某个对象，把这个对象的程序拉出来替换成我们自己改写的代码片段，修改参数或替换返回值，从而控制它与其他对象的交互。\n\n\n通俗来讲，hook 其实就是拦路打劫，马邦德带着老婆，出了城，吃着火锅，还唱着歌，突然就被麻匪劫了，张麻子劫下县长马邦德的火车，摇身一变化身县长，带着手下赶赴鹅城上任。hook 的过程，就是张麻子顶替马邦德的过程。\n\n\n\n注意\n\n收录的 hook 脚本有限，若需要 hook 其他函数，可参考 mdn web api 自行编写。\n\n\n# hook cookie\n\n警告\n\n不推荐方法二，部分特性可能正准备或者已经从相关的 web 标准中移除，参考文档：mdn\n\n(function () {\n    let cookiecache = "";\n    object.defineproperty(document, "cookie", {\n        set: function (val) {\n            console.log("hook set cookie => ", val);\n            if (val.indexof("spiderapi.cn") !== -1) {\n                debugger;\n            }\n            cookiecache = val;\n            return val;\n        },\n        get: function () {\n            return cookiecache;\n        }\n    });\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n(function () {\n    let cookiecache = document.cookie.__lookupsetter__("cookie");\n    document.__definesetter__("cookie", function (val) {\n        console.log("hook set cookie => ", val);\n        if (val.indexof("spiderapi.cn") !== -1) {\n            debugger;\n        }\n        cookiecache = val;\n    });\n    document.__definegetter__("cookie", function () {\n        return cookiecache;\n    });\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# hook request header\n\n(function () {\n    let headercache = window.xmlhttprequest.prototype.setrequestheader;\n    window.xmlhttprequest.prototype.setrequestheader = function (key, value) {\n        console.log("hook set header %s => %s", key, value);\n        if (key === "spiderapi.cn") {\n            debugger;\n        }\n        return headercache.apply(this, arguments);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# hook 无限 debugger\n\n注意\n\nfirefox、firefox developer edition 浏览器从 121 版本开始，添加了 pause on debugger statement（在调试器语句上暂停）功能，默认勾选，取消勾选即可轻松绕过无限 debugger。具体详见更新日志。\n\n\n\n\n\n\n\n提示\n\n无限 debugger 生成的形式比较多样，常见于构造函数、定时器和 eval 里，可根据实际场景进行调整。\n\n(function () {\n    let constructorcache = function.prototype.constructor;\n    function.prototype.constructor = function (string) {\n        if (string === "debugger") {\n            console.log("hook constructor debugger!");\n            return function () {};\n        }\n        return constructorcache(string);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n(function () {\n    let setintervalcache = setinterval;\n    setinterval = function (func, delay) {\n        if (func.tostring().indexof("debugger") !== -1) {\n            console.log("hook setinterval debugger!");\n            return function () {};\n        }\n        return setintervalcache(func, delay);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n(function () {\n    let settimeoutcache = settimeout;\n    settimeout = function (func, delay) {\n        if (func.tostring().indexof("debugger") !== -1) {\n            console.log("hook settimeout debugger!");\n            return function () {};\n        }\n        return settimeoutcache(func, delay);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n(function () {\n    let evalcache = window.eval;\n    window.eval = function (string) {\n        if (string.includes("debugger")) {\n            console.log("hook eval debugger!");\n        }\n        return evalcache(string.replace(/debugger\\s*;?/g, ""));\n    };\n    window.eval.tostring = function () {\n        return evalcache.tostring();\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# hook xhr\n\n(function () {\n    let opencache = window.xmlhttprequest.prototype.open;\n    window.xmlhttprequest.prototype.open = function (method, url) {\n        console.log("hook xhr method => %s, url => %s", method, url);\n        if (url.indexof("spiderapi.cn") !== -1) {\n            debugger;\n        }\n        return opencache.apply(this, arguments);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# hook fetch\n\n(function () {\n    let fetchcache = object.getownpropertydescriptor(window, "fetch");\n    object.defineproperty(window, "fetch", {\n        value: function (url) {\n            console.log("hook fetch url => ", url);\n            debugger;\n            return fetchcache.value.apply(this, arguments);\n        }\n    });\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# hook json.stringify\n\n(function () {\n    let stringifycache = json.stringify;\n    json.stringify = function (params) {\n        console.log("hook json.stringify => ", params);\n        debugger;\n        return stringifycache(params);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# hook json.parse\n\n(function () {\n    let parsecache = json.parse;\n    json.parse = function (params) {\n        console.log("hook json.parse => ", params);\n        debugger;\n        return parsecache(params);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# hook function\n\n提示\n\n以下代码执行后，所有的函数操作都会在控制台打印输出将要执行的 js 源码。\n\n(function () {\n    let functioncache = window.function;\n    let newfunction = function () {\n        let src = arguments[arguments.length - 1];\n        console.log("hook function => ", src);\n        debugger;\n        return functioncache.apply(this, arguments);\n    };\n    newfunction.tostring = function () {\n        return functioncache.tostring();\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# hook websocket\n\n(function () {\n    let sendcache = websocket.prototype.send;\n    websocket.prototype.send = function (data) {\n        console.info("hook websocket send => ", data);\n        return sendcache(data);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# hook string.prototype.split\n\n(function () {\n    string.prototype.splitcache = string.prototype.split;\n    string.prototype.split = function (separator, limit) {\n        console.log("hook string.prototype.split separator => %s, limit => %s", separator, limit);\n        let str = this.tostring();\n        if(str.includes("spiderapi.cn")) {\n            debugger;\n        }\n        return str.splitcache(separator, limit)\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# hook console\n\n(function () {\n    let consolecache = console.log;\n    console.log = function (msg) {\n        consolecache("hook console.log =>", msg);\n        if(msg === "spiderapi.cn") {\n            debugger;\n        }\n        consolecache(msg);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# hook eval\n\n(function () {\n    let evalcache = window.eval;\n    window.eval = function (string) {\n        console.log("hook eval =>", string);\n        debugger;\n        return evalcache(string);\n    };\n    window.eval.tostring = function () {\n        return evalcache.tostring();\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# hook onbeforeunload\n\n提示\n\nonbeforeunload 事件在即将离开当前页面（刷新或关闭）时触发。hook 此事件可阻断跳转，使其留在当前页面，通常用来应对网站打开 f12 就跳转页面的情况。\n\n(function () {\n    window.onbeforeunload = function () {\n        console.log("hook window.onbeforeunload.");\n        debugger;\n        return false;\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# hook regexp\n\n(function () {\n    let regexpcache = regexp;\n    regexp = function (pattern, flags) {\n        console.log("hook regexp pattern => %s, flags => %s", pattern, flags);\n        debugger;\n        return regexpcache(pattern, flags);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# hook canvas\n\n(function () {\n    let createelementcache = document.createelement;\n    document.createelement = function (tagname) {\n        console.info("hook createelement tagname => ", tagname);\n        if(tagname === "canvas") {\n            debugger;\n        }\n        return createelementcache(tagname);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# hook createelement\n\n(function () {\n    let createelementcache = document.createelement;\n    document.createelement = function (tagname) {\n        console.info("hook createelement tagname => ", tagname);\n        if(tagname === "div") {\n            debugger;\n        }\n        return createelementcache(tagname);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# hook getelementbyid\n\n(function () {\n    let getelementbyidcache = document.getelementbyid;\n    document.getelementbyid = function (id) {\n        console.info("hook getelementbyid id => ", id);\n        if (id === "spiderapi") {\n            debugger;\n        }\n        return getelementbyidcache(id);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# hook setattribute\n\n(function () {\n    let setattributecache = window.element.prototype.setattribute;\n    window.element.prototype.setattribute = function (name, value) {\n        console.info("hook setattribute name => %s, value => %s", name, value);\n        if (name === "spiderapi") {\n            debugger;\n        }\n        return setattributecache(name, value);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# hook setinterval\n\n(function () {\n    let setintervalcache = setinterval;\n    setinterval = function (func, delay) {\n        console.log("hook setinterval func => %s, delay => %s", func, delay);\n        debugger;\n        return setintervalcache(func, delay);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# hook settimeout\n\n(function () {\n    let settimeoutcache = settimeout;\n    settimeout = function (func, delay) {\n        console.log("hook settimeout func => %s, delay => %s", func, delay);\n        debugger;\n        return settimeoutcache(func, delay);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 清除定时器\n\nfor (let i = 1; i < 99999; i++) window.clearinterval(i);\n\n\n1\n\n\n\n# hook 固定随机变量\n\n提示\n\n来源于公众号：y小白的笔记\n\n(function () {\n    date.now = function now() { return 1661986251253 };\n    date.parse = function () { return 1661986251253 };\n    date.prototype.valueof = function () { return 1661986251253 };\n    date.prototype.gettime = function () { return 1661986251253 };\n    date.prototype.tostring = function () { return 1661986251253 };\n    performance.prototype.now = function now(){ return number(\'1661986251253\'.slice(8))}\n\n    math.random = function random() { return 0.08636862211354912 };\n    window.crypto.getrandomvalues = function getrandomvalues(array32, ...args){\n        return array32;\n    }\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# hook 固定浏览器高度和宽度值\n\n提示\n\n来源于github：0xsdeo\'s github\n\n    let height = 660; // 固定的高度值\n    let width = 1366; // 固定的宽度值\n\n    let innerheight_property_accessor = object.getownpropertydescriptor(window, "innerheight"); // 获取innerheight属性访问器描述符\n    let innerheight_set_accessor = innerheight_property_accessor.set; // 获取setter\n\n    object.defineproperty(window, "innerheight", {\n        get: function () {\n            // 在这里写你想让hook后的属性在被获取值时执行的代码\n            return height;\n        },\n        set: function () {\n            // 在这里写你想让hook后的属性在被设置值时执行的代码\n            innerheight_set_accessor.call(window, height);// 将网站js设置目标属性值时所传入的内容传给原setter设置并返回结果\n        }\n    });\n\n    let innerwidth_property_accessor = object.getownpropertydescriptor(window, "innerwidth"); // 获取innerwidth属性访问器描述符\n    let innerwidth_set_accessor = innerwidth_property_accessor.set; // 获取setter\n\n    object.defineproperty(window, "innerwidth", {\n        get: function () {\n            // 在这里写你想让hook后的属性在被获取值时执行的代码\n            return width;\n        },\n        set: function () {\n            // 在这里写你想让hook后的属性在被设置值时执行的代码\n            innerwidth_set_accessor.call(window, width);// 将网站js设置目标属性值时所传入的内容传给原setter设置并返回结果\n        }\n    });\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n\n# hook 通用模板\n\n(function () {\n    let oldfunc = func;\n    func = function (arguments) {\n        console.log(arguments);\n        return oldfunc.apply(arguments);\n    };\n})();\n\n\n1\n2\n3\n4\n5\n6\n7\n',charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Frida API",frontmatter:{title:"Frida API",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/frida-api",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/01.%E8%BE%85%E5%8A%A9%E8%84%9A%E6%9C%AC/02.Frida%20API.html",relativePath:"03.辅助查询/01.辅助脚本/02.Frida API.md",key:"v-342dd7d0",path:"/pages/frida-api/",headers:[{level:2,title:"Hook 一般函数",slug:"hook-一般函数",normalizedTitle:"hook 一般函数",charIndex:74},{level:2,title:"Hook 重载函数",slug:"hook-重载函数",normalizedTitle:"hook 重载函数",charIndex:285},{level:2,title:"Hook 构造函数",slug:"hook-构造函数",normalizedTitle:"hook 构造函数",charIndex:755},{level:2,title:"Hook 成员方法",slug:"hook-成员方法",normalizedTitle:"hook 成员方法",charIndex:1268},{level:2,title:"Hook 内部类",slug:"hook-内部类",normalizedTitle:"hook 内部类",charIndex:1549},{level:2,title:"Hook native 函数",slug:"hook-native-函数",normalizedTitle:"hook native 函数",charIndex:1882},{level:2,title:"从内存中主动调用Java方法",slug:"从内存中主动调用java方法",normalizedTitle:"从内存中主动调用java方法",charIndex:2343},{level:2,title:"获取所有已加载的类名",slug:"获取所有已加载的类名",normalizedTitle:"获取所有已加载的类名",charIndex:2704},{level:2,title:"获取方法名",slug:"获取方法名",normalizedTitle:"获取方法名",charIndex:2951},{level:2,title:"打印堆栈信息",slug:"打印堆栈信息",normalizedTitle:"打印堆栈信息",charIndex:3200},{level:2,title:"打印类所有方法名",slug:"打印类所有方法名",normalizedTitle:"打印类所有方法名",charIndex:3400},{level:2,title:"构造 context",slug:"构造-context",normalizedTitle:"构造 context",charIndex:3731},{level:2,title:"Hook NO_Proxy",slug:"hook-no-proxy",normalizedTitle:"hook no_proxy",charIndex:3900},{level:2,title:"Hook HashMap-put",slug:"hook-hashmap-put",normalizedTitle:"hook hashmap-put",charIndex:4567},{level:2,title:"Hook ArrayList-add",slug:"hook-arraylist-add",normalizedTitle:"hook arraylist-add",charIndex:4853},{level:2,title:"Hook TextUtils-isEmpty",slug:"hook-textutils-isempty",normalizedTitle:"hook textutils-isempty",charIndex:5366},{level:2,title:"Hook Base64-encodeToString",slug:"hook-base64-encodetostring",normalizedTitle:"hook base64-encodetostring",charIndex:5739},{level:2,title:"okhttp3 rpc",slug:"okhttp3-rpc",normalizedTitle:"okhttp3 rpc",charIndex:6120},{level:2,title:"okhttp3 GET",slug:"okhttp3-get",normalizedTitle:"okhttp3 get",charIndex:6718},{level:2,title:"okhttp3 POST",slug:"okhttp3-post",normalizedTitle:"okhttp3 post",charIndex:7764},{level:2,title:"Hook 只在指定函数内生效",slug:"hook-只在指定函数内生效",normalizedTitle:"hook 只在指定函数内生效",charIndex:9149}],headersStr:"Hook 一般函数 Hook 重载函数 Hook 构造函数 Hook 成员方法 Hook 内部类 Hook native 函数 从内存中主动调用Java方法 获取所有已加载的类名 获取方法名 打印堆栈信息 打印类所有方法名 构造 context Hook NO_Proxy Hook HashMap-put Hook ArrayList-add Hook TextUtils-isEmpty Hook Base64-encodeToString okhttp3 rpc okhttp3 GET okhttp3 POST Hook 只在指定函数内生效",content:'提示\n\nFrida API 根据李玺 LxTools、r0ysue AndroidSecurityStudy 以及官方文档整理、修改而成。\n\n\n# Hook 一般函数\n\nvar MyClass = Java.use(\'xx.xx.MainActivity\');\nMyClass.myMethod.implementation = function (arg) {\n    var ret = this.myMethod(arg);\n    console.log(\'Done:\' + arg);\n    return ret;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# Hook 重载函数\n\nmyClass.myMethod.overload("java.lang.String").implementation = function(param1) {\nconsole.log(param1);\n}\n\nmyClass.myMethod.overload("[B","[B").implementation = function(param1,param2) {\nconst p1 = Java.use("java.lang.String").$new(param1);\nconst p2 = Java.use("java.lang.String").$new(param2);\n}\n\nmyClass.myMethod.overload("android.context.Context", "boolean").implementation = function(param1, param2){\n   //do something \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# Hook 构造函数\n\nconst StringBuilder = Java.use(\'java.lang.StringBuilder\');\nStringBuilder.$init.overload(\'java.lang.String\').implementation = function (arg) {\n    var partial = "";\n    var result = this.$init(arg);\n    if (arg !== null) {\n         partial = arg.toString().slice(0,10);\n    }\n    console.log(\'new StringBuilder("\' + partial + \'");\');\n    return result;\n};\n\n\nStringBuilder.$init.overload(\'[B\', \'int\').implementation = function (arg1,arg2) {\n  //do something \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# Hook 成员方法\n\nJava.perform(\n    function(){\n            var ba = Java.use("com.xx.xx.xx").$new();\n            if (ba != undefined) {\n                ba.mdthod.implementation = function (a1) {\n                //do something \n            }\n        }\n    }\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Hook 内部类\n\nvar inInnerClass = Java.use(\'ese.xposedtest.MainActivity$inInnerClass\');\n// 类路径$内部类名\ninInnerClass.methodInclass.implementation = function(arguments){\n    var arg0 = arguments[0];\n    var arg1 = arguments[1];\n    send("params1: "+ arg0 +" params2: " + arg1);\n    return this.formInclass(1,"Frida");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# Hook native 函数\n\nfunction hookNativeFun(callback, funName, moduleName) {\n    var time = 1000;\n    var address = Module.findExportByName(moduleName, funName);\n    if (address == null) {\n        setTimeout(hookNativeFun, time, callback, funName, moduleName);\n}\nelse {\n        console.log(funName + "hook result")\n        var nativePointer = new NativePointer(address);\n        Interceptor.attach(nativePointer, callback);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 从内存中主动调用Java方法\n\nJava.perform(\n    function(){\n        Java.choose("com.xx.xx.xx", {\n            onMatch: function (x) {\n                ba.signInternal.implementation = function (a1, a2) {\n                    result = x.method(a1, a2);\n                }\n            },\n            onComplete: function () {}\n        })\n    }\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 获取所有已加载的类名\n\nJava.perform(function() {\n    Java.enumerateLoadedClasses({\n        onMatch: function(className) {\n            send(className);},\n        onComplete:function() {\n            send("done");\n        }\n    });\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 获取方法名\n\nfunction getMethodName() {\n    var ret;\n    Java.perform(function() {\n        var Thread = Java.use("java.lang.Thread")\n        ret = Thread.currentThread().getStackTrace()[2].getMethodName();\n    });\n    return ret;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 打印堆栈信息\n\nfunction showStacks() {\n    Java.perform(function() {\n        console.log(Java.use("android.util.Log").getStackTraceString(Java.use("java.lang.Exception").$new()));\n    });\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 打印类所有方法名\n\nfunction enumMethods(targetClass) {\n    var ret;\n    Java.perform(function() {\n            var hook = Java.use(targetClass);\n            var ret = hook.class.getDeclaredMethods();\n            ret.forEach(function(s) {\n                console.log(s);\n            })\n    })\n    return ret;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 构造 context\n\nvar current_application = Java.use(\'android.app.ActivityThread\').currentApplication();\nvar context = current_application.getApplicationContext();\n\n\n1\n2\n\n\n\n# Hook NO_Proxy\n\nJava.perform(function() {\n    console.log("1 start hook");\n    try {\n        var URL = Java.use(\'java.net.URL\')\n        URL.openConnection.overload(\'java.net.Proxy\').implementation = function (arg1) {\n            return this.openConnection()\n        }\n    } catch (e) {\n        console.log(\'\' + e)\n    }\n    try {\n        var Builder = Java.use(\'okhttp3.OkHttpClient$Builder\')\n        var mybuilder = Builder.$new()\n        Builder.proxy.overload(\'java.net.Proxy\').implementation = function (arg1) {\n            return mybuilder\n        }\n    } catch (e) {\n        console.log(\'\' + e)\n    }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# Hook HashMap-put\n\nvar hashMap = Java.use("java.util.HashMap");\nhashMap.put.implementation = function (a, b) {\n    // 不行可换 a.equals("username")\n    if (a=="username") {\n     console.log("hashMap.put: ", a, b);\n        printStacks();\n }\n return this.put(a, b);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# Hook ArrayList-add\n\nvar arrayList = Java.use("java.util.ArrayList");\narrayList.add.overload(\'java.lang.Object\').implementation = function (a) {\n    if (a == "username") {\n        console.log("arrayList.add: ", a);\n        showStacks();  // 打印堆栈信息\n    }\n    //console.log("arrayList.add: ", a);\n    return this.add(a);\n}\narrayList.add.overload(\'int\', \'java.lang.Object\').implementation = function (a, b) {\n    console.log("arrayList.add: ", a, b);\n    return this.add(a, b);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# Hook TextUtils-isEmpty\n\n// 判断输入框是否为空\nvar textUtils = Java.use("android.text.TextUtils");\ntextUtils.isEmpty.implementation = function (a) {\n    if (a == "TURJNk1EQTZNREE2TURBNk1EQTZNREE9") {\n        console.log("textUtils.isEmpty: ", a);\n        printStacks();\n\n    }\n    //console.log("textUtils.isEmpty: ", a);\n    return this.isEmpty(a);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# Hook Base64-encodeToString\n\nvar base64 = Java.use("android.util.Base64");\nbase64.encodeToString.overload(\'[B\', \'int\').implementation = function (a, b) {\n    console.log("base64.encodeToString: ", JSON.stringify(a));\n    var result = this.encodeToString(a, b);\n    console.log("base64.encodeToString result: ", result)\n    printStacks();\n    return result;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# okhttp3 rpc\n\nrpc.exports = {\n    request_url: function (url) {\n        return new Promise(function(resolve, reject) {\n            Java.perform(function () {\n                var OkHttpClient=Java.use("okhttp3.OkHttpClient");\n                var Builder=Java.use("okhttp3.Request$Builder");\n                var client = OkHttpClient.$new()\n                var request = Builder.$new().get().url(url).build()\n                var response = client.newCall(request).execute()\n                resolve(response.body().string())\n            });\n        });\n    }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# okhttp3 GET\n\nfunction okhttp3_get(url, headers_str) {\n    let body = null;\n    Java.perform(() => {\n        const BuilderClazz = Java.use(\'okhttp3.Request$Builder\');\n        const OkHttpClientClazz = Java.use(\'okhttp3.OkHttpClient\');\n        try{\n            let builder = BuilderClazz.$new();\n            builder = builder.url(url);\n            if(headers_str != null && headers_str != \'\'){\n                let headers = JSON.parse(headers_str);\n                for(let key in headers){\n                    builder = builder.addHeader(key, headers[key]);\n                }\n            }\n            let request = builder.build();\n            if(!okhttp3_client){\n                okhttp3_client = OkHttpClientClazz.$new();\n            }\n            let call = okhttp3_client.newCall(request);\n            let response = call.execute();\n            body = response.body().string();\n        }catch(e){\n            console.error(e);\n        }\n    });\n    return body;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n\n# okhttp3 POST\n\nfunction okhttp3_post(url, headers_str, media_type, body) {\n    let ret = null;\n    Java.perform(() => {\n        const BuilderClazz = Java.use(\'okhttp3.Request$Builder\');\n        const OkHttpClientClazz = Java.use(\'okhttp3.OkHttpClient\');\n        const MediaTypeClazz = Java.use(\'okhttp3.MediaType\');\n        const RequestBodyClazz = Java.use(\'okhttp3.RequestBody\');\n        try{\n            let builder = BuilderClazz.$new();\n            builder = builder.url(url);\n            if(headers_str != null && headers_str != \'\'){\n                let headers = JSON.parse(headers_str);\n                for(let key in headers){\n                    builder = builder.addHeader(key, headers[key]);\n                }\n            }\n            let m_type = MediaTypeClazz.parse(media_type);\n            let request_body = RequestBodyClazz.create(m_type, body);\n            builder = builder.post(request_body);\n            let request = builder.build();\n            if(!okhttp3_client){\n                okhttp3_client = OkHttpClientClazz.$new();\n            }\n            let call = okhttp3_client.newCall(request);\n            let response = call.execute();\n            ret = response.body().string();\n        }catch(e){\n            console.error(e);\n        }\n    });\n    return ret;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# Hook 只在指定函数内生效\n\nfunction makeHookMethodInSpecifiedFunction(specifiedClass, specifiedMethod, className, methodName) {\n    Java.perform(function () {\n        // Hook指定函数\n        let specifiedClazz = Java.use(specifiedClass);\n        specifiedClazz[specifiedMethod].implementation = function () {\n            console.log("指定的Hook函数生效");\n            // Hook 要Hook的函数\n            let clazz = Java.use(className);\n            clazz[methodName].implementation = function () {\n                console.log("要Hook的函数生效");\n                return this[methodName](arguments);\n            }\n            // 关闭要Hook的函数\n            clazz[methodName].implementation = null;\n            return this[specifiedMethod](arguments);\n        }\n    });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',normalizedContent:'提示\n\nfrida api 根据李玺 lxtools、r0ysue androidsecuritystudy 以及官方文档整理、修改而成。\n\n\n# hook 一般函数\n\nvar myclass = java.use(\'xx.xx.mainactivity\');\nmyclass.mymethod.implementation = function (arg) {\n    var ret = this.mymethod(arg);\n    console.log(\'done:\' + arg);\n    return ret;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# hook 重载函数\n\nmyclass.mymethod.overload("java.lang.string").implementation = function(param1) {\nconsole.log(param1);\n}\n\nmyclass.mymethod.overload("[b","[b").implementation = function(param1,param2) {\nconst p1 = java.use("java.lang.string").$new(param1);\nconst p2 = java.use("java.lang.string").$new(param2);\n}\n\nmyclass.mymethod.overload("android.context.context", "boolean").implementation = function(param1, param2){\n   //do something \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# hook 构造函数\n\nconst stringbuilder = java.use(\'java.lang.stringbuilder\');\nstringbuilder.$init.overload(\'java.lang.string\').implementation = function (arg) {\n    var partial = "";\n    var result = this.$init(arg);\n    if (arg !== null) {\n         partial = arg.tostring().slice(0,10);\n    }\n    console.log(\'new stringbuilder("\' + partial + \'");\');\n    return result;\n};\n\n\nstringbuilder.$init.overload(\'[b\', \'int\').implementation = function (arg1,arg2) {\n  //do something \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# hook 成员方法\n\njava.perform(\n    function(){\n            var ba = java.use("com.xx.xx.xx").$new();\n            if (ba != undefined) {\n                ba.mdthod.implementation = function (a1) {\n                //do something \n            }\n        }\n    }\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# hook 内部类\n\nvar ininnerclass = java.use(\'ese.xposedtest.mainactivity$ininnerclass\');\n// 类路径$内部类名\nininnerclass.methodinclass.implementation = function(arguments){\n    var arg0 = arguments[0];\n    var arg1 = arguments[1];\n    send("params1: "+ arg0 +" params2: " + arg1);\n    return this.forminclass(1,"frida");\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# hook native 函数\n\nfunction hooknativefun(callback, funname, modulename) {\n    var time = 1000;\n    var address = module.findexportbyname(modulename, funname);\n    if (address == null) {\n        settimeout(hooknativefun, time, callback, funname, modulename);\n}\nelse {\n        console.log(funname + "hook result")\n        var nativepointer = new nativepointer(address);\n        interceptor.attach(nativepointer, callback);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 从内存中主动调用java方法\n\njava.perform(\n    function(){\n        java.choose("com.xx.xx.xx", {\n            onmatch: function (x) {\n                ba.signinternal.implementation = function (a1, a2) {\n                    result = x.method(a1, a2);\n                }\n            },\n            oncomplete: function () {}\n        })\n    }\n)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 获取所有已加载的类名\n\njava.perform(function() {\n    java.enumerateloadedclasses({\n        onmatch: function(classname) {\n            send(classname);},\n        oncomplete:function() {\n            send("done");\n        }\n    });\n});\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 获取方法名\n\nfunction getmethodname() {\n    var ret;\n    java.perform(function() {\n        var thread = java.use("java.lang.thread")\n        ret = thread.currentthread().getstacktrace()[2].getmethodname();\n    });\n    return ret;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 打印堆栈信息\n\nfunction showstacks() {\n    java.perform(function() {\n        console.log(java.use("android.util.log").getstacktracestring(java.use("java.lang.exception").$new()));\n    });\n}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 打印类所有方法名\n\nfunction enummethods(targetclass) {\n    var ret;\n    java.perform(function() {\n            var hook = java.use(targetclass);\n            var ret = hook.class.getdeclaredmethods();\n            ret.foreach(function(s) {\n                console.log(s);\n            })\n    })\n    return ret;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 构造 context\n\nvar current_application = java.use(\'android.app.activitythread\').currentapplication();\nvar context = current_application.getapplicationcontext();\n\n\n1\n2\n\n\n\n# hook no_proxy\n\njava.perform(function() {\n    console.log("1 start hook");\n    try {\n        var url = java.use(\'java.net.url\')\n        url.openconnection.overload(\'java.net.proxy\').implementation = function (arg1) {\n            return this.openconnection()\n        }\n    } catch (e) {\n        console.log(\'\' + e)\n    }\n    try {\n        var builder = java.use(\'okhttp3.okhttpclient$builder\')\n        var mybuilder = builder.$new()\n        builder.proxy.overload(\'java.net.proxy\').implementation = function (arg1) {\n            return mybuilder\n        }\n    } catch (e) {\n        console.log(\'\' + e)\n    }\n})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# hook hashmap-put\n\nvar hashmap = java.use("java.util.hashmap");\nhashmap.put.implementation = function (a, b) {\n    // 不行可换 a.equals("username")\n    if (a=="username") {\n     console.log("hashmap.put: ", a, b);\n        printstacks();\n }\n return this.put(a, b);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# hook arraylist-add\n\nvar arraylist = java.use("java.util.arraylist");\narraylist.add.overload(\'java.lang.object\').implementation = function (a) {\n    if (a == "username") {\n        console.log("arraylist.add: ", a);\n        showstacks();  // 打印堆栈信息\n    }\n    //console.log("arraylist.add: ", a);\n    return this.add(a);\n}\narraylist.add.overload(\'int\', \'java.lang.object\').implementation = function (a, b) {\n    console.log("arraylist.add: ", a, b);\n    return this.add(a, b);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# hook textutils-isempty\n\n// 判断输入框是否为空\nvar textutils = java.use("android.text.textutils");\ntextutils.isempty.implementation = function (a) {\n    if (a == "turjnk1eqtznree2turbnk1eqtznree9") {\n        console.log("textutils.isempty: ", a);\n        printstacks();\n\n    }\n    //console.log("textutils.isempty: ", a);\n    return this.isempty(a);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# hook base64-encodetostring\n\nvar base64 = java.use("android.util.base64");\nbase64.encodetostring.overload(\'[b\', \'int\').implementation = function (a, b) {\n    console.log("base64.encodetostring: ", json.stringify(a));\n    var result = this.encodetostring(a, b);\n    console.log("base64.encodetostring result: ", result)\n    printstacks();\n    return result;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# okhttp3 rpc\n\nrpc.exports = {\n    request_url: function (url) {\n        return new promise(function(resolve, reject) {\n            java.perform(function () {\n                var okhttpclient=java.use("okhttp3.okhttpclient");\n                var builder=java.use("okhttp3.request$builder");\n                var client = okhttpclient.$new()\n                var request = builder.$new().get().url(url).build()\n                var response = client.newcall(request).execute()\n                resolve(response.body().string())\n            });\n        });\n    }\n};\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# okhttp3 get\n\nfunction okhttp3_get(url, headers_str) {\n    let body = null;\n    java.perform(() => {\n        const builderclazz = java.use(\'okhttp3.request$builder\');\n        const okhttpclientclazz = java.use(\'okhttp3.okhttpclient\');\n        try{\n            let builder = builderclazz.$new();\n            builder = builder.url(url);\n            if(headers_str != null && headers_str != \'\'){\n                let headers = json.parse(headers_str);\n                for(let key in headers){\n                    builder = builder.addheader(key, headers[key]);\n                }\n            }\n            let request = builder.build();\n            if(!okhttp3_client){\n                okhttp3_client = okhttpclientclazz.$new();\n            }\n            let call = okhttp3_client.newcall(request);\n            let response = call.execute();\n            body = response.body().string();\n        }catch(e){\n            console.error(e);\n        }\n    });\n    return body;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n\n# okhttp3 post\n\nfunction okhttp3_post(url, headers_str, media_type, body) {\n    let ret = null;\n    java.perform(() => {\n        const builderclazz = java.use(\'okhttp3.request$builder\');\n        const okhttpclientclazz = java.use(\'okhttp3.okhttpclient\');\n        const mediatypeclazz = java.use(\'okhttp3.mediatype\');\n        const requestbodyclazz = java.use(\'okhttp3.requestbody\');\n        try{\n            let builder = builderclazz.$new();\n            builder = builder.url(url);\n            if(headers_str != null && headers_str != \'\'){\n                let headers = json.parse(headers_str);\n                for(let key in headers){\n                    builder = builder.addheader(key, headers[key]);\n                }\n            }\n            let m_type = mediatypeclazz.parse(media_type);\n            let request_body = requestbodyclazz.create(m_type, body);\n            builder = builder.post(request_body);\n            let request = builder.build();\n            if(!okhttp3_client){\n                okhttp3_client = okhttpclientclazz.$new();\n            }\n            let call = okhttp3_client.newcall(request);\n            let response = call.execute();\n            ret = response.body().string();\n        }catch(e){\n            console.error(e);\n        }\n    });\n    return ret;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n\n\n\n# hook 只在指定函数内生效\n\nfunction makehookmethodinspecifiedfunction(specifiedclass, specifiedmethod, classname, methodname) {\n    java.perform(function () {\n        // hook指定函数\n        let specifiedclazz = java.use(specifiedclass);\n        specifiedclazz[specifiedmethod].implementation = function () {\n            console.log("指定的hook函数生效");\n            // hook 要hook的函数\n            let clazz = java.use(classname);\n            clazz[methodname].implementation = function () {\n                console.log("要hook的函数生效");\n                return this[methodname](arguments);\n            }\n            // 关闭要hook的函数\n            clazz[methodname].implementation = null;\n            return this[specifiedmethod](arguments);\n        }\n    });\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n',charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Babel",frontmatter:{title:"Babel",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/babel",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/01.%E8%BE%85%E5%8A%A9%E8%84%9A%E6%9C%AC/03.babel%20%E8%84%9A%E6%9C%AC.html",relativePath:"03.辅助查询/01.辅助脚本/03.babel 脚本.md",key:"v-0ab43380",path:"/pages/babel/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Linux 命令",frontmatter:{title:"Linux 命令",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/linux",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/02.%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2/01.Linux%20%E5%91%BD%E4%BB%A4.html",relativePath:"03.辅助查询/02.命令查询/01.Linux 命令.md",key:"v-a5cf239c",path:"/pages/linux/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"ADB 命令",frontmatter:{title:"ADB 命令",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/adb",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/02.%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2/02.ADB%20%E5%91%BD%E4%BB%A4.html",relativePath:"03.辅助查询/02.命令查询/02.ADB 命令.md",key:"v-37b4a41c",path:"/pages/adb/",headers:[{level:2,title:"ADB Debugging",slug:"adb-debugging",normalizedTitle:"adb debugging",charIndex:102},{level:3,title:"adb kill-server",slug:"adb-kill-server",normalizedTitle:"adb kill-server",charIndex:120},{level:3,title:"adb start-server",slug:"adb-start-server",normalizedTitle:"adb start-server",charIndex:174},{level:3,title:"adb devices",slug:"adb-devices",normalizedTitle:"adb devices",charIndex:230},{level:3,title:"adb forward",slug:"adb-forward",normalizedTitle:"adb forward",charIndex:312},{level:2,title:"无线连接",slug:"无线连接",normalizedTitle:"无线连接",charIndex:489},{level:3,title:"adb connect",slug:"adb-connect",normalizedTitle:"adb connect",charIndex:498},{level:3,title:"adb usb",slug:"adb-usb",normalizedTitle:"adb usb",charIndex:819},{level:2,title:"APK 包管理",slug:"apk-包管理",normalizedTitle:"apk 包管理",charIndex:858},{level:3,title:"adb install",slug:"adb-install",normalizedTitle:"adb install",charIndex:870},{level:3,title:"adb uninstall",slug:"adb-uninstall",normalizedTitle:"adb uninstall",charIndex:1592},{level:3,title:"adb shell pm list packages",slug:"adb-shell-pm-list-packages",normalizedTitle:"adb shell pm list packages",charIndex:1716},{level:3,title:"adb shell pm path",slug:"adb-shell-pm-path",normalizedTitle:"adb shell pm path",charIndex:2708},{level:3,title:"adb shell pm clear",slug:"adb-shell-pm-clear",normalizedTitle:"adb shell pm clear",charIndex:2784},{level:2,title:"文件管理",slug:"文件管理",normalizedTitle:"文件管理",charIndex:2875},{level:3,title:"adb pull",slug:"adb-pull",normalizedTitle:"adb pull",charIndex:2884},{level:3,title:"adb push",slug:"adb-push",normalizedTitle:"adb push",charIndex:3097},{level:3,title:"adb shell ls",slug:"adb-shell-ls",normalizedTitle:"adb shell ls",charIndex:3329},{level:3,title:"adb shell cd",slug:"adb-shell-cd",normalizedTitle:"adb shell cd",charIndex:3524},{level:3,title:"adb shell rm",slug:"adb-shell-rm",normalizedTitle:"adb shell rm",charIndex:3590},{level:3,title:"adb shell mkdir",slug:"adb-shell-mkdir",normalizedTitle:"adb shell mkdir",charIndex:4001},{level:3,title:"adb shell touch",slug:"adb-shell-touch",normalizedTitle:"adb shell touch",charIndex:4176},{level:3,title:"adb shell pwd",slug:"adb-shell-pwd",normalizedTitle:"adb shell pwd",charIndex:4279},{level:3,title:"adb shell cp",slug:"adb-shell-cp",normalizedTitle:"adb shell cp",charIndex:4330},{level:3,title:"adb shell mv",slug:"adb-shell-mv",normalizedTitle:"adb shell mv",charIndex:4426},{level:2,title:"网络相关",slug:"网络相关",normalizedTitle:"网络相关",charIndex:4918},{level:3,title:"adb shell netstat",slug:"adb-shell-netstat",normalizedTitle:"adb shell netstat",charIndex:4927},{level:3,title:"adb shell ping",slug:"adb-shell-ping",normalizedTitle:"adb shell ping",charIndex:5538},{level:3,title:"adb shell netcfg/ifconfig",slug:"adb-shell-netcfg-ifconfig",normalizedTitle:"adb shell netcfg/ifconfig",charIndex:5825},{level:3,title:"adb shell ip",slug:"adb-shell-ip",normalizedTitle:"adb shell ip",charIndex:5987},{level:2,title:"日志相关",slug:"日志相关",normalizedTitle:"日志相关",charIndex:6256},{level:3,title:"adb logcat",slug:"adb-logcat",normalizedTitle:"adb logcat",charIndex:6265},{level:3,title:"adb shell dumpsys",slug:"adb-shell-dumpsys",normalizedTitle:"adb shell dumpsys",charIndex:7597},{level:3,title:"adb shell dumpstate",slug:"adb-shell-dumpstate",normalizedTitle:"adb shell dumpstate",charIndex:7951},{level:2,title:"截图录屏",slug:"截图录屏",normalizedTitle:"截图录屏",charIndex:8257},{level:3,title:"adb shell screencap",slug:"adb-shell-screencap",normalizedTitle:"adb shell screencap",charIndex:8266},{level:3,title:"adb shell screenrecord",slug:"adb-shell-screenrecord",normalizedTitle:"adb shell screenrecord",charIndex:8362},{level:2,title:"系统相关",slug:"系统相关",normalizedTitle:"系统相关",charIndex:9296},{level:3,title:"adb root",slug:"adb-root",normalizedTitle:"adb root",charIndex:9305},{level:3,title:"adb sideload",slug:"adb-sideload",normalizedTitle:"adb sideload",charIndex:9399},{level:3,title:"adb shell ps",slug:"adb-shell-ps",normalizedTitle:"adb shell ps",charIndex:9517},{level:3,title:"adb shell top",slug:"adb-shell-top",normalizedTitle:"adb shell top",charIndex:9733},{level:3,title:"adb shell getprop",slug:"adb-shell-getprop",normalizedTitle:"adb shell getprop",charIndex:10051},{level:3,title:"adb shell setprop",slug:"adb-shell-setprop",normalizedTitle:"adb shell setprop",charIndex:10336}],headersStr:"ADB Debugging adb kill-server adb start-server adb devices adb forward 无线连接 adb connect adb usb APK 包管理 adb install adb uninstall adb shell pm list packages adb shell pm path adb shell pm clear 文件管理 adb pull adb push adb shell ls adb shell cd adb shell rm adb shell mkdir adb shell touch adb shell pwd adb shell cp adb shell mv 网络相关 adb shell netstat adb shell ping adb shell netcfg/ifconfig adb shell ip 日志相关 adb logcat adb shell dumpsys adb shell dumpstate 截图录屏 adb shell screencap adb shell screenrecord 系统相关 adb root adb sideload adb shell ps adb shell top adb shell getprop adb shell setprop",content:"提示\n\nADB（Android Debug Bridge）是一个命令行工具，可与模拟器或连接的 Android 设备进行通信，可以下载 SDK Platform Tools 获取 ADB 工具。\n\n\n# ADB Debugging\n\n\n# adb kill-server\n\n关闭 ADB 服务：\n\nadb kill-server\n\n\n1\n\n\n\n# adb start-server\n\n启动 ADB 服务：\n\nadb start-server\n\n\n1\n\n\n\n# adb devices\n\n查看连接设备：\n\nadb devices\n\n\n1\n\n\n查看连接设备，-l 表示长输出：\n\nadb devices -l\n\n\n1\n\n\n\n# adb forward\n\n列出所有 socket 连接：\n\nadb forward --list\n\n\n1\n\n\n设置端口转发，将计算机端口 6123 转发到 Android 设备端口 7123：\n\nadb forward tcp:6123 tcp:7123\n# adb forward [远程端协议：端口号] [设备端协议：端口号]\n\n\n1\n2\n\n\n\n# 无线连接\n\n\n# adb connect\n\nStep 1：在电脑端指定 Android 设备的 TCP/IP 端口，断开 USB 与 Android 设备的连接：\n\nadb tcpip 5555\n\n\n1\n\n\nStep 2：在“设置”>“关于手机”>“状态信息”>“IP 地址”中找到 Android 设备的 IP 地址，通过 Wi-Fi 连接到设备：\n\nadb connect 192.168.1.184:5555\n\n\n1\n\n\nStep 3：确认已通过 Wi-Fi 连接到 Android 设备：\n\nadb devices\n# List of devices attached\n# 192.168.1.184:5555 device\n\n\n1\n2\n3\n\n\n\n# adb usb\n\n在USB模式下重新启动\n\nadb usb\n\n\n1\n\n\n\n# APK 包管理\n\n\n# adb install\n\n将单个 APK 推送到设备并安装：\n\nadb install spiderapi.cn.apk\n\n\n1\n\n\n将单个软件的多个 APK 推送到设备，然后当作一整个 apk 进行安装：\n\nadb install-multiple spiderapi.cn.apk spiderapi.cn.arm64.apk\n\n\n1\n\n\n将单个软件的多个 APK 推送到设备，然后当作一整个 apk 以原子方式进行安装：\n\nadb install-multi-package spiderapi.cn.apk spiderapi.cn.arm64.apk\n\n\n1\n\n\n替换现有应用程序，重新安装现有应用程序，保留其数据：\n\nadb install -r spiderapi.cn.apk\n\n\n1\n\n\n允许测试包：\n\nadb install -t spiderapi.cn.apk\n\n\n1\n\n\n允许 APK 进行降级安装，正常是不被允许：\n\nadb install -d spiderapi.cn.apk\n\n\n1\n\n\n为应用程序授予所有运行时的权限：\n\nadb install -g spiderapi.cn.apk\n\n\n1\n\n\n使应用程序作为临时安装应用程序安装：\n\nadb install --instant spiderapi.cn.apk\n\n\n1\n\n\n使用快速部署：\n\nadb install --fastdeploy spiderapi.cn.apk\n\n\n1\n\n\n允许将 apk 推送到设备并作为单独的步骤调用包管理器：\n\nadb install --no-streaming spiderapi.cn.apk\n\n\n1\n\n\n\n# adb uninstall\n\n卸载 app：\n\nadb uninstall spiderapi.cn.apk\n\n\n1\n\n\n卸载 app 后保留数据和缓存目录：\n\nadb uninstall -k spiderapi.cn.apk\n\n\n1\n\n\n\n# adb shell pm list packages\n\n列出所有应用程序，包括系统应用和用户安装的应用：\n\nadb shell pm list packages\n\n\n1\n\n\n列出所有应用程序包的包名以及其对应的文件路径（file）：\n\nadb shell pm list packages -f\n\n\n1\n\n\n列出所有（all）应用程序的详细信息，包括系统应用和用户安装的应用，但不包括 APXes（Android Pony EXpress）：\n\nadb shell pm list packages -a\n\n\n1\n\n\n仅列出 APEX 包：\n\nadb shell pm list packages --apex-only\n\n\n1\n\n\n列出已经被禁用的（disabled）应用程序包：\n\nadb shell pm list packages -d\n\n\n1\n\n\n列出已经被启用的（enabled）应用程序包：\n\nadb shell pm list packages -e\n\n\n1\n\n\n列出系统自带的（system）应用程序包：\n\nadb shell pm list packages -s\n\n\n1\n\n\n列出第三方（third party）应用程序包：\n\nadb shell pm list packages -3\n\n\n1\n\n\n列出应用程序包的安装器信息（installer）：\n\nadb shell pm list packages -i\n\n\n1\n\n\n列出被忽略（ignored）（用于与旧版本的兼容）的应用程序包：\n\nadb shell pm list packages -l\n\n\n1\n\n\n列出应用程序包的 UID：\n\nadb shell pm list packages -U\n\n\n1\n\n\n仅列出指定 UID 的包：\n\nadb shell pm list packages --uid UID\n\n\n1\n\n\n列出未安装的（uninstalled）应用程序包：\n\nadb shell pm list packages -u\n\n\n1\n\n\n显示版本代码：\n\nadb shell pm list packages --show-versioncode\n\n\n1\n\n\n仅列出属于指定用户的包：\n\nadb shell pm list packages --user USER_ID\n\n\n1\n\n\n\n# adb shell pm path\n\n查看某个安装包的路径：\n\nadb shell pm path com.spiderapi.cn\n\n\n1\n\n\n\n# adb shell pm clear\n\n删除与包相关的所有数据（app 的数据和缓存）:\n\nadb shell pm clear com.spiderapi.cn\n\n\n1\n\n\n\n# 文件管理\n\n\n# adb pull\n\n从 Android 设备复制文件、目录到 PC 端：\n\nadb pull /mnt/sdcard/Download/spiderapi.apk spiderapi_pc.apk\n\n\n1\n\n\n- a 参数保持了文件的时间属性（不改变文件的“修改时间”等信息）\n\nadb pull -a /mnt/sdcard/Download/spiderapi.apk spiderapi_pc.apk\n\n\n1\n\n\n\n# adb push\n\n从 PC 端复制文件、目录到 Android 设备：\n\nadb push spiderapi_pc.apk /mnt/sdcard/Download/spiderapi.apk\n\n\n1\n\n\n对 Android 设备上的文件进行更新，只有当 PC 端的文件日期比设备端的新，才会进行推送：\n\nadb push --sync spiderapi_pc.apk /mnt/sdcard/Download/spiderapi.apk\n\n\n1\n\n\n\n# adb shell ls\n\n列出文件和目录：\n\nadb shell ls /system/bin\n\n\n1\n\n\n列出所有文件，包括隐藏文件（.hidden）：\n\nadb shell ls -a\n\n\n1\n\n\n列出目录，而不是内容：\n\nadb shell ls -d\n\n\n1\n\n\n子目录中的递归列表：\n\nadb shell ls -R /mnt/sdcard/Download\n\n\n1\n\n\n\n# adb shell cd\n\n进入指定目录：\n\nadb shell cd /mnt/sdcard/Download\n\n\n1\n\n\n\n# adb shell rm\n\n删除（remove）文件：\n\nadb shell rm /mnt/sdcard/Download/spiderapi.apk\n\n\n1\n\n\n强制（force）删除文件，即便文件不存在，也不会报错：\n\nadb shell rm -f /mnt/sdcard/Download/spiderapi.apk\n\n\n1\n\n\n交互式（interactive），会提示确认删除：\n\nadb shell rm -i /mnt/sdcard/Download/spiderapi.apk\n\n\n1\n\n\n递归（recursive）删除目录内容：\n\nadb shell rm -rR /mnt/sdcard/Download\n\n\n1\n\n\n显示删除的文件或目录的名称、进展等信息（verbose）：\n\nadb shell rm -v /mnt/sdcard/Download/spiderapi.apk\n\n\n1\n\n\n\n# adb shell mkdir\n\n创建目录：\n\nadb shell mkdir /sdcard/tmp\n\n\n1\n\n\n创建目录并设置权限：\n\nadb shell mkdir -m 777 /sdcard/tmp\n\n\n1\n\n\n根据需要自动创建父目录：\n\nadb shell mkdir -p /sdcard/tmp/sub1/sub2\n\n\n1\n\n\n\n# adb shell touch\n\n创建一个空文件，或者更新文件的访问和修改时间戳：\n\nadb shell touch /mnt/sdcard/Download/spiderapi.txt\n\n\n1\n\n\n\n# adb shell pwd\n\n打印当前工作目录路径：\n\nadb shell pwd\n\n\n1\n\n\n\n# adb shell cp\n\n复制（copy）文件和目录：\n\nadb shell cp /sdcard/spiderapi.txt /sdcard/spiderbox.txt\n\n\n1\n\n\n\n# adb shell mv\n\n将文件或目录从一个位置移动（move）到另一个位置：\n\nadb shell mv /mnt/sdcard/Download/spiderapi.txt /mnt/sdcard/DCIM/spiderapi.txt\n\n\n1\n\n\n强制（force）执行移动操作，如果目标路径已经存在文件，它将被覆盖：\n\nadb shell mv -f /mnt/sdcard/Download/spiderapi.txt /mnt/sdcard/DCIM/spiderapi.txt\n\n\n1\n\n\n交互式（interactive），可以在移动文件时进行确认：\n\nadb shell mv -i /mnt/sdcard/Download/spiderapi.txt /mnt/sdcard/DCIM/spiderapi.txt\n\n\n1\n\n\n在移动文件时不要覆盖（No clobber）目标文件：\n\nadb shell mv -n /mnt/sdcard/Download/spiderapi.txt /mnt/sdcard/DCIM/spiderapi.txt\n\n\n1\n\n\n\n# 网络相关\n\n\n# adb shell netstat\n\n显示网络信息（默认 netstat -tuwx）：\n\nadb shell netstat\n\n\n1\n\n\n路由表（routing）：\n\nadb shell netstat -r\n\n\n1\n\n\n所有（all）的网络连接（包括正在监听的和已建立的连接）：\n\nadb shell netstat -a\n\n\n1\n\n\n所有正在监听（listening）的网络连接：\n\nadb shell netstat -l\n\n\n1\n\n\n所有正在进行的 TCP 连接：\n\nadb shell netstat -t\n\n\n1\n\n\n所有正在进行的 UDP 连接：\n\nadb shell netstat -u\n\n\n1\n\n\n所有正在进行的 Raw 连接：\n\nadb shell netstat -w\n\n\n1\n\n\n所有正在进行的 unix 连接：\n\nadb shell netstat -x\n\n\n1\n\n\n显示扩展（extended）网络统计信息。这个命令的输出通常包括更多详细的网络统计数据，例如接收和发送的数据包数量、错误数量、丢失数量等:\n\nadb shell netstat -e\n\n\n1\n\n\n显示地址和端口时禁用主机名解析：\n\nadb shell netstat -n\n\n\n1\n\n\n显示与每个网络连接关联的进程（PID）信息，即显示哪个进程创建了这些连接：\n\nadb shell netstat -p\n\n\n1\n\n\n\n# adb shell ping\n\nping（Packet Internet Groper）是一种网络管理实用程序，用于测试和诊断网络连接问题：\n\nadb shell ping\n\n\n1\n\n\n指定发送 4 个 ICMP Echo 请求，并等待回应：\n\nadb shell ping -c 4\n\n\n1\n\n\n指定等待接收时间，以毫秒为单位：\n\nadb shell ping -W 200 127.0.0.1\n\n\n1\n\n\n设置发送每个 ICMP Echo 请求的间隔时间，以秒为单位，默认间隔为 1 秒：\n\nadb shell ping -i 2 127.0.0.1\n\n\n1\n\n\n\n# adb shell netcfg/ifconfig\n\n显示网络配置信息，在 Android M 或者更高版本中可能不存在此命令：/system/bin/sh: netcfg: not found\n\nadb shell netcfg\n\n\n1\n\n\n显示或配置网络接口：\n\nadb shell ifconfig\n\n\n1\n\n\n\n# adb shell ip\n\n获取 wlan0（Wi-Fi）IP 地址：\n\nadb shell ip addr show wlan0\n\n\n1\n\n\n查看路由表（route）：\n\nadb shell ip route\n\n\n1\n\n\n显示 ARP 缓存或邻居表的信息，ARP（Address Resolution Protocol）用于将 IP 地址解析为物理 MAC 地址，以便设备在本地网络上进行通信，邻居表包含了与本地设备通信的其他设备的 IP 地址和相应的 MAC 地址：\n\nadb shell ip neighbour\n\n\n1\n\n\n\n# 日志相关\n\n\n# adb logcat\n\n打印日志信息：\n\nadb logcat\n\n\n1\n\n\n最低优先级，捕获并显示所有日志消息（verbose）：\n\nadb logcat *:V\n\n\n1\n\n\n仅显示 Debug 级别日志：\n\nadb logcat *:D\n\n\n1\n\n\n仅显示 Info 级别日志：\n\nadb logcat *:I\n\n\n1\n\n\n仅显示 Warning 级别日志：\n\nadb logcat *:W\n\n\n1\n\n\n仅显示 Error 级别日志：\n\nadb logcat *:E\n\n\n1\n\n\n仅显示 Fatal 级别日志：\n\nadb logcat *:F\n\n\n1\n\n\n最高优先级，不打印任何内容（silent）：\n\nadb logcat *:S\n\n\n1\n\n\n查看主要的系统日志，包括应用程序和系统组件的日志消息，这是默认的日志缓冲区：\n\nadb logcat -b main\n\n\n1\n\n\n查看无线电（Radio）日志，其中包括与移动网络通信相关的信息，如电话、数据连接和基站信息：\n\nadb logcat -b radio\n\n\n1\n\n\n查看事件（Events）日志，其中包括系统事件、广播事件和其他事件的日志消息：\n\nadb logcat -b events\n\n\n1\n\n\n查看系统日志（system），包括系统服务和组件的日志消息：\n\nadb logcat -b system\n\n\n1\n\n\n清除整个日志并退出：\n\nadb logcat -c\n\n\n1\n\n\n一次性获取系统日志，一旦显示完毕，就不会继续捕获和显示后续的日志消息：\n\nadb logcat -d\n\n\n1\n\n\n将日志输出到文件中：\n\nadb logcat -f spiderapi.log\n\n\n1\n\n\n打印指定日志缓冲区的大小并退出：\n\nadb logcat -g\n\n\n1\n\n\n设置日志的最大显示数量：\n\nadb logcat -n <count>\n\n\n1\n\n\n按照每千字节输出日志：\n\nadb logcat -r <kbytes>\n\n\n1\n\n\n设置输出日志的标签，只显示该标签的日志：\n\nadb logcat -s\n\n\n1\n\n\n日志输出格式：日志等级/tag标签(进程ID): 日志信息\n\nadb logcat -v brief\n\n\n1\n\n\n日志输出格式：时间 日志等级/tag标签(进程ID): 日志信息\n\nadb logcat -v time\n\n\n1\n\n\n日志输出格式：时间 进程ID 线程ID 日志等级 tag标签: 日志信息\n\nadb logcat -v threadtime\n\n\n1\n\n\n日志输出格式：日志等级(进程ID): 日志信息\n\nadb logcat -v process\n\n\n1\n\n\n日志输出格式：日志等级/tag标签: 日志信息\n\nadb logcat -v tag\n\n\n1\n\n\n日志输出格式：日志等级(进程ID:线程ID) 日志信息\n\nadb logcat -v thread\n\n\n1\n\n\n日志输出格式：日志信息\n\nadb logcat -v raw\n\n\n1\n\n\n日志输出格式：时间 日志等级/tag标签(进程ID)：\\n日志信息\n\nadb logcat -v long\n\n\n1\n\n\n\n# adb shell dumpsys\n\n获取系统服务的信息和状态：\n\nadb shell dumpsys\n\n\n1\n\n\n列出设备上所有可用的系统服务和服务标识（Service Identifiers）：\n\nadb shell dumpsys -l\n\n\n1\n\n\n查看活动管理器信息：\n\nadb shell dumpsys activity\n\n\n1\n\n\n查看电池状态信息：\n\nadb shell dumpsys battery\n\n\n1\n\n\n查看窗口管理器信息：\n\nadb shell dumpsys window\n\n\n1\n\n\n查看网络状态信息：\n\nadb shell dumpsys netstats\n\n\n1\n\n\n查看传感器信息：\n\nadb shell dumpsys sensorservice\n\n\n1\n\n\n\n# adb shell dumpstate\n\ndumpstate 命令不适用于 Android 10\n\n在 Android 设备上生成设备状态报告，报告为 txt 文件，这个命令会收集设备的各种信息和日志，包括系统日志、dumpsys 输出、活动管理器信息、内存信息、CPU 使用情况、网络状态等，并将它们保存到一个文件中以供后续分析和诊断使用：\n\nadb shell dumpstate\n\n\n1\n\n\n与 dumpstate 命令类似，生成一个包含丰富信息的 bug 报告，报告为 zip 文件，但要比 dumpstate 更详细，适合用于深入的故障排查和问题分析：\n\nadb bugreport\n\n\n1\n\n\n\n# 截图录屏\n\n\n# adb shell screencap\n\n截屏并保存到文件：\n\nadb shell screencap /mnt/sdcard/Download/spiderapi.png\n\n\n1\n\n\n\n# adb shell screenrecord\n\n录制屏幕并保存到文件：\n\nadb shell screenrecord /sdcard/spiderapi.mp4\n\n\n1\n\n\n指定录制时长，例如 10 秒：\n\nadb shell screenrecord --time-limit 10 /sdcard/video.mp4\n\n\n1\n\n\n指定录制的分辨率，默认值为设备的主显示分辨率（如果支持），如果不支持，则为 1280x720，为了获得最佳效果，请使用 AVC 编码器支持的大小：\n\nadb shell screenrecord --size 720x1280 /sdcard/video.mp4\n\n\n1\n\n\n指定视频比特率，例如 4Mbps，单位为每秒比特数，值可以指定为位或兆位，例如 4000000 相当于 4Mbps，默认 20Mbps：\n\nadb shell screenrecord --bit-rate 4000000 /sdcard/video.mp4\n\n\n1\n\n\n录制时显示触摸事件（触摸点会在录制的视频中可见）：\n\nadb shell screenrecord --show-touch /sdcard/video.mp4\n\n\n1\n\n\n输出的视频旋转 90°，此功能是实验性的：\n\nadb shell screenrecord --rotate /sdcard/video.mp4\n\n\n1\n\n\n添加额外的信息，例如覆盖时间戳，这在捕捉的视频中有助于说明错误：\n\nadb shell screenrecord --bugreport /mnt/sdcard/Download/test.mp4\n\n\n1\n\n\n设置最长录制时间，以秒为单位，默认值/最大值为 180：\n\nadb shell screenrecord --time-limit=120 /mnt/sdcard/Download/test.mp4\n\n\n1\n\n\n在命令行屏幕上显示日志信息，如果不设置此选项，则实用程序在运行时不会显示任何信息：\n\nadb shell screenrecord --verbose /mnt/sdcard/Download/test.mp4\n\n\n1\n\n\n\n# 系统相关\n\n\n# adb root\n\n使用 root 权限重新启动 adbd：\n\nadb root\n\n\n1\n\n\n在没有 root 权限的情况下重新启动 adbd：\n\nadb unroot\n\n\n1\n\n\n\n# adb sideload\n\n通过 ADB 将固件或刷机包（通常是更新固件或操作系统的软件包）传输到 Android 设备并安装它：\n\nadb sideload /mnt/sdcard/Download/ota.zip\n\n\n1\n\n\n\n# adb shell ps\n\n列出当前正在运行的进程的信息：\n\nadb shell ps\n\n\n1\n\n\n列出所有正在运行的进程的信息：不仅仅是用户进程，包括系统服务、应用程序以及系统组件：\n\nadb shell ps -A\n\n\n1\n\n\n通过 PID 查看特定进程的详细信息：\n\nadb shell ps -p 1256\n\n\n1\n\n\n列出当前正在运行的所有线程的信息，而不仅仅是进程：\n\nadb shell ps -t\n\n\n1\n\n\n\n# adb shell top\n\n实时查看当前运行的进程的资源使用情况，包括 CPU 占用率、内存使用、进程名称等信息：\n\nadb shell top\n\n\n1\n\n\n实时查看当前运行的线程的资源使用情况，包括 CPU 占用率、内存使用、线程名称等信息：\n\nadb shell top -H\n\n\n1\n\n\n实时查看当前运行的进程的资源使用情况，并按照 CPU 占用率（%CPU）、内存占用率（%MEM）和累计运行时间（TIME+）进行排序：\n\nadb shell top -o %CPU,%MEM,TIME+\n\n\n1\n\n\n查看当前运行的前 50 个占用 CPU 资源最多的进程的信息：\n\nadb shell top -m 50\n\n\n1\n\n\n\n# adb shell getprop\n\n获取 Android 设备上的系统属性信息，Android 系统通过属性来存储和检索各种系统配置和状态信息，例如设备型号、Android 版本、屏幕分辨率、构建信息等：\n\nadb shell getprop\n\n\n1\n\n\n显示属性类型而不是值：\n\nadb shell getprop -T\n\n\n1\n\n\n获取 SIM 卡运营商：\n\nadb shell getprop gsm.sim.operator.alpha\n\n\n1\n\n\n获取设备 IEMI：\n\nadb shell getprop ro.ril.oem.imei\n\n\n1\n\n\n\n# adb shell setprop\n\n设置系统属性的值：\n\nadb shell setprop\n\n\n1\n",normalizedContent:"提示\n\nadb（android debug bridge）是一个命令行工具，可与模拟器或连接的 android 设备进行通信，可以下载 sdk platform tools 获取 adb 工具。\n\n\n# adb debugging\n\n\n# adb kill-server\n\n关闭 adb 服务：\n\nadb kill-server\n\n\n1\n\n\n\n# adb start-server\n\n启动 adb 服务：\n\nadb start-server\n\n\n1\n\n\n\n# adb devices\n\n查看连接设备：\n\nadb devices\n\n\n1\n\n\n查看连接设备，-l 表示长输出：\n\nadb devices -l\n\n\n1\n\n\n\n# adb forward\n\n列出所有 socket 连接：\n\nadb forward --list\n\n\n1\n\n\n设置端口转发，将计算机端口 6123 转发到 android 设备端口 7123：\n\nadb forward tcp:6123 tcp:7123\n# adb forward [远程端协议：端口号] [设备端协议：端口号]\n\n\n1\n2\n\n\n\n# 无线连接\n\n\n# adb connect\n\nstep 1：在电脑端指定 android 设备的 tcp/ip 端口，断开 usb 与 android 设备的连接：\n\nadb tcpip 5555\n\n\n1\n\n\nstep 2：在“设置”>“关于手机”>“状态信息”>“ip 地址”中找到 android 设备的 ip 地址，通过 wi-fi 连接到设备：\n\nadb connect 192.168.1.184:5555\n\n\n1\n\n\nstep 3：确认已通过 wi-fi 连接到 android 设备：\n\nadb devices\n# list of devices attached\n# 192.168.1.184:5555 device\n\n\n1\n2\n3\n\n\n\n# adb usb\n\n在usb模式下重新启动\n\nadb usb\n\n\n1\n\n\n\n# apk 包管理\n\n\n# adb install\n\n将单个 apk 推送到设备并安装：\n\nadb install spiderapi.cn.apk\n\n\n1\n\n\n将单个软件的多个 apk 推送到设备，然后当作一整个 apk 进行安装：\n\nadb install-multiple spiderapi.cn.apk spiderapi.cn.arm64.apk\n\n\n1\n\n\n将单个软件的多个 apk 推送到设备，然后当作一整个 apk 以原子方式进行安装：\n\nadb install-multi-package spiderapi.cn.apk spiderapi.cn.arm64.apk\n\n\n1\n\n\n替换现有应用程序，重新安装现有应用程序，保留其数据：\n\nadb install -r spiderapi.cn.apk\n\n\n1\n\n\n允许测试包：\n\nadb install -t spiderapi.cn.apk\n\n\n1\n\n\n允许 apk 进行降级安装，正常是不被允许：\n\nadb install -d spiderapi.cn.apk\n\n\n1\n\n\n为应用程序授予所有运行时的权限：\n\nadb install -g spiderapi.cn.apk\n\n\n1\n\n\n使应用程序作为临时安装应用程序安装：\n\nadb install --instant spiderapi.cn.apk\n\n\n1\n\n\n使用快速部署：\n\nadb install --fastdeploy spiderapi.cn.apk\n\n\n1\n\n\n允许将 apk 推送到设备并作为单独的步骤调用包管理器：\n\nadb install --no-streaming spiderapi.cn.apk\n\n\n1\n\n\n\n# adb uninstall\n\n卸载 app：\n\nadb uninstall spiderapi.cn.apk\n\n\n1\n\n\n卸载 app 后保留数据和缓存目录：\n\nadb uninstall -k spiderapi.cn.apk\n\n\n1\n\n\n\n# adb shell pm list packages\n\n列出所有应用程序，包括系统应用和用户安装的应用：\n\nadb shell pm list packages\n\n\n1\n\n\n列出所有应用程序包的包名以及其对应的文件路径（file）：\n\nadb shell pm list packages -f\n\n\n1\n\n\n列出所有（all）应用程序的详细信息，包括系统应用和用户安装的应用，但不包括 apxes（android pony express）：\n\nadb shell pm list packages -a\n\n\n1\n\n\n仅列出 apex 包：\n\nadb shell pm list packages --apex-only\n\n\n1\n\n\n列出已经被禁用的（disabled）应用程序包：\n\nadb shell pm list packages -d\n\n\n1\n\n\n列出已经被启用的（enabled）应用程序包：\n\nadb shell pm list packages -e\n\n\n1\n\n\n列出系统自带的（system）应用程序包：\n\nadb shell pm list packages -s\n\n\n1\n\n\n列出第三方（third party）应用程序包：\n\nadb shell pm list packages -3\n\n\n1\n\n\n列出应用程序包的安装器信息（installer）：\n\nadb shell pm list packages -i\n\n\n1\n\n\n列出被忽略（ignored）（用于与旧版本的兼容）的应用程序包：\n\nadb shell pm list packages -l\n\n\n1\n\n\n列出应用程序包的 uid：\n\nadb shell pm list packages -u\n\n\n1\n\n\n仅列出指定 uid 的包：\n\nadb shell pm list packages --uid uid\n\n\n1\n\n\n列出未安装的（uninstalled）应用程序包：\n\nadb shell pm list packages -u\n\n\n1\n\n\n显示版本代码：\n\nadb shell pm list packages --show-versioncode\n\n\n1\n\n\n仅列出属于指定用户的包：\n\nadb shell pm list packages --user user_id\n\n\n1\n\n\n\n# adb shell pm path\n\n查看某个安装包的路径：\n\nadb shell pm path com.spiderapi.cn\n\n\n1\n\n\n\n# adb shell pm clear\n\n删除与包相关的所有数据（app 的数据和缓存）:\n\nadb shell pm clear com.spiderapi.cn\n\n\n1\n\n\n\n# 文件管理\n\n\n# adb pull\n\n从 android 设备复制文件、目录到 pc 端：\n\nadb pull /mnt/sdcard/download/spiderapi.apk spiderapi_pc.apk\n\n\n1\n\n\n- a 参数保持了文件的时间属性（不改变文件的“修改时间”等信息）\n\nadb pull -a /mnt/sdcard/download/spiderapi.apk spiderapi_pc.apk\n\n\n1\n\n\n\n# adb push\n\n从 pc 端复制文件、目录到 android 设备：\n\nadb push spiderapi_pc.apk /mnt/sdcard/download/spiderapi.apk\n\n\n1\n\n\n对 android 设备上的文件进行更新，只有当 pc 端的文件日期比设备端的新，才会进行推送：\n\nadb push --sync spiderapi_pc.apk /mnt/sdcard/download/spiderapi.apk\n\n\n1\n\n\n\n# adb shell ls\n\n列出文件和目录：\n\nadb shell ls /system/bin\n\n\n1\n\n\n列出所有文件，包括隐藏文件（.hidden）：\n\nadb shell ls -a\n\n\n1\n\n\n列出目录，而不是内容：\n\nadb shell ls -d\n\n\n1\n\n\n子目录中的递归列表：\n\nadb shell ls -r /mnt/sdcard/download\n\n\n1\n\n\n\n# adb shell cd\n\n进入指定目录：\n\nadb shell cd /mnt/sdcard/download\n\n\n1\n\n\n\n# adb shell rm\n\n删除（remove）文件：\n\nadb shell rm /mnt/sdcard/download/spiderapi.apk\n\n\n1\n\n\n强制（force）删除文件，即便文件不存在，也不会报错：\n\nadb shell rm -f /mnt/sdcard/download/spiderapi.apk\n\n\n1\n\n\n交互式（interactive），会提示确认删除：\n\nadb shell rm -i /mnt/sdcard/download/spiderapi.apk\n\n\n1\n\n\n递归（recursive）删除目录内容：\n\nadb shell rm -rr /mnt/sdcard/download\n\n\n1\n\n\n显示删除的文件或目录的名称、进展等信息（verbose）：\n\nadb shell rm -v /mnt/sdcard/download/spiderapi.apk\n\n\n1\n\n\n\n# adb shell mkdir\n\n创建目录：\n\nadb shell mkdir /sdcard/tmp\n\n\n1\n\n\n创建目录并设置权限：\n\nadb shell mkdir -m 777 /sdcard/tmp\n\n\n1\n\n\n根据需要自动创建父目录：\n\nadb shell mkdir -p /sdcard/tmp/sub1/sub2\n\n\n1\n\n\n\n# adb shell touch\n\n创建一个空文件，或者更新文件的访问和修改时间戳：\n\nadb shell touch /mnt/sdcard/download/spiderapi.txt\n\n\n1\n\n\n\n# adb shell pwd\n\n打印当前工作目录路径：\n\nadb shell pwd\n\n\n1\n\n\n\n# adb shell cp\n\n复制（copy）文件和目录：\n\nadb shell cp /sdcard/spiderapi.txt /sdcard/spiderbox.txt\n\n\n1\n\n\n\n# adb shell mv\n\n将文件或目录从一个位置移动（move）到另一个位置：\n\nadb shell mv /mnt/sdcard/download/spiderapi.txt /mnt/sdcard/dcim/spiderapi.txt\n\n\n1\n\n\n强制（force）执行移动操作，如果目标路径已经存在文件，它将被覆盖：\n\nadb shell mv -f /mnt/sdcard/download/spiderapi.txt /mnt/sdcard/dcim/spiderapi.txt\n\n\n1\n\n\n交互式（interactive），可以在移动文件时进行确认：\n\nadb shell mv -i /mnt/sdcard/download/spiderapi.txt /mnt/sdcard/dcim/spiderapi.txt\n\n\n1\n\n\n在移动文件时不要覆盖（no clobber）目标文件：\n\nadb shell mv -n /mnt/sdcard/download/spiderapi.txt /mnt/sdcard/dcim/spiderapi.txt\n\n\n1\n\n\n\n# 网络相关\n\n\n# adb shell netstat\n\n显示网络信息（默认 netstat -tuwx）：\n\nadb shell netstat\n\n\n1\n\n\n路由表（routing）：\n\nadb shell netstat -r\n\n\n1\n\n\n所有（all）的网络连接（包括正在监听的和已建立的连接）：\n\nadb shell netstat -a\n\n\n1\n\n\n所有正在监听（listening）的网络连接：\n\nadb shell netstat -l\n\n\n1\n\n\n所有正在进行的 tcp 连接：\n\nadb shell netstat -t\n\n\n1\n\n\n所有正在进行的 udp 连接：\n\nadb shell netstat -u\n\n\n1\n\n\n所有正在进行的 raw 连接：\n\nadb shell netstat -w\n\n\n1\n\n\n所有正在进行的 unix 连接：\n\nadb shell netstat -x\n\n\n1\n\n\n显示扩展（extended）网络统计信息。这个命令的输出通常包括更多详细的网络统计数据，例如接收和发送的数据包数量、错误数量、丢失数量等:\n\nadb shell netstat -e\n\n\n1\n\n\n显示地址和端口时禁用主机名解析：\n\nadb shell netstat -n\n\n\n1\n\n\n显示与每个网络连接关联的进程（pid）信息，即显示哪个进程创建了这些连接：\n\nadb shell netstat -p\n\n\n1\n\n\n\n# adb shell ping\n\nping（packet internet groper）是一种网络管理实用程序，用于测试和诊断网络连接问题：\n\nadb shell ping\n\n\n1\n\n\n指定发送 4 个 icmp echo 请求，并等待回应：\n\nadb shell ping -c 4\n\n\n1\n\n\n指定等待接收时间，以毫秒为单位：\n\nadb shell ping -w 200 127.0.0.1\n\n\n1\n\n\n设置发送每个 icmp echo 请求的间隔时间，以秒为单位，默认间隔为 1 秒：\n\nadb shell ping -i 2 127.0.0.1\n\n\n1\n\n\n\n# adb shell netcfg/ifconfig\n\n显示网络配置信息，在 android m 或者更高版本中可能不存在此命令：/system/bin/sh: netcfg: not found\n\nadb shell netcfg\n\n\n1\n\n\n显示或配置网络接口：\n\nadb shell ifconfig\n\n\n1\n\n\n\n# adb shell ip\n\n获取 wlan0（wi-fi）ip 地址：\n\nadb shell ip addr show wlan0\n\n\n1\n\n\n查看路由表（route）：\n\nadb shell ip route\n\n\n1\n\n\n显示 arp 缓存或邻居表的信息，arp（address resolution protocol）用于将 ip 地址解析为物理 mac 地址，以便设备在本地网络上进行通信，邻居表包含了与本地设备通信的其他设备的 ip 地址和相应的 mac 地址：\n\nadb shell ip neighbour\n\n\n1\n\n\n\n# 日志相关\n\n\n# adb logcat\n\n打印日志信息：\n\nadb logcat\n\n\n1\n\n\n最低优先级，捕获并显示所有日志消息（verbose）：\n\nadb logcat *:v\n\n\n1\n\n\n仅显示 debug 级别日志：\n\nadb logcat *:d\n\n\n1\n\n\n仅显示 info 级别日志：\n\nadb logcat *:i\n\n\n1\n\n\n仅显示 warning 级别日志：\n\nadb logcat *:w\n\n\n1\n\n\n仅显示 error 级别日志：\n\nadb logcat *:e\n\n\n1\n\n\n仅显示 fatal 级别日志：\n\nadb logcat *:f\n\n\n1\n\n\n最高优先级，不打印任何内容（silent）：\n\nadb logcat *:s\n\n\n1\n\n\n查看主要的系统日志，包括应用程序和系统组件的日志消息，这是默认的日志缓冲区：\n\nadb logcat -b main\n\n\n1\n\n\n查看无线电（radio）日志，其中包括与移动网络通信相关的信息，如电话、数据连接和基站信息：\n\nadb logcat -b radio\n\n\n1\n\n\n查看事件（events）日志，其中包括系统事件、广播事件和其他事件的日志消息：\n\nadb logcat -b events\n\n\n1\n\n\n查看系统日志（system），包括系统服务和组件的日志消息：\n\nadb logcat -b system\n\n\n1\n\n\n清除整个日志并退出：\n\nadb logcat -c\n\n\n1\n\n\n一次性获取系统日志，一旦显示完毕，就不会继续捕获和显示后续的日志消息：\n\nadb logcat -d\n\n\n1\n\n\n将日志输出到文件中：\n\nadb logcat -f spiderapi.log\n\n\n1\n\n\n打印指定日志缓冲区的大小并退出：\n\nadb logcat -g\n\n\n1\n\n\n设置日志的最大显示数量：\n\nadb logcat -n <count>\n\n\n1\n\n\n按照每千字节输出日志：\n\nadb logcat -r <kbytes>\n\n\n1\n\n\n设置输出日志的标签，只显示该标签的日志：\n\nadb logcat -s\n\n\n1\n\n\n日志输出格式：日志等级/tag标签(进程id): 日志信息\n\nadb logcat -v brief\n\n\n1\n\n\n日志输出格式：时间 日志等级/tag标签(进程id): 日志信息\n\nadb logcat -v time\n\n\n1\n\n\n日志输出格式：时间 进程id 线程id 日志等级 tag标签: 日志信息\n\nadb logcat -v threadtime\n\n\n1\n\n\n日志输出格式：日志等级(进程id): 日志信息\n\nadb logcat -v process\n\n\n1\n\n\n日志输出格式：日志等级/tag标签: 日志信息\n\nadb logcat -v tag\n\n\n1\n\n\n日志输出格式：日志等级(进程id:线程id) 日志信息\n\nadb logcat -v thread\n\n\n1\n\n\n日志输出格式：日志信息\n\nadb logcat -v raw\n\n\n1\n\n\n日志输出格式：时间 日志等级/tag标签(进程id)：\\n日志信息\n\nadb logcat -v long\n\n\n1\n\n\n\n# adb shell dumpsys\n\n获取系统服务的信息和状态：\n\nadb shell dumpsys\n\n\n1\n\n\n列出设备上所有可用的系统服务和服务标识（service identifiers）：\n\nadb shell dumpsys -l\n\n\n1\n\n\n查看活动管理器信息：\n\nadb shell dumpsys activity\n\n\n1\n\n\n查看电池状态信息：\n\nadb shell dumpsys battery\n\n\n1\n\n\n查看窗口管理器信息：\n\nadb shell dumpsys window\n\n\n1\n\n\n查看网络状态信息：\n\nadb shell dumpsys netstats\n\n\n1\n\n\n查看传感器信息：\n\nadb shell dumpsys sensorservice\n\n\n1\n\n\n\n# adb shell dumpstate\n\ndumpstate 命令不适用于 android 10\n\n在 android 设备上生成设备状态报告，报告为 txt 文件，这个命令会收集设备的各种信息和日志，包括系统日志、dumpsys 输出、活动管理器信息、内存信息、cpu 使用情况、网络状态等，并将它们保存到一个文件中以供后续分析和诊断使用：\n\nadb shell dumpstate\n\n\n1\n\n\n与 dumpstate 命令类似，生成一个包含丰富信息的 bug 报告，报告为 zip 文件，但要比 dumpstate 更详细，适合用于深入的故障排查和问题分析：\n\nadb bugreport\n\n\n1\n\n\n\n# 截图录屏\n\n\n# adb shell screencap\n\n截屏并保存到文件：\n\nadb shell screencap /mnt/sdcard/download/spiderapi.png\n\n\n1\n\n\n\n# adb shell screenrecord\n\n录制屏幕并保存到文件：\n\nadb shell screenrecord /sdcard/spiderapi.mp4\n\n\n1\n\n\n指定录制时长，例如 10 秒：\n\nadb shell screenrecord --time-limit 10 /sdcard/video.mp4\n\n\n1\n\n\n指定录制的分辨率，默认值为设备的主显示分辨率（如果支持），如果不支持，则为 1280x720，为了获得最佳效果，请使用 avc 编码器支持的大小：\n\nadb shell screenrecord --size 720x1280 /sdcard/video.mp4\n\n\n1\n\n\n指定视频比特率，例如 4mbps，单位为每秒比特数，值可以指定为位或兆位，例如 4000000 相当于 4mbps，默认 20mbps：\n\nadb shell screenrecord --bit-rate 4000000 /sdcard/video.mp4\n\n\n1\n\n\n录制时显示触摸事件（触摸点会在录制的视频中可见）：\n\nadb shell screenrecord --show-touch /sdcard/video.mp4\n\n\n1\n\n\n输出的视频旋转 90°，此功能是实验性的：\n\nadb shell screenrecord --rotate /sdcard/video.mp4\n\n\n1\n\n\n添加额外的信息，例如覆盖时间戳，这在捕捉的视频中有助于说明错误：\n\nadb shell screenrecord --bugreport /mnt/sdcard/download/test.mp4\n\n\n1\n\n\n设置最长录制时间，以秒为单位，默认值/最大值为 180：\n\nadb shell screenrecord --time-limit=120 /mnt/sdcard/download/test.mp4\n\n\n1\n\n\n在命令行屏幕上显示日志信息，如果不设置此选项，则实用程序在运行时不会显示任何信息：\n\nadb shell screenrecord --verbose /mnt/sdcard/download/test.mp4\n\n\n1\n\n\n\n# 系统相关\n\n\n# adb root\n\n使用 root 权限重新启动 adbd：\n\nadb root\n\n\n1\n\n\n在没有 root 权限的情况下重新启动 adbd：\n\nadb unroot\n\n\n1\n\n\n\n# adb sideload\n\n通过 adb 将固件或刷机包（通常是更新固件或操作系统的软件包）传输到 android 设备并安装它：\n\nadb sideload /mnt/sdcard/download/ota.zip\n\n\n1\n\n\n\n# adb shell ps\n\n列出当前正在运行的进程的信息：\n\nadb shell ps\n\n\n1\n\n\n列出所有正在运行的进程的信息：不仅仅是用户进程，包括系统服务、应用程序以及系统组件：\n\nadb shell ps -a\n\n\n1\n\n\n通过 pid 查看特定进程的详细信息：\n\nadb shell ps -p 1256\n\n\n1\n\n\n列出当前正在运行的所有线程的信息，而不仅仅是进程：\n\nadb shell ps -t\n\n\n1\n\n\n\n# adb shell top\n\n实时查看当前运行的进程的资源使用情况，包括 cpu 占用率、内存使用、进程名称等信息：\n\nadb shell top\n\n\n1\n\n\n实时查看当前运行的线程的资源使用情况，包括 cpu 占用率、内存使用、线程名称等信息：\n\nadb shell top -h\n\n\n1\n\n\n实时查看当前运行的进程的资源使用情况，并按照 cpu 占用率（%cpu）、内存占用率（%mem）和累计运行时间（time+）进行排序：\n\nadb shell top -o %cpu,%mem,time+\n\n\n1\n\n\n查看当前运行的前 50 个占用 cpu 资源最多的进程的信息：\n\nadb shell top -m 50\n\n\n1\n\n\n\n# adb shell getprop\n\n获取 android 设备上的系统属性信息，android 系统通过属性来存储和检索各种系统配置和状态信息，例如设备型号、android 版本、屏幕分辨率、构建信息等：\n\nadb shell getprop\n\n\n1\n\n\n显示属性类型而不是值：\n\nadb shell getprop -t\n\n\n1\n\n\n获取 sim 卡运营商：\n\nadb shell getprop gsm.sim.operator.alpha\n\n\n1\n\n\n获取设备 iemi：\n\nadb shell getprop ro.ril.oem.imei\n\n\n1\n\n\n\n# adb shell setprop\n\n设置系统属性的值：\n\nadb shell setprop\n\n\n1\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Dalvik 指令集",frontmatter:{title:"Dalvik 指令集",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/dalvik",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/02.%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2/04.Dalvik%20%E6%8C%87%E4%BB%A4%E9%9B%86.html",relativePath:"03.辅助查询/02.命令查询/04.Dalvik 指令集.md",key:"v-232a20b1",path:"/pages/dalvik/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"ARM 指令集",frontmatter:{title:"ARM 指令集",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/arm",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/02.%E5%91%BD%E4%BB%A4%E6%9F%A5%E8%AF%A2/03.ARM%20%E6%8C%87%E4%BB%A4%E9%9B%86.html",relativePath:"03.辅助查询/02.命令查询/03.ARM 指令集.md",key:"v-48a92fcb",path:"/pages/arm/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"CreepJS",frontmatter:{title:"CreepJS",date:"2023-11-10T10:30:26.000Z",permalink:"/pages/creepjs/",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/03.%E6%8C%87%E7%BA%B9%E4%BF%A1%E6%81%AF/01.CreepJS.html",relativePath:"03.辅助查询/03.指纹信息/01.CreepJS.md",key:"v-78f3d0bc",path:"/pages/creepjs/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Fingerprint2",frontmatter:{title:"Fingerprint2",date:"2023-11-10T11:37:28.000Z",permalink:"/pages/fingerprint2/",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/03.%E6%8C%87%E7%BA%B9%E4%BF%A1%E6%81%AF/02.Fingerprint2.html",relativePath:"03.辅助查询/03.指纹信息/02.Fingerprint2.md",key:"v-12e319cc",path:"/pages/fingerprint2/",headersStr:null,content:"Fingerprint2\n\nFingerprintJS 是一个开源的客户端浏览器指纹识别库，它查询浏览器属性并从中计算哈希访问者标识符。与 cookie 和本地存储不同，指纹在隐身/私密模式下甚至在浏览器数据被清除时也保持不变。本页使用的是 V2 版本。\n\n访问 Github\n\n\n开始检测 复制指纹\nuserAgent: webdriver: language: colorDepth: deviceMemory: pixelRatio: hardwareConcurrency: screenResolution: timezone: sessionStorage: localStorage: indexedDb: cpuClass: platform: plugins: canvas: webgl: webglVendorAndRenderer: fonts: fontsFlash: audio: enumerateDevices:\n指纹信息释义\n\n选项                          说明\nuserAgent                   UA 信息\nwebdriver                   网页内驱动软件\nlanguage                    语言种类\ncolorDepth                  目标设备或缓冲器上的调色板的比特深度\ndeviceMemory                设备内存\npixelRatio                  设备像素比\nhardwareConcurrency         可用于运行在用户的计算机上的线程的逻辑处理器的数量\nscreenResolution            当前屏幕的分辨率\navailableScreenResolution   当前屏幕的可用分辨率\ntimezoneOffset              本地时间与 GMT 时间之间的时间差，以分钟为单位\ntimezone                    时区\nsessionStorage              是否具有会话存储\nlocalStorage                是否具有本地存储\nindexedDb                   是否具有索引 DB\naddBehavior                 IE 是否指定 AddBehavior\nopenDatabase                是否有打开的 DB\ncpuClass                    浏览器系统的 CPU 等级\nplatform                    运行浏览器的操作系统和(或)硬件平台\ndoNotTrack                  “不跟踪”设置，是否请求网站和广告商不跟踪用户\nplugins                     浏览器的插件信息\ncanvas                      使用 Canvas 绘图\nwebgl                       WebGL 指纹信息\nwebglVendorAndRenderer      具有大量熵的 WebGL 指纹的子集\nadBlock                     是否安装 AdBlock\nhasLiedLanguages            用户是否篡改了语言\nhasLiedResolution           用户是否篡改了屏幕分辨率\nhasLiedOs                   用户是否篡改了操作系统\nhasLiedBrowser              用户是否篡改了浏览器\ntouchSupport                触摸屏检测\nfonts                       字体列表\nfontsFlash                  Flash 字体列表\naudio                       音频处理\nenumerateDevices            多媒体输入输出设备信息\n\n\n\nKEY   VALUE",normalizedContent:"fingerprint2\n\nfingerprintjs 是一个开源的客户端浏览器指纹识别库，它查询浏览器属性并从中计算哈希访问者标识符。与 cookie 和本地存储不同，指纹在隐身/私密模式下甚至在浏览器数据被清除时也保持不变。本页使用的是 v2 版本。\n\n访问 github\n\n\n开始检测 复制指纹\nuseragent: webdriver: language: colordepth: devicememory: pixelratio: hardwareconcurrency: screenresolution: timezone: sessionstorage: localstorage: indexeddb: cpuclass: platform: plugins: canvas: webgl: webglvendorandrenderer: fonts: fontsflash: audio: enumeratedevices:\n指纹信息释义\n\n选项                          说明\nuseragent                   ua 信息\nwebdriver                   网页内驱动软件\nlanguage                    语言种类\ncolordepth                  目标设备或缓冲器上的调色板的比特深度\ndevicememory                设备内存\npixelratio                  设备像素比\nhardwareconcurrency         可用于运行在用户的计算机上的线程的逻辑处理器的数量\nscreenresolution            当前屏幕的分辨率\navailablescreenresolution   当前屏幕的可用分辨率\ntimezoneoffset              本地时间与 gmt 时间之间的时间差，以分钟为单位\ntimezone                    时区\nsessionstorage              是否具有会话存储\nlocalstorage                是否具有本地存储\nindexeddb                   是否具有索引 db\naddbehavior                 ie 是否指定 addbehavior\nopendatabase                是否有打开的 db\ncpuclass                    浏览器系统的 cpu 等级\nplatform                    运行浏览器的操作系统和(或)硬件平台\ndonottrack                  “不跟踪”设置，是否请求网站和广告商不跟踪用户\nplugins                     浏览器的插件信息\ncanvas                      使用 canvas 绘图\nwebgl                       webgl 指纹信息\nwebglvendorandrenderer      具有大量熵的 webgl 指纹的子集\nadblock                     是否安装 adblock\nhasliedlanguages            用户是否篡改了语言\nhasliedresolution           用户是否篡改了屏幕分辨率\nhasliedos                   用户是否篡改了操作系统\nhasliedbrowser              用户是否篡改了浏览器\ntouchsupport                触摸屏检测\nfonts                       字体列表\nfontsflash                  flash 字体列表\naudio                       音频处理\nenumeratedevices            多媒体输入输出设备信息\n\n\n\nkey   value",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"URL",frontmatter:{title:"URL",date:"2024-03-03T16:04:24.000Z",permalink:"/pages/url/",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/01.url.html",relativePath:"03.辅助查询/04.加密算法/01.url.md",key:"v-2a710850",path:"/pages/url/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:238},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:584},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:1412},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:1931},{level:2,title:"在线工具",slug:"在线工具",normalizedTitle:"在线工具",charIndex:2229}],headersStr:"Python JavaScript Golang 主要特征 在线工具",content:'关于 URL 编码\n\nURL 编码，又称为百分号编码（英语：Percent-encoding），是一种浏览器用来打包表单输入的格式，浏览器从表单中获取所有的 name 和其中的值 ，将它们以 name/value 参数编码（移去那些不能传送的字符，将数据排行等等）作为 URL 的一部分或者分离地发给服务器。\n\nURL 编码维基百科\n\n注意\n\n不同语言在处理 URL 编码时，对一些特殊符号的处理方式可能不一样，当发现编码结果与预期不一致时，请检查对特殊符号的处理。\n\n\n# Python\n\nfrom urllib import parse\n\nurl = "https://spiderapi.cn/bob是大帅哥/"\nurl_encoded = parse.quote(url, safe="")  # safe 参数默认值为 /，用于指定不需要进行编码的字符\nurl_decoded = parse.unquote(url_encoded)\n\nprint("URL 编码值:", url_encoded)  # https%3A%2F%2Fspiderapi.cn%2Fbob%E6%98%AF%E5%A4%A7%E5%B8%85%E5%93%A5%2F\nprint("URL 解码值:", url_decoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# JavaScript\n\n/*\n* encodeURICompoent() 与 encodeURI() 方法不同。它们的主要区别在于：\n* encodeURICompoent()：假定参数是 URI 的一部分，如协议、主机名、路径等，因此它将转义这些分隔 URI 各个部分的标点符号；\n* encodeURI()：仅把这些标点符号视为普通的 ASCII 字符，并没有转换。\n*/\n\n\nvar url = "https://spiderapi.cn/bob是大帅哥/";\n\nvar urlEncoded = encodeURI(url);\nvar urlDecoded = decodeURI(urlEncoded);\nvar urlEncodedComponent = encodeURIComponent(url);\nvar urlDecodedComponent = decodeURIComponent(urlEncodedComponent);\n\nconsole.log("URL 编码值:", urlEncoded);                    // https://spiderapi.cn/bob%E6%98%AF%E5%A4%A7%E5%B8%85%E5%93%A5/\nconsole.log("URL Component 解码值:", urlEncodedComponent); // https%3A%2F%2Fspiderapi.cn%2Fbob%E6%98%AF%E5%A4%A7%E5%B8%85%E5%93%A5%2F\n\nconsole.log("URL 编码值:", urlDecoded);\nconsole.log("URL Component 解码值:", urlDecodedComponent);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# Golang\n\npackage main\n\nimport (\n    "fmt"\n    "net/url"\n)\n\nfunc main() {\n    uri := "https://spiderapi.cn/bob是大帅哥/"\n  \n    urlEncoded := url.QueryEscape(uri)\n    urlDecoded, err := url.QueryUnescape(urlEncoded)\n    if err != nil {\n        fmt.Println("Error decoding URL:", err)\n        return\n    }\n    \n    fmt.Println("URL 编码值:", urlEncoded) // https%3A%2F%2Fspiderapi.cn%2Fbob%E6%98%AF%E5%A4%A7%E5%B8%85%E5%93%A5%2F\n    fmt.Println("URL 解码值:", urlDecoded)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 主要特征\n\n另外有一种叫做 Hex 编码的，和 URL 编码的结果是类似的，不同的是当你用 URL 编码网址时是不会把 http、https 关键字和 /、?、&、= 等连接符进行编码的，而 Hex 编码则全部转化了，二者主要特征如下：\n\n以 % 开头，后面是数字加字母组合\n\n编码类型      示例\n明文        https://spiderapi.cn/\nUnicode   https%3A%2F%2Fspiderapi.cn%2F\nHex       %68%74%74%70%73%3a%2f%2f%73%70%69%64%65%72%61%70%69.%63n%2f\n\n\n# 在线工具\n\nhttps://tool.chinaz.com/tools/urlencode.aspx',normalizedContent:'关于 url 编码\n\nurl 编码，又称为百分号编码（英语：percent-encoding），是一种浏览器用来打包表单输入的格式，浏览器从表单中获取所有的 name 和其中的值 ，将它们以 name/value 参数编码（移去那些不能传送的字符，将数据排行等等）作为 url 的一部分或者分离地发给服务器。\n\nurl 编码维基百科\n\n注意\n\n不同语言在处理 url 编码时，对一些特殊符号的处理方式可能不一样，当发现编码结果与预期不一致时，请检查对特殊符号的处理。\n\n\n# python\n\nfrom urllib import parse\n\nurl = "https://spiderapi.cn/bob是大帅哥/"\nurl_encoded = parse.quote(url, safe="")  # safe 参数默认值为 /，用于指定不需要进行编码的字符\nurl_decoded = parse.unquote(url_encoded)\n\nprint("url 编码值:", url_encoded)  # https%3a%2f%2fspiderapi.cn%2fbob%e6%98%af%e5%a4%a7%e5%b8%85%e5%93%a5%2f\nprint("url 解码值:", url_decoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# javascript\n\n/*\n* encodeuricompoent() 与 encodeuri() 方法不同。它们的主要区别在于：\n* encodeuricompoent()：假定参数是 uri 的一部分，如协议、主机名、路径等，因此它将转义这些分隔 uri 各个部分的标点符号；\n* encodeuri()：仅把这些标点符号视为普通的 ascii 字符，并没有转换。\n*/\n\n\nvar url = "https://spiderapi.cn/bob是大帅哥/";\n\nvar urlencoded = encodeuri(url);\nvar urldecoded = decodeuri(urlencoded);\nvar urlencodedcomponent = encodeuricomponent(url);\nvar urldecodedcomponent = decodeuricomponent(urlencodedcomponent);\n\nconsole.log("url 编码值:", urlencoded);                    // https://spiderapi.cn/bob%e6%98%af%e5%a4%a7%e5%b8%85%e5%93%a5/\nconsole.log("url component 解码值:", urlencodedcomponent); // https%3a%2f%2fspiderapi.cn%2fbob%e6%98%af%e5%a4%a7%e5%b8%85%e5%93%a5%2f\n\nconsole.log("url 编码值:", urldecoded);\nconsole.log("url component 解码值:", urldecodedcomponent);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# golang\n\npackage main\n\nimport (\n    "fmt"\n    "net/url"\n)\n\nfunc main() {\n    uri := "https://spiderapi.cn/bob是大帅哥/"\n  \n    urlencoded := url.queryescape(uri)\n    urldecoded, err := url.queryunescape(urlencoded)\n    if err != nil {\n        fmt.println("error decoding url:", err)\n        return\n    }\n    \n    fmt.println("url 编码值:", urlencoded) // https%3a%2f%2fspiderapi.cn%2fbob%e6%98%af%e5%a4%a7%e5%b8%85%e5%93%a5%2f\n    fmt.println("url 解码值:", urldecoded)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 主要特征\n\n另外有一种叫做 hex 编码的，和 url 编码的结果是类似的，不同的是当你用 url 编码网址时是不会把 http、https 关键字和 /、?、&、= 等连接符进行编码的，而 hex 编码则全部转化了，二者主要特征如下：\n\n以 % 开头，后面是数字加字母组合\n\n编码类型      示例\n明文        https://spiderapi.cn/\nunicode   https%3a%2f%2fspiderapi.cn%2f\nhex       %68%74%74%70%73%3a%2f%2f%73%70%69%64%65%72%61%70%69.%63n%2f\n\n\n# 在线工具\n\nhttps://tool.chinaz.com/tools/urlencode.aspx',charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Unicode",frontmatter:{title:"Unicode",date:"2024-03-02T21:03:45.000Z",permalink:"/pages/unicode",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/02.unicode.html",relativePath:"03.辅助查询/04.加密算法/02.unicode.md",key:"v-185a1bf2",path:"/pages/unicode/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:189},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:1229},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:1998},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:3726},{level:2,title:"在线工具",slug:"在线工具",normalizedTitle:"在线工具",charIndex:4124}],headersStr:"Python JavaScript Golang 主要特征 在线工具",content:'关于 Unicode 编码\n\nUnicode 也叫统一码、万国码、单一码，是由 Unicode 联盟维护的文本编码标准，是计算机科学领域里的一项业界标准，包括字符集、编码方案等，Unicode 是为了解决传统的字符编码方案的局限而产生的，它为每种语言中的每个字符设定了统一并且唯一的二进制编码，以满足跨语言、跨平台进行文本转换、处理的要求。\n\nUnicode 维基百科\n\n\n# Python\n\n# 方法一：仅支持中文编码\n\ndata = "spiderapi.cn - 虫术"\n\nresult_encoded = data.encode("unicode_escape").decode("utf-8")\nresult_decoded = result_encoded.encode("utf-8").decode("unicode_escape")\n\nprint("Unicode 编码值:", result_encoded)  # spiderapi.cn - \\u866b\\u672f\nprint("Unicode 解码值:", result_decoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 方法二：支持中文、英文、符号编码\n\nimport re\n\n\ndef unicode_encode(input_string):\n    return "".join(["\\\\u{:04x}".format(ord(char)) for char in input_string])\n\n\ndef unicode_decode(encoded_string):\n    def decode(match):\n        return chr(int(match.group(1), 16))\n    return re.sub(r"\\\\u([0-9a-fA-F]{4})", decode, encoded_string)\n\n\nif __name__ == "__main__":\n    data = "spiderapi.cn - 虫术"\n\n    result_encoded = unicode_encode(data)\n    result_decoded = unicode_decode(result_encoded)\n    print("Unicode 编码值:", result_encoded)  # \\u0073\\u0070\\u0069\\u0064\\u0065\\u0072\\u0061\\u0070\\u0069\\u002e\\u0063\\u006e\\u0020\\u002d\\u0020\\u866b\\u672f\n    print("Unicode 解码值:", result_decoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# JavaScript\n\nfunction unicodeEncode(inputString) {\n    return inputString.split("").map(function(char) {\n        return "\\\\u" + ("000" + char.charCodeAt(0).toString(16)).slice(-4);\n    }).join("");\n}\n\nfunction unicodeDecode(encodedString) {\n    return encodedString.replace(/\\\\u([0-9a-fA-F]{4})/g, function(match, group1) {\n        return String.fromCharCode(parseInt(group1, 16));\n    });\n}\n\nconst data = "spiderapi.cn - 虫术";\nconst resultEncoded = unicodeEncode(data);\nconst resultDecoded = unicodeDecode(resultEncoded);\n\nconsole.log("Unicode 编码值:", resultEncoded);  // \\u0073\\u0070\\u0069\\u0064\\u0065\\u0072\\u0061\\u0070\\u0069\\u002e\\u0063\\u006e\\u0020\\u002d\\u0020\\u866b\\u672f\nconsole.log("Unicode 解码值:", resultDecoded);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# Golang\n\n// 方法一：仅支持中文编码\n\npackage main\n\nimport (\n    "fmt"\n    "strconv"\n)\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n  \n    resultEncoded := strconv.QuoteToASCII(data)\n    resultDecoded, err := strconv.Unquote(resultEncoded)\n    if err != nil {\n        fmt.Println("Unicode decode error:", err)\n        return\n    }\n  \n    fmt.Println("Unicode 编码值:", resultEncoded) // spiderapi.cn - \\u866b\\u672f\n    fmt.Println("Unicode 解码值:", resultDecoded)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n// 方法二：支持中文、英文、符号编码\n\npackage main\n\nimport (\n    "fmt"\n    "strconv"\n    "strings"\n)\n\nfunc unicodeEncode(str string) string {\n    var builder strings.Builder\n    for _, char := range str {\n        builder.WriteString(fmt.Sprintf("\\\\u%04x", char))\n    }\n    return builder.String()\n}\n\nfunc unicodeDecode(str string) string {\n    var decodedStr strings.Builder\n    segments := strings.Split(str, "\\\\u")\n    for _, segment := range segments {\n        if segment == "" {\n            continue\n        }\n        code, err := strconv.ParseUint(segment, 16, 32)\n        if err != nil {\n            fmt.Println("Unicode decode error:", err)\n            continue\n        }\n        decodedStr.WriteRune(rune(code))\n    }\n    return decodedStr.String()\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n  \n    resultEncoded := unicodeEncode(data)\n    resultDecoded := unicodeDecode(resultEncoded)\n  \n    fmt.Println("Unicode 编码值:", resultEncoded) // \\u0073\\u0070\\u0069\\u0064\\u0065\\u0072\\u0061\\u0070\\u0069\\u002e\\u0063\\u006e\\u0020\\u002d\\u0020\\u866b\\u672f\n    fmt.Println("Unicode 解码值:", resultDecoded)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\n\n# 主要特征\n\n以 \\u、&# 或 &#x 开头，后面是数字加字母组合。\n\nPS：\\u 开头和 &#x 开头是一样的，都是 16 进制 Unicode 字符的不同写法，&# 则是 Unicode 字符 10 进制的写法，此外，&# 和 &#x 开头的，也称为 HTML 字符实体转换，字符实体是用一个编号写入 HTML 代码中来代替一个字符，在 HTML 中，某些字符是预留的，如果希望正确地显示预留字符，就必须在 HTML 源代码中使用字符实体。\n\n编码类型      示例一                              示例二\n明文        12345                            admin\nUnicode   \\u0031\\u0032\\u0033\\u0034\\u0035   \\u0061\\u0064\\u006d\\u0069\\u006e\n\n\n# 在线工具\n\nhttps://tool.chinaz.com/tools/unicode.aspx',normalizedContent:'关于 unicode 编码\n\nunicode 也叫统一码、万国码、单一码，是由 unicode 联盟维护的文本编码标准，是计算机科学领域里的一项业界标准，包括字符集、编码方案等，unicode 是为了解决传统的字符编码方案的局限而产生的，它为每种语言中的每个字符设定了统一并且唯一的二进制编码，以满足跨语言、跨平台进行文本转换、处理的要求。\n\nunicode 维基百科\n\n\n# python\n\n# 方法一：仅支持中文编码\n\ndata = "spiderapi.cn - 虫术"\n\nresult_encoded = data.encode("unicode_escape").decode("utf-8")\nresult_decoded = result_encoded.encode("utf-8").decode("unicode_escape")\n\nprint("unicode 编码值:", result_encoded)  # spiderapi.cn - \\u866b\\u672f\nprint("unicode 解码值:", result_decoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 方法二：支持中文、英文、符号编码\n\nimport re\n\n\ndef unicode_encode(input_string):\n    return "".join(["\\\\u{:04x}".format(ord(char)) for char in input_string])\n\n\ndef unicode_decode(encoded_string):\n    def decode(match):\n        return chr(int(match.group(1), 16))\n    return re.sub(r"\\\\u([0-9a-fa-f]{4})", decode, encoded_string)\n\n\nif __name__ == "__main__":\n    data = "spiderapi.cn - 虫术"\n\n    result_encoded = unicode_encode(data)\n    result_decoded = unicode_decode(result_encoded)\n    print("unicode 编码值:", result_encoded)  # \\u0073\\u0070\\u0069\\u0064\\u0065\\u0072\\u0061\\u0070\\u0069\\u002e\\u0063\\u006e\\u0020\\u002d\\u0020\\u866b\\u672f\n    print("unicode 解码值:", result_decoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# javascript\n\nfunction unicodeencode(inputstring) {\n    return inputstring.split("").map(function(char) {\n        return "\\\\u" + ("000" + char.charcodeat(0).tostring(16)).slice(-4);\n    }).join("");\n}\n\nfunction unicodedecode(encodedstring) {\n    return encodedstring.replace(/\\\\u([0-9a-fa-f]{4})/g, function(match, group1) {\n        return string.fromcharcode(parseint(group1, 16));\n    });\n}\n\nconst data = "spiderapi.cn - 虫术";\nconst resultencoded = unicodeencode(data);\nconst resultdecoded = unicodedecode(resultencoded);\n\nconsole.log("unicode 编码值:", resultencoded);  // \\u0073\\u0070\\u0069\\u0064\\u0065\\u0072\\u0061\\u0070\\u0069\\u002e\\u0063\\u006e\\u0020\\u002d\\u0020\\u866b\\u672f\nconsole.log("unicode 解码值:", resultdecoded);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# golang\n\n// 方法一：仅支持中文编码\n\npackage main\n\nimport (\n    "fmt"\n    "strconv"\n)\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n  \n    resultencoded := strconv.quotetoascii(data)\n    resultdecoded, err := strconv.unquote(resultencoded)\n    if err != nil {\n        fmt.println("unicode decode error:", err)\n        return\n    }\n  \n    fmt.println("unicode 编码值:", resultencoded) // spiderapi.cn - \\u866b\\u672f\n    fmt.println("unicode 解码值:", resultdecoded)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n// 方法二：支持中文、英文、符号编码\n\npackage main\n\nimport (\n    "fmt"\n    "strconv"\n    "strings"\n)\n\nfunc unicodeencode(str string) string {\n    var builder strings.builder\n    for _, char := range str {\n        builder.writestring(fmt.sprintf("\\\\u%04x", char))\n    }\n    return builder.string()\n}\n\nfunc unicodedecode(str string) string {\n    var decodedstr strings.builder\n    segments := strings.split(str, "\\\\u")\n    for _, segment := range segments {\n        if segment == "" {\n            continue\n        }\n        code, err := strconv.parseuint(segment, 16, 32)\n        if err != nil {\n            fmt.println("unicode decode error:", err)\n            continue\n        }\n        decodedstr.writerune(rune(code))\n    }\n    return decodedstr.string()\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n  \n    resultencoded := unicodeencode(data)\n    resultdecoded := unicodedecode(resultencoded)\n  \n    fmt.println("unicode 编码值:", resultencoded) // \\u0073\\u0070\\u0069\\u0064\\u0065\\u0072\\u0061\\u0070\\u0069\\u002e\\u0063\\u006e\\u0020\\u002d\\u0020\\u866b\\u672f\n    fmt.println("unicode 解码值:", resultdecoded)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\n\n# 主要特征\n\n以 \\u、&# 或 &#x 开头，后面是数字加字母组合。\n\nps：\\u 开头和 &#x 开头是一样的，都是 16 进制 unicode 字符的不同写法，&# 则是 unicode 字符 10 进制的写法，此外，&# 和 &#x 开头的，也称为 html 字符实体转换，字符实体是用一个编号写入 html 代码中来代替一个字符，在 html 中，某些字符是预留的，如果希望正确地显示预留字符，就必须在 html 源代码中使用字符实体。\n\n编码类型      示例一                              示例二\n明文        12345                            admin\nunicode   \\u0031\\u0032\\u0033\\u0034\\u0035   \\u0061\\u0064\\u006d\\u0069\\u006e\n\n\n# 在线工具\n\nhttps://tool.chinaz.com/tools/unicode.aspx',charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"自动化工具检测",frontmatter:{title:"自动化工具检测",date:"2023-12-06T11:37:28.000Z",permalink:"/pages/AHBD/",article:!1,sidebar:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/03.%E6%8C%87%E7%BA%B9%E4%BF%A1%E6%81%AF/03.%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E6%A3%80%E6%B5%8B.html",relativePath:"03.辅助查询/03.指纹信息/03.自动化工具检测.md",key:"v-5ddb86d0",path:"/pages/AHBD/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"MD5",frontmatter:{title:"MD5",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/md5",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/04.md5.html",relativePath:"03.辅助查询/04.加密算法/04.md5.md",key:"v-c3d177a8",path:"/pages/md5/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:454},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:9702},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:46610},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:51999},{level:2,title:"在线工具",slug:"在线工具",normalizedTitle:"在线工具",charIndex:52810}],headersStr:"Python JavaScript Golang 主要特征 在线工具",content:'关于 MD5 信息摘要算法\n\nMD5 信息摘要算法（英语：MD5 Message-Digest Algorithm），一种被广泛使用的密码散列函数，可以产生出一个 128 位（16 字节）的散列值（hash value），用于确保信息传输完整一致。MD5 由美国密码学家罗纳德·李维斯特（Ronald Linn Rivest）设计，于 1992 年公开，用以取代 MD4 算法。这套算法的程序在 RFC 1321 标准中被加以规范。一个数据的 MD5 值是唯一的，同一个数据不可能计算出多个不同的 MD5 值，但是，不同数据计算出来的 MD5 值是有可能一样的，知道一个 MD5 值，理论上是无法还原出它的原始数据的，但 1996 年后该算法被证实存在弱点，可以被加以破解，对于需要高度安全性的数据，专家一般建议改用其他算法，如 SHA-2。2004 年，证实 MD5 算法无法防止碰撞（collision），因此不适用于安全性认证，如 SSL 公开密钥认证或是数字签名等用途。\n\nMD5 维基百科\n\n\n# Python\n\n# 方法一：直接使用 md5 函数\n\nimport hashlib\n\n\ndata = "spiderapi.cn - 虫术"\n\nresult_lowercase_32bit = hashlib.md5(data.encode()).hexdigest()\nresult_uppercase_32bit = result_lowercase_32bit.upper()\nresult_lowercase_16bit = result_lowercase_32bit[8:-8]\nresult_uppercase_16bit = result_lowercase_16bit.upper()\n\nprint("32 位小写值: ", result_lowercase_32bit)\nprint("32 位大写值: ", result_uppercase_32bit)\nprint("16 位小写值: ", result_lowercase_16bit)\nprint("16 位大写值: ", result_uppercase_16bit)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 方法二：使用 new 函数创建 md5 对象\n\nimport hashlib\n\n\ndata = "spiderapi.cn - 虫术"\n\nresult_lowercase_32bit = hashlib.new("md5", data.encode()).hexdigest()\nresult_uppercase_32bit = result_lowercase_32bit.upper()\nresult_lowercase_16bit = result_lowercase_32bit[8:-8]\nresult_uppercase_16bit = result_lowercase_16bit.upper()\n\nprint("32 位小写值: ", result_lowercase_32bit)\nprint("32 位大写值: ", result_uppercase_32bit)\nprint("16 位小写值: ", result_lowercase_16bit)\nprint("16 位大写值: ", result_uppercase_16bit)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n#  方法三：通过 update 方法更新 md5 对象\n\nimport hashlib\n\n\ndata = "spiderapi.cn - 虫术"\n\nhash_object = hashlib.md5()\nhash_object.update(data.encode())\nresult_lowercase_32bit = hash_object.hexdigest()\nresult_uppercase_32bit = result_lowercase_32bit.upper()\nresult_lowercase_16bit = result_lowercase_32bit[8:-8]\nresult_uppercase_16bit = result_lowercase_16bit.upper()\n\nprint("32 位小写值: ", result_lowercase_32bit)\nprint("32 位大写值: ", result_uppercase_32bit)\nprint("16 位小写值: ", result_lowercase_16bit)\nprint("16 位大写值: ", result_uppercase_16bit)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# encoding 支持多种编码\n\nimport hashlib\n\n\ndata = "spiderapi.cn - 虫术"\n\nresult_utf8 = hashlib.md5(data.encode(encoding="UTF-8")).hexdigest()\nprint("encoding utf-8:", result_utf8)\n\nresult_gbk = hashlib.md5(data.encode(encoding="GBK")).hexdigest()\nprint("encoding gbk:", result_gbk)\n\nresult_gb2312 = hashlib.md5(data.encode(encoding="GB2312")).hexdigest()\nprint("encoding gb2312:", result_gb2312)\n\nresult_18030 = hashlib.md5(data.encode(encoding="GB18030")).hexdigest()\nprint("encoding gb18030:", result_18030)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# 不借助官方或者第三方库，纯源码实现\n\nimport binascii\n\n\nSV = [0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee, 0xf57c0faf,\n    0x4787c62a, 0xa8304613, 0xfd469501, 0x698098d8, 0x8b44f7af,\n    0xffff5bb1, 0x895cd7be, 0x6b901122, 0xfd987193, 0xa679438e,\n    0x49b40821, 0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,\n    0xd62f105d, 0x2441453, 0xd8a1e681, 0xe7d3fbc8, 0x21e1cde6,\n    0xc33707d6, 0xf4d50d87, 0x455a14ed, 0xa9e3e905, 0xfcefa3f8,\n    0x676f02d9, 0x8d2a4c8a, 0xfffa3942, 0x8771f681, 0x6d9d6122,\n    0xfde5380c, 0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,\n    0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x4881d05, 0xd9d4d039,\n    0xe6db99e5, 0x1fa27cf8, 0xc4ac5665, 0xf4292244, 0x432aff97,\n    0xab9423a7, 0xfc93a039, 0x655b59c3, 0x8f0ccc92, 0xffeff47d,\n    0x85845dd1, 0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,\n    0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391]\n\n\ndef left_circular_shift(k, bits):\n    bits = bits % 32\n    k = k % (2 ** 32)\n    upper = (k << bits) % (2 ** 32)\n    result = upper | (k >> (32 - bits))\n    return result\n\n\ndef block_divide(block, chunks):\n    result = []\n    size = len(block) // chunks\n    for i in range(0, chunks):\n        result.append(int.from_bytes(block[i * size:(i + 1) * size], byteorder="little"))\n    return result\n\n\ndef F(X, Y, Z):\n    return (X & Y) | ((~X) & Z)\n\n\ndef G(X, Y, Z):\n    return (X & Z) | (Y & (~Z))\n\n\ndef H(X, Y, Z):\n    return X ^ Y ^ Z\n\n\ndef I(X, Y, Z):\n    return Y ^ (X | (~Z))\n\n\ndef FF(a, b, c, d, M, s, t):\n    result = b + left_circular_shift((a + F(b, c, d) + M + t), s)\n    return result\n\n\ndef GG(a, b, c, d, M, s, t):\n    result = b + left_circular_shift((a + G(b, c, d) + M + t), s)\n    return result\n\n\ndef HH(a, b, c, d, M, s, t):\n    result = b + left_circular_shift((a + H(b, c, d) + M + t), s)\n    return result\n\n\ndef II(a, b, c, d, M, s, t):\n    result = b + left_circular_shift((a + I(b, c, d) + M + t), s)\n    return result\n\n\ndef fmt8(num):\n    big_hex = "{0:08x}".format(num)\n    unhex = binascii.unhexlify(big_hex)\n    result = "{0:08x}".format(int.from_bytes(unhex, byteorder=\'little\'))\n    return result\n\n\ndef bit_len(bitstring):\n    return len(bitstring) * 8\n\n\ndef md5_hash(msg):\n    # First, we pad the message\n    msg_len = bit_len(msg) % (2 ** 64)\n    msg = msg + b\'\\x80\'\n    zero_pad = (448 - (msg_len + 8) % 512) % 512\n    zero_pad //= 8\n    msg = msg + b\'\\x00\' * zero_pad + msg_len.to_bytes(8, byteorder=\'little\')\n    msg_len = bit_len(msg)\n    iterations = msg_len // 512\n    # chaining variables\n    A = 0x67452301\n    B = 0xefcdab89\n    C = 0x98badcfe\n    D = 0x10325476\n    # main loop\n    for i in range(0, iterations):\n        a = A\n        b = B\n        c = C\n        d = D\n        block = msg[i * 64:(i + 1) * 64]\n        M = block_divide(block, 16)\n        # Rounds\n        a = FF(a, b, c, d, M[0], 7, SV[0])\n        d = FF(d, a, b, c, M[1], 12, SV[1])\n        c = FF(c, d, a, b, M[2], 17, SV[2])\n        b = FF(b, c, d, a, M[3], 22, SV[3])\n        a = FF(a, b, c, d, M[4], 7, SV[4])\n        d = FF(d, a, b, c, M[5], 12, SV[5])\n        c = FF(c, d, a, b, M[6], 17, SV[6])\n        b = FF(b, c, d, a, M[7], 22, SV[7])\n        a = FF(a, b, c, d, M[8], 7, SV[8])\n        d = FF(d, a, b, c, M[9], 12, SV[9])\n        c = FF(c, d, a, b, M[10], 17, SV[10])\n        b = FF(b, c, d, a, M[11], 22, SV[11])\n        a = FF(a, b, c, d, M[12], 7, SV[12])\n        d = FF(d, a, b, c, M[13], 12, SV[13])\n        c = FF(c, d, a, b, M[14], 17, SV[14])\n        b = FF(b, c, d, a, M[15], 22, SV[15])\n        a = GG(a, b, c, d, M[1], 5, SV[16])\n        d = GG(d, a, b, c, M[6], 9, SV[17])\n        c = GG(c, d, a, b, M[11], 14, SV[18])\n        b = GG(b, c, d, a, M[0], 20, SV[19])\n        a = GG(a, b, c, d, M[5], 5, SV[20])\n        d = GG(d, a, b, c, M[10], 9, SV[21])\n        c = GG(c, d, a, b, M[15], 14, SV[22])\n        b = GG(b, c, d, a, M[4], 20, SV[23])\n        a = GG(a, b, c, d, M[9], 5, SV[24])\n        d = GG(d, a, b, c, M[14], 9, SV[25])\n        c = GG(c, d, a, b, M[3], 14, SV[26])\n        b = GG(b, c, d, a, M[8], 20, SV[27])\n        a = GG(a, b, c, d, M[13], 5, SV[28])\n        d = GG(d, a, b, c, M[2], 9, SV[29])\n        c = GG(c, d, a, b, M[7], 14, SV[30])\n        b = GG(b, c, d, a, M[12], 20, SV[31])\n        a = HH(a, b, c, d, M[5], 4, SV[32])\n        d = HH(d, a, b, c, M[8], 11, SV[33])\n        c = HH(c, d, a, b, M[11], 16, SV[34])\n        b = HH(b, c, d, a, M[14], 23, SV[35])\n        a = HH(a, b, c, d, M[1], 4, SV[36])\n        d = HH(d, a, b, c, M[4], 11, SV[37])\n        c = HH(c, d, a, b, M[7], 16, SV[38])\n        b = HH(b, c, d, a, M[10], 23, SV[39])\n        a = HH(a, b, c, d, M[13], 4, SV[40])\n        d = HH(d, a, b, c, M[0], 11, SV[41])\n        c = HH(c, d, a, b, M[3], 16, SV[42])\n        b = HH(b, c, d, a, M[6], 23, SV[43])\n        a = HH(a, b, c, d, M[9], 4, SV[44])\n        d = HH(d, a, b, c, M[12], 11, SV[45])\n        c = HH(c, d, a, b, M[15], 16, SV[46])\n        b = HH(b, c, d, a, M[2], 23, SV[47])\n        a = II(a, b, c, d, M[0], 6, SV[48])\n        d = II(d, a, b, c, M[7], 10, SV[49])\n        c = II(c, d, a, b, M[14], 15, SV[50])\n        b = II(b, c, d, a, M[5], 21, SV[51])\n        a = II(a, b, c, d, M[12], 6, SV[52])\n        d = II(d, a, b, c, M[3], 10, SV[53])\n        c = II(c, d, a, b, M[10], 15, SV[54])\n        b = II(b, c, d, a, M[1], 21, SV[55])\n        a = II(a, b, c, d, M[8], 6, SV[56])\n        d = II(d, a, b, c, M[15], 10, SV[57])\n        c = II(c, d, a, b, M[6], 15, SV[58])\n        b = II(b, c, d, a, M[13], 21, SV[59])\n        a = II(a, b, c, d, M[4], 6, SV[60])\n        d = II(d, a, b, c, M[11], 10, SV[61])\n        c = II(c, d, a, b, M[2], 15, SV[62])\n        b = II(b, c, d, a, M[9], 21, SV[63])\n        A = (A + a) % (2 ** 32)\n        B = (B + b) % (2 ** 32)\n        C = (C + c) % (2 ** 32)\n        D = (D + d) % (2 ** 32)\n    result = fmt8(A) + fmt8(B) + fmt8(C) + fmt8(D)\n    return result\n\n\nif __name__ == "__main__":\n    data = \'spiderapi.cn - 虫术\'\n\n    result_lowercase_32bit = md5_hash(data.encode())\n    result_uppercase_32bit = result_lowercase_32bit.upper()\n    result_lowercase_16bit = result_lowercase_32bit[8:-8]\n    result_uppercase_16bit = result_lowercase_16bit.upper()\n\n    print("32 位小写值: ", result_lowercase_32bit)  # 4040361f7f0d278bf2781451e0639619\n    print("32 位大写值: ", result_uppercase_32bit)  # 4040361F7F0D278BF2781451E0639619\n    print("16 位小写值: ", result_lowercase_16bit)  # 7f0d278bf2781451\n    print("16 位大写值: ", result_uppercase_16bit)  # 7F0D278BF2781451\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n\n\n\n# JavaScript\n\n// 安装依赖 npm install crypto-js\n\nvar CryptoJS = require("crypto-js");\n\nvar data = "spiderapi.cn - 虫术";\nvar resultLowercase32bit = CryptoJS.MD5(data).toString(CryptoJS.enc.Hex);\nvar resultUppercase32bit = resultLowercase32bit.toUpperCase();\nvar resultLowercase16bit = resultLowercase32bit.slice(8, 24);\nvar resultUppercase16bit = resultLowercase16bit.toUpperCase();\n\nconsole.log("32 位小写值:", resultLowercase32bit);\nconsole.log("32 位大写值:", resultUppercase32bit);\nconsole.log("16 位小写值:", resultLowercase16bit);\nconsole.log("16 位大写值:", resultUppercase16bit);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n// 安装依赖 npm install crypto\n\nvar crypto = require("crypto");\n\nvar data = "spiderapi.cn - 虫术";\nvar hashObject = crypto.createHash("md5");\nhashObject.update(data);\nvar resultLowercase32bit = hashObject.digest("hex");\nvar resultUppercase32bit = resultLowercase32bit.toUpperCase();\nvar resultLowercase16bit = resultLowercase32bit.slice(8, 24);\nvar resultUppercase16bit = resultLowercase16bit.toUpperCase();\n\nconsole.log("32 位小写值:", resultLowercase32bit);\nconsole.log("32 位大写值:", resultUppercase32bit);\nconsole.log("16 位小写值:", resultLowercase16bit);\nconsole.log("16 位大写值:", resultUppercase16bit);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n// 安装依赖 npm install md5\n\nvar MD5 = require("md5");\n\nvar data = "spiderapi.cn - 虫术";\nvar resultLowercase32bit = MD5(data);\nvar resultUppercase32bit = resultLowercase32bit.toUpperCase();\nvar resultLowercase16bit = resultLowercase32bit.slice(8, 24);\nvar resultUppercase16bit = resultLowercase16bit.toUpperCase();\n\nconsole.log("32 位小写值:", resultLowercase32bit);\nconsole.log("32 位大写值:", resultUppercase32bit);\nconsole.log("16 位小写值:", resultLowercase16bit);\nconsole.log("16 位大写值:", resultUppercase16bit);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n// 不借助官方或者第三方库，纯源码实现\n\nvar CryptoJS = CryptoJS || (function (Math, undefined) {\n    var crypto;\n    if (typeof window !== \'undefined\' && window.crypto) {\n        crypto = window.crypto;\n    }\n    if (typeof self !== \'undefined\' && self.crypto) {\n        crypto = self.crypto;\n    }\n    if (typeof globalThis !== \'undefined\' && globalThis.crypto) {\n        crypto = globalThis.crypto;\n    }\n    if (!crypto && typeof window !== \'undefined\' && window.msCrypto) {\n        crypto = window.msCrypto;\n    }\n    if (!crypto && typeof global !== \'undefined\' && global.crypto) {\n        crypto = global.crypto;\n    }\n    if (!crypto && typeof require === \'function\') {\n        try {\n            crypto = require(\'crypto\');\n        } catch (err) {}\n    }\n    var cryptoSecureRandomInt = function () {\n        if (crypto) {\n            if (typeof crypto.getRandomValues === \'function\') {\n                try {\n                    return crypto.getRandomValues(new Uint32Array(1))[0];\n                } catch (err) {}\n            }\n            if (typeof crypto.randomBytes === \'function\') {\n                try {\n                    return crypto.randomBytes(4).readInt32LE();\n                } catch (err) {}\n            }\n        }\n        throw new Error(\'Native crypto module could not be used to get secure random number.\');\n    };\n    var create = Object.create || (function () {\n        function F() {}\n        return function (obj) {\n            var subtype;\n            F.prototype = obj;\n            subtype = new F();\n            F.prototype = null;\n            return subtype;\n        };\n    }());\n    var C = {};\n    var C_lib = C.lib = {};\n    var Base = C_lib.Base = (function () {\n        return {\n            extend: function (overrides) {\n                var subtype = create(this);\n                if (overrides) {\n                    subtype.mixIn(overrides);\n                }\n                if (!subtype.hasOwnProperty(\'init\') || this.init === subtype.init) {\n                    subtype.init = function () {\n                        subtype.$super.init.apply(this, arguments);\n                    };\n                }\n                subtype.init.prototype = subtype;\n                subtype.$super = this;\n                return subtype;\n            }, create: function () {\n                var instance = this.extend();\n                instance.init.apply(instance, arguments);\n                return instance;\n            }, init: function () {}, mixIn: function (properties) {\n                for (var propertyName in properties) {\n                    if (properties.hasOwnProperty(propertyName)) {\n                        this[propertyName] = properties[propertyName];\n                    }\n                }\n                if (properties.hasOwnProperty(\'toString\')) {\n                    this.toString = properties.toString;\n                }\n            }, clone: function () {\n                return this.init.prototype.extend(this);\n            }\n        };\n    }());\n    var WordArray = C_lib.WordArray = Base.extend({\n        init: function (words, sigBytes) {\n            words = this.words = words || [];\n            if (sigBytes != undefined) {\n                this.sigBytes = sigBytes;\n            } else {\n                this.sigBytes = words.length * 4;\n            }\n        }, toString: function (encoder) {\n            return (encoder || Hex).stringify(this);\n        }, concat: function (wordArray) {\n            var thisWords = this.words;\n            var thatWords = wordArray.words;\n            var thisSigBytes = this.sigBytes;\n            var thatSigBytes = wordArray.sigBytes;\n            this.clamp();\n            if (thisSigBytes % 4) {\n                for (var i = 0; i < thatSigBytes; i++) {\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n                }\n            } else {\n                for (var j = 0; j < thatSigBytes; j += 4) {\n                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n                }\n            }\n            this.sigBytes += thatSigBytes;\n            return this;\n        }, clamp: function () {\n            var words = this.words;\n            var sigBytes = this.sigBytes;\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n            words.length = Math.ceil(sigBytes / 4);\n        }, clone: function () {\n            var clone = Base.clone.call(this);\n            clone.words = this.words.slice(0);\n            return clone;\n        }, random: function (nBytes) {\n            var words = [];\n            var r = (function (m_w) {\n                var m_w = m_w;\n                var m_z = 0x3ade68b1;\n                var mask = 0xffffffff;\n                return function () {\n                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n                    var result = ((m_z << 0x10) + m_w) & mask;\n                    result /= 0x100000000;\n                    result += 0.5;\n                    return result * (Math.random() > .5 ? 1 : -1);\n                }\n            });\n            var RANDOM = false, _r;\n            try {\n                cryptoSecureRandomInt();\n                RANDOM = true;\n            } catch (err) {}\n            for (var i = 0, rcache; i < nBytes; i += 4) {\n                if (!RANDOM) {\n                    _r = r((rcache || Math.random()) * 0x100000000);\n                    rcache = _r() * 0x3ade67b7;\n                    words.push((_r() * 0x100000000) | 0);\n                    continue;\n                }\n                words.push(cryptoSecureRandomInt());\n            }\n            return new WordArray.init(words, nBytes);\n        }\n    });\n    var C_enc = C.enc = {};\n    var Hex = C_enc.Hex = {\n        stringify: function (wordArray) {\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n            var hexChars = [];\n            for (var i = 0; i < sigBytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                hexChars.push((bite >>> 4).toString(16));\n                hexChars.push((bite & 0x0f).toString(16));\n            }\n            return hexChars.join(\'\');\n        }, parse: function (hexStr) {\n            var hexStrLength = hexStr.length;\n            var words = [];\n            for (var i = 0; i < hexStrLength; i += 2) {\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n            }\n            return new WordArray.init(words, hexStrLength / 2);\n        }\n    };\n    var Latin1 = C_enc.Latin1 = {\n        stringify: function (wordArray) {\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n            var latin1Chars = [];\n            for (var i = 0; i < sigBytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                latin1Chars.push(String.fromCharCode(bite));\n            }\n            return latin1Chars.join(\'\');\n        }, parse: function (latin1Str) {\n            var latin1StrLength = latin1Str.length;\n            var words = [];\n            for (var i = 0; i < latin1StrLength; i++) {\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n            }\n            return new WordArray.init(words, latin1StrLength);\n        }\n    };\n    var Utf8 = C_enc.Utf8 = {\n        stringify: function (wordArray) {\n            try {\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n            } catch (e) {\n                throw new Error(\'Malformed UTF-8 data\');\n            }\n        }, parse: function (utf8Str) {\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n        }\n    };\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n        reset: function () {\n            this._data = new WordArray.init();\n            this._nDataBytes = 0;\n        }, _append: function (data) {\n            if (typeof data == \'string\') {\n                data = Utf8.parse(data);\n            }\n            this._data.concat(data);\n            this._nDataBytes += data.sigBytes;\n        }, _process: function (doFlush) {\n            var processedWords;\n            var data = this._data;\n            var dataWords = data.words;\n            var dataSigBytes = data.sigBytes;\n            var blockSize = this.blockSize;\n            var blockSizeBytes = blockSize * 4;\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\n            if (doFlush) {\n                nBlocksReady = Math.ceil(nBlocksReady);\n            } else {\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n            }\n            var nWordsReady = nBlocksReady * blockSize;\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n            if (nWordsReady) {\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n                    this._doProcessBlock(dataWords, offset);\n                }\n                processedWords = dataWords.splice(0, nWordsReady);\n                data.sigBytes -= nBytesReady;\n            }\n            return new WordArray.init(processedWords, nBytesReady);\n        }, clone: function () {\n            var clone = Base.clone.call(this);\n            clone._data = this._data.clone();\n            return clone;\n        }, _minBufferSize: 0\n    });\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n        cfg: Base.extend(),\n        init: function (cfg) {\n            this.cfg = this.cfg.extend(cfg);\n            this.reset();\n        }, reset: function () {\n            BufferedBlockAlgorithm.reset.call(this);\n            this._doReset();\n        }, update: function (messageUpdate) {\n            this._append(messageUpdate);\n            this._process();\n            return this;\n        }, finalize: function (messageUpdate) {\n            if (messageUpdate) {\n                this._append(messageUpdate);\n            }\n            var hash = this._doFinalize();\n            return hash;\n        }, blockSize: 512 / 32,\n        _createHelper: function (hasher) {\n            return function (message, cfg) {\n                return new hasher.init(cfg).finalize(message);\n            };\n        }, _createHmacHelper: function (hasher) {\n            return function (message, key) {\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\n            };\n        }\n    });\n    var C_algo = C.algo = {};\n    return C;\n}(Math));\n\n(function (Math) {\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var Hasher = C_lib.Hasher;\n    var C_algo = C.algo;\n    var T = [];\n    (function () {\n        for (var i = 0; i < 64; i++) {\n            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n        }\n    }());\n    var MD5 = C_algo.MD5 = Hasher.extend({\n        _doReset: function () {\n            this._hash = new WordArray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);\n        }, _doProcessBlock: function (M, offset) {\n            for (var i = 0; i < 16; i++) {\n                var offset_i = offset + i;\n                var M_offset_i = M[offset_i];\n                M[offset_i] = ((((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00));\n            }\n            var H = this._hash.words;\n            var M_offset_0 = M[offset + 0];\n            var M_offset_1 = M[offset + 1];\n            var M_offset_2 = M[offset + 2];\n            var M_offset_3 = M[offset + 3];\n            var M_offset_4 = M[offset + 4];\n            var M_offset_5 = M[offset + 5];\n            var M_offset_6 = M[offset + 6];\n            var M_offset_7 = M[offset + 7];\n            var M_offset_8 = M[offset + 8];\n            var M_offset_9 = M[offset + 9];\n            var M_offset_10 = M[offset + 10];\n            var M_offset_11 = M[offset + 11];\n            var M_offset_12 = M[offset + 12];\n            var M_offset_13 = M[offset + 13];\n            var M_offset_14 = M[offset + 14];\n            var M_offset_15 = M[offset + 15];\n            var a = H[0];\n            var b = H[1];\n            var c = H[2];\n            var d = H[3];\n            a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n            d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n            c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n            b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n            a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n            d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n            c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n            b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n            a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n            d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n            a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n            a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n            d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n            b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n            a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n            d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n            b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n            a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n            d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n            c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n            b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n            a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n            d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n            c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n            a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n            d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n            a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n            d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n            c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n            a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n            d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n            c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n            b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n            a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n            b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n            a = II(a, b, c, d, M_offset_0, 6, T[48]);\n            d = II(d, a, b, c, M_offset_7, 10, T[49]);\n            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n            b = II(b, c, d, a, M_offset_5, 21, T[51]);\n            a = II(a, b, c, d, M_offset_12, 6, T[52]);\n            d = II(d, a, b, c, M_offset_3, 10, T[53]);\n            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n            b = II(b, c, d, a, M_offset_1, 21, T[55]);\n            a = II(a, b, c, d, M_offset_8, 6, T[56]);\n            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n            c = II(c, d, a, b, M_offset_6, 15, T[58]);\n            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n            a = II(a, b, c, d, M_offset_4, 6, T[60]);\n            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n            c = II(c, d, a, b, M_offset_2, 15, T[62]);\n            b = II(b, c, d, a, M_offset_9, 21, T[63]);\n            H[0] = (H[0] + a) | 0;\n            H[1] = (H[1] + b) | 0;\n            H[2] = (H[2] + c) | 0;\n            H[3] = (H[3] + d) | 0;\n        }, _doFinalize: function () {\n            var data = this._data;\n            var dataWords = data.words;\n            var nBitsTotal = this._nDataBytes * 8;\n            var nBitsLeft = data.sigBytes * 8;\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n            var nBitsTotalL = nBitsTotal;\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = ((((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff) | (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00));\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = ((((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff) | (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00));\n            data.sigBytes = (dataWords.length + 1) * 4;\n            this._process();\n            var hash = this._hash;\n            var H = hash.words;\n            for (var i = 0; i < 4; i++) {\n                var H_i = H[i];\n                H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n            }\n            return hash;\n        }, clone: function () {\n            var clone = Hasher.clone.call(this);\n            clone._hash = this._hash.clone();\n            return clone;\n        }\n    });\n    function FF(a, b, c, d, x, s, t) {\n        var n = a + ((b & c) | (~b & d)) + x + t;\n        return ((n << s) | (n >>> (32 - s))) + b;\n    }\n    function GG(a, b, c, d, x, s, t) {\n        var n = a + ((b & d) | (c & ~d)) + x + t;\n        return ((n << s) | (n >>> (32 - s))) + b;\n    }\n    function HH(a, b, c, d, x, s, t) {\n        var n = a + (b ^ c ^ d) + x + t;\n        return ((n << s) | (n >>> (32 - s))) + b;\n    }\n    function II(a, b, c, d, x, s, t) {\n        var n = a + (c ^ (b | ~d)) + x + t;\n        return ((n << s) | (n >>> (32 - s))) + b;\n    }\n    C.MD5 = Hasher._createHelper(MD5);\n    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n}(Math));\n\n\nvar data = "spiderapi.cn - 虫术";\nvar resultLowercase32bit = CryptoJS.MD5(data).toString(CryptoJS.enc.Hex);\nvar resultUppercase32bit = resultLowercase32bit.toUpperCase();\nvar resultLowercase16bit = resultLowercase32bit.slice(8, 24);\nvar resultUppercase16bit = resultLowercase16bit.toUpperCase();\n\nconsole.log("32 位小写值:", resultLowercase32bit);\nconsole.log("32 位大写值:", resultUppercase32bit);\nconsole.log("16 位小写值:", resultLowercase16bit);\nconsole.log("16 位大写值:", resultUppercase16bit);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n\n\n// 不借助官方或者第三方库，纯源码实现\n\nfunction md5Hash(instring) {\n    var hexcase = 0;   /* hex output format. 0 - lowercase; 1 - uppercase        */\n    var b64pad = "";  /* base-64 pad character. "=" for strict RFC compliance   */\n\n    /*\n     * These are the functions you\'ll usually want to call\n     * They take string arguments and return either hex or base-64 encoded strings\n     */\n    function hex_md5(s) {\n        return rstr2hex(rstr_md5(str2rstr_utf8(s)));\n    }\n\n    function b64_md5(s) {\n        return rstr2b64(rstr_md5(str2rstr_utf8(s)));\n    }\n\n    function any_md5(s, e) {\n        return rstr2any(rstr_md5(str2rstr_utf8(s)), e);\n    }\n\n    function hex_hmac_md5(k, d) {\n        return rstr2hex(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)));\n    }\n\n    function b64_hmac_md5(k, d) {\n        return rstr2b64(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)));\n    }\n\n    function any_hmac_md5(k, d, e) {\n        return rstr2any(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)), e);\n    }\n\n    /*\n     * Calculate the MD5 of a raw string\n     */\n    function rstr_md5(s) {\n        return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));\n    }\n\n    /*\n     * Calculate the HMAC-MD5, of a key and some data (raw strings)\n     */\n    function rstr_hmac_md5(key, data) {\n        var bkey = rstr2binl(key);\n        if (bkey.length > 16) bkey = binl_md5(bkey, key.length * 8);\n\n        var ipad = Array(16), opad = Array(16);\n        for (var i = 0; i < 16; i++) {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n\n        var hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n        return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));\n    }\n\n    /*\n     * Convert a raw string to a hex string\n     */\n    function rstr2hex(input) {\n        try {\n            hexcase\n        } catch (e) {\n            hexcase = 0;\n        }\n        var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";\n        var output = "";\n        var x;\n        for (var i = 0; i < input.length; i++) {\n            x = input.charCodeAt(i);\n            output += hex_tab.charAt((x >>> 4) & 0x0F)\n                + hex_tab.charAt(x & 0x0F);\n        }\n        return output;\n    }\n\n    /*\n     * Convert a raw string to a base-64 string\n     */\n    function rstr2b64(input) {\n        try {\n            b64pad\n        } catch (e) {\n            b64pad = \'\';\n        }\n        var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";\n        var output = "";\n        var len = input.length;\n        for (var i = 0; i < len; i += 3) {\n            var triplet = (input.charCodeAt(i) << 16)\n                | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0)\n                | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\n            for (var j = 0; j < 4; j++) {\n                if (i * 8 + j * 6 > input.length * 8) output += b64pad;\n                else output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);\n            }\n        }\n        return output;\n    }\n\n    /*\n     * Convert a raw string to an arbitrary string encoding\n     */\n    function rstr2any(input, encoding) {\n        var divisor = encoding.length;\n        var i, j, q, x, quotient;\n\n        /* Convert to an array of 16-bit big-endian values, forming the dividend */\n        var dividend = Array(Math.ceil(input.length / 2));\n        for (i = 0; i < dividend.length; i++) {\n            dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);\n        }\n\n        /*\n         * Repeatedly perform a long division. The binary array forms the dividend,\n         * the length of the encoding is the divisor. Once computed, the quotient\n         * forms the dividend for the next step. All remainders are stored for later\n         * use.\n         */\n        var full_length = Math.ceil(input.length * 8 /\n            (Math.log(encoding.length) / Math.log(2)));\n        var remainders = Array(full_length);\n        for (j = 0; j < full_length; j++) {\n            quotient = Array();\n            x = 0;\n            for (i = 0; i < dividend.length; i++) {\n                x = (x << 16) + dividend[i];\n                q = Math.floor(x / divisor);\n                x -= q * divisor;\n                if (quotient.length > 0 || q > 0)\n                    quotient[quotient.length] = q;\n            }\n            remainders[j] = x;\n            dividend = quotient;\n        }\n\n        /* Convert the remainders to the output string */\n        var output = "";\n        for (i = remainders.length - 1; i >= 0; i--)\n            output += encoding.charAt(remainders[i]);\n\n        return output;\n    }\n\n    /*\n     * Encode a string as utf-8.\n     * For efficiency, this assumes the input is valid utf-16.\n     */\n    function str2rstr_utf8(input) {\n        var output = "";\n        var i = -1;\n        var x, y;\n\n        while (++i < input.length) {\n            /* Decode utf-16 surrogate pairs */\n            x = input.charCodeAt(i);\n            y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n            if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\n                x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n                i++;\n            }\n\n            /* Encode output as utf-8 */\n            if (x <= 0x7F)\n                output += String.fromCharCode(x);\n            else if (x <= 0x7FF)\n                output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F),\n                    0x80 | (x & 0x3F));\n            else if (x <= 0xFFFF)\n                output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n            else if (x <= 0x1FFFFF)\n                output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3F),\n                    0x80 | ((x >>> 6) & 0x3F),\n                    0x80 | (x & 0x3F));\n        }\n        return output;\n    }\n\n    /*\n     * Encode a string as utf-16\n     */\n    function str2rstr_utf16le(input) {\n        var output = "";\n        for (var i = 0; i < input.length; i++)\n            output += String.fromCharCode(input.charCodeAt(i) & 0xFF,\n                (input.charCodeAt(i) >>> 8) & 0xFF);\n        return output;\n    }\n\n    function str2rstr_utf16be(input) {\n        var output = "";\n        for (var i = 0; i < input.length; i++)\n            output += String.fromCharCode((input.charCodeAt(i) >>> 8) & 0xFF,\n                input.charCodeAt(i) & 0xFF);\n        return output;\n    }\n\n    /*\n     * Convert a raw string to an array of little-endian words\n     * Characters >255 have their high-byte silently ignored.\n     */\n    function rstr2binl(input) {\n        var output = Array(input.length >> 2);\n        for (var i = 0; i < output.length; i++)\n            output[i] = 0;\n        for (var i = 0; i < input.length * 8; i += 8)\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n        return output;\n    }\n\n    /*\n     * Convert an array of little-endian words to a string\n     */\n    function binl2rstr(input) {\n        var output = "";\n        for (var i = 0; i < input.length * 32; i += 8)\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n        return output;\n    }\n\n    /*\n     * Calculate the MD5 of an array of little-endian words, and a bit length.\n     */\n    function binl_md5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << ((len) % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var a = 1732584193;\n        var b = -271733879;\n        var c = -1732584194;\n        var d = 271733878;\n\n        for (var i = 0; i < x.length; i += 16) {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n            d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n            c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n            b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n            a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n            d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n            c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n            b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n            a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n            d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n            c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n            b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n            a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n            d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n            c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n            b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n            a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n            d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n            c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n            b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n            a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n            d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n            c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n            b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n            a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n            d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n            c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n            b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n            a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n            d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n            c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n            b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n            a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n            d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n            c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n            b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n            a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n            d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n            c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n            b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n            a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n            d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n            c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n            b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n            a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n            d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n            c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n            b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n            a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n            d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n            c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n            b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n            a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n            d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n            c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n            b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n            a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n            d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n            c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n            b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n            a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n            d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n            c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n            b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n            a = safe_add(a, olda);\n            b = safe_add(b, oldb);\n            c = safe_add(c, oldc);\n            d = safe_add(d, oldd);\n        }\n        return Array(a, b, c, d);\n    }\n\n    /*\n     * These functions implement the four basic operations the algorithm uses.\n     */\n    function md5_cmn(q, a, b, x, s, t) {\n        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n    }\n\n    function md5_ff(a, b, c, d, x, s, t) {\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    function md5_gg(a, b, c, d, x, s, t) {\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    function md5_hh(a, b, c, d, x, s, t) {\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    function md5_ii(a, b, c, d, x, s, t) {\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    /*\n     * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n     * to work around bugs in some JS interpreters.\n     */\n    function safe_add(x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    }\n\n    /*\n     * Bitwise rotate a 32-bit number to the left.\n     */\n    function bit_rol(num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    }\n\n    return hex_md5(instring);\n}\n\nvar data = "spiderapi.cn - 虫术";\nvar resultLowercase32bit = md5Hash(data);\nvar resultUppercase32bit = resultLowercase32bit.toUpperCase();\nvar resultLowercase16bit = resultLowercase32bit.slice(8, 24);\nvar resultUppercase16bit = resultLowercase16bit.toUpperCase();\n\nconsole.log("32 位小写值:", resultLowercase32bit);\nconsole.log("32 位大写值:", resultUppercase32bit);\nconsole.log("16 位小写值:", resultLowercase16bit);\nconsole.log("16 位大写值:", resultUppercase16bit);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n\n\n\n# Golang\n\n// 方法一：使用 md5.New 创建哈希对象\n\npackage main\n\nimport (\n    "crypto/md5"\n    "encoding/hex"\n    "fmt"\n    "strings"\n)\n\nfunc md5Hash(data string) string {\n    hashObject := md5.New()\n    hashObject.Write([]byte(data))\n    hashBytes := hashObject.Sum(nil)\n    hashString := hex.EncodeToString(hashBytes)\n    return hashString\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n    resultLowercase32bit := md5Hash(data)\n    resultUppercase32bit := strings.ToUpper(resultLowercase32bit)\n    resultLowercase16bit := resultLowercase32bit[8:24]\n    resultUppercase16bit := strings.ToUpper(resultLowercase16bit)\n    fmt.Println("32 位小写值: ", resultLowercase32bit)\n    fmt.Println("32 位大写值: ", resultUppercase32bit)\n    fmt.Println("16 位小写值: ", resultLowercase16bit)\n    fmt.Println("16 位大写值: ", resultUppercase16bit)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n// 方法二：使用 io 包将字符串写入哈希对象\n\npackage main\n\nimport (\n    "crypto/md5"\n    "encoding/hex"\n    "fmt"\n    "io"\n    "strings"\n)\n\nfunc md5Hash(data string) string {\n    hashObject := md5.New()\n    _, err := io.WriteString(hashObject, data)\n    if err != nil {\n        fmt.Println("md5Hash error:", err)\n        return ""\n    }\n    hashBytes := hashObject.Sum(nil)\n    hashString := hex.EncodeToString(hashBytes)\n    return hashString\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n    resultLowercase32bit := md5Hash(data)\n    resultUppercase32bit := strings.ToUpper(resultLowercase32bit)\n    resultLowercase16bit := resultLowercase32bit[8:24]\n    resultUppercase16bit := strings.ToUpper(resultLowercase16bit)\n    fmt.Println("32 位小写值: ", resultLowercase32bit)\n    fmt.Println("32 位大写值: ", resultUppercase32bit)\n    fmt.Println("16 位小写值: ", resultLowercase16bit)\n    fmt.Println("16 位大写值: ", resultUppercase16bit)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n// 方法三：使用 md5.Sum 函数计算哈希值\n\npackage main\n\nimport (\n    "crypto/md5"\n    "encoding/hex"\n    "fmt"\n    "strings"\n)\n\nfunc md5Hash(data string) string {\n    hashBytes := md5.Sum([]byte(data))\n    hashString := hex.EncodeToString(hashBytes[:])\n    return hashString\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n    resultLowercase32bit := md5Hash(data)\n    resultUppercase32bit := strings.ToUpper(resultLowercase32bit)\n    resultLowercase16bit := resultLowercase32bit[8:24]\n    resultUppercase16bit := strings.ToUpper(resultLowercase16bit)\n    fmt.Println("32 位小写值: ", resultLowercase32bit)\n    fmt.Println("32 位大写值: ", resultUppercase32bit)\n    fmt.Println("16 位小写值: ", resultLowercase16bit)\n    fmt.Println("16 位大写值: ", resultUppercase16bit)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n// 不借助官方或者第三方库，纯源码实现\n\npackage main\n\nimport (\n    "bytes"\n    "encoding/binary"\n    "fmt"\n    "math"\n    "strings"\n)\n\nvar shift = [...]uint{7, 12, 17, 22, 5, 9, 14, 20, 4, 11, 16, 23, 6, 10, 15, 21}\nvar table [64]uint32\n\nfunc init() {\n    for i := range table {\n        table[i] = uint32((1 << 32) * math.Abs(math.Sin(float64(i+1))))\n    }\n}\n\nfunc md5Hash(s string) string {\n    padded := bytes.NewBuffer([]byte(s))\n    padded.WriteByte(0x80)\n    for padded.Len()%64 != 56 {\n        padded.WriteByte(0)\n    }\n    messageLenBits := uint64(len(s)) * 8\n    err := binary.Write(padded, binary.LittleEndian, messageLenBits)\n    if err != nil {\n        return ""\n    }\n  \n    var a, b, c, d uint32 = 0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476\n    var buffer [16]uint32\n    for binary.Read(padded, binary.LittleEndian, buffer[:]) == nil { // read every 64 bytes\n        a1, b1, c1, d1 := a, b, c, d\n        for j := 0; j < 64; j++ {\n            var f uint32\n            bufferIndex := j\n            round := j >> 4\n            switch round {\n            case 0:\n                f = (b1 & c1) | (^b1 & d1)\n            case 1:\n                f = (b1 & d1) | (c1 & ^d1)\n                bufferIndex = (bufferIndex*5 + 1) & 0x0F\n            case 2:\n                f = b1 ^ c1 ^ d1\n                bufferIndex = (bufferIndex*3 + 5) & 0x0F\n            case 3:\n                f = c1 ^ (b1 | ^d1)\n                bufferIndex = (bufferIndex * 7) & 0x0F\n            }\n            sa := shift[(round<<2)|(j&3)]\n            a1 += f + buffer[bufferIndex] + table[j]\n            a1, d1, c1, b1 = d1, c1, b1, a1<<sa|a1>>(32-sa)+b1\n        }\n        a, b, c, d = a+a1, b+b1, c+c1, d+d1\n    }\n  \n    var result [16]byte\n    binary.LittleEndian.PutUint32(result[0:4], a)\n    binary.LittleEndian.PutUint32(result[4:8], b)\n    binary.LittleEndian.PutUint32(result[8:12], c)\n    binary.LittleEndian.PutUint32(result[12:16], d)\n    return fmt.Sprintf("%x", result)\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n    resultLowercase32bit := md5Hash(data)\n    resultUppercase32bit := strings.ToUpper(resultLowercase32bit)\n    resultLowercase16bit := resultLowercase32bit[8:24]\n    resultUppercase16bit := strings.ToUpper(resultLowercase16bit)\n    fmt.Println("32 位小写值: ", resultLowercase32bit)\n    fmt.Println("32 位大写值: ", resultUppercase32bit)\n    fmt.Println("16 位小写值: ", resultLowercase16bit)\n    fmt.Println("16 位大写值: ", resultUppercase16bit)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n\n\n\n# 主要特征\n\nMD5 的 hash 值具有明显的特征，实现该算法的源代码里也有一些固定的特征值，没有这些特定值，就无法实现 MD5，我们可以通过密文特征和搜索源码特征值来快速判断是否为 MD5 算法。\n\n密文特征：\n\n * 密文一般为 16 位或者 32 位，其中 16 位是取的 32 位第 9~25 位的值；\n * 组成方式为字母（a-f）和数字（0-9）混合，字母可以全部是大写或者小写。\n\n源码特征值：\n\n * 0123456789ABCDEF、0123456789abcdef\n * 1732584193、-271733879、-1732584194、271733878\n * 0x67452301、0xefcdab89、0x98badcfe、0x10325476\n\nPS：某些特殊情况下，密文的长度也有可能不止 16 位或者 32 位，有可能是在官方算法上有一些魔改，通常也是在 16 位的基础上，左右填充了一些随机字符串。\n\n示例：\n\n编码类型     示例一                                示例二\n明文       01234567890                        administrators\n32 位小写   ebe596017db2f8c69136e5d6e594d365   d04952b3df94d47c04fc2dc28396a62d\n32 位大写   EBE596017DB2F8C69136E5D6E594D365   D04952B3DF94D47C04FC2DC28396A62D\n16 位小写   7db2f8c69136e5d6                   df94d47c04fc2dc2\n16 位大写   7DB2F8C69136E5D6                   DF94D47C04FC2DC2\n\n\n# 在线工具\n\nhttps://www.sojson.com/encrypt_md5.html',normalizedContent:'关于 md5 信息摘要算法\n\nmd5 信息摘要算法（英语：md5 message-digest algorithm），一种被广泛使用的密码散列函数，可以产生出一个 128 位（16 字节）的散列值（hash value），用于确保信息传输完整一致。md5 由美国密码学家罗纳德·李维斯特（ronald linn rivest）设计，于 1992 年公开，用以取代 md4 算法。这套算法的程序在 rfc 1321 标准中被加以规范。一个数据的 md5 值是唯一的，同一个数据不可能计算出多个不同的 md5 值，但是，不同数据计算出来的 md5 值是有可能一样的，知道一个 md5 值，理论上是无法还原出它的原始数据的，但 1996 年后该算法被证实存在弱点，可以被加以破解，对于需要高度安全性的数据，专家一般建议改用其他算法，如 sha-2。2004 年，证实 md5 算法无法防止碰撞（collision），因此不适用于安全性认证，如 ssl 公开密钥认证或是数字签名等用途。\n\nmd5 维基百科\n\n\n# python\n\n# 方法一：直接使用 md5 函数\n\nimport hashlib\n\n\ndata = "spiderapi.cn - 虫术"\n\nresult_lowercase_32bit = hashlib.md5(data.encode()).hexdigest()\nresult_uppercase_32bit = result_lowercase_32bit.upper()\nresult_lowercase_16bit = result_lowercase_32bit[8:-8]\nresult_uppercase_16bit = result_lowercase_16bit.upper()\n\nprint("32 位小写值: ", result_lowercase_32bit)\nprint("32 位大写值: ", result_uppercase_32bit)\nprint("16 位小写值: ", result_lowercase_16bit)\nprint("16 位大写值: ", result_uppercase_16bit)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n# 方法二：使用 new 函数创建 md5 对象\n\nimport hashlib\n\n\ndata = "spiderapi.cn - 虫术"\n\nresult_lowercase_32bit = hashlib.new("md5", data.encode()).hexdigest()\nresult_uppercase_32bit = result_lowercase_32bit.upper()\nresult_lowercase_16bit = result_lowercase_32bit[8:-8]\nresult_uppercase_16bit = result_lowercase_16bit.upper()\n\nprint("32 位小写值: ", result_lowercase_32bit)\nprint("32 位大写值: ", result_uppercase_32bit)\nprint("16 位小写值: ", result_lowercase_16bit)\nprint("16 位大写值: ", result_uppercase_16bit)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n#  方法三：通过 update 方法更新 md5 对象\n\nimport hashlib\n\n\ndata = "spiderapi.cn - 虫术"\n\nhash_object = hashlib.md5()\nhash_object.update(data.encode())\nresult_lowercase_32bit = hash_object.hexdigest()\nresult_uppercase_32bit = result_lowercase_32bit.upper()\nresult_lowercase_16bit = result_lowercase_32bit[8:-8]\nresult_uppercase_16bit = result_lowercase_16bit.upper()\n\nprint("32 位小写值: ", result_lowercase_32bit)\nprint("32 位大写值: ", result_uppercase_32bit)\nprint("16 位小写值: ", result_lowercase_16bit)\nprint("16 位大写值: ", result_uppercase_16bit)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# encoding 支持多种编码\n\nimport hashlib\n\n\ndata = "spiderapi.cn - 虫术"\n\nresult_utf8 = hashlib.md5(data.encode(encoding="utf-8")).hexdigest()\nprint("encoding utf-8:", result_utf8)\n\nresult_gbk = hashlib.md5(data.encode(encoding="gbk")).hexdigest()\nprint("encoding gbk:", result_gbk)\n\nresult_gb2312 = hashlib.md5(data.encode(encoding="gb2312")).hexdigest()\nprint("encoding gb2312:", result_gb2312)\n\nresult_18030 = hashlib.md5(data.encode(encoding="gb18030")).hexdigest()\nprint("encoding gb18030:", result_18030)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n# 不借助官方或者第三方库，纯源码实现\n\nimport binascii\n\n\nsv = [0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee, 0xf57c0faf,\n    0x4787c62a, 0xa8304613, 0xfd469501, 0x698098d8, 0x8b44f7af,\n    0xffff5bb1, 0x895cd7be, 0x6b901122, 0xfd987193, 0xa679438e,\n    0x49b40821, 0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,\n    0xd62f105d, 0x2441453, 0xd8a1e681, 0xe7d3fbc8, 0x21e1cde6,\n    0xc33707d6, 0xf4d50d87, 0x455a14ed, 0xa9e3e905, 0xfcefa3f8,\n    0x676f02d9, 0x8d2a4c8a, 0xfffa3942, 0x8771f681, 0x6d9d6122,\n    0xfde5380c, 0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,\n    0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x4881d05, 0xd9d4d039,\n    0xe6db99e5, 0x1fa27cf8, 0xc4ac5665, 0xf4292244, 0x432aff97,\n    0xab9423a7, 0xfc93a039, 0x655b59c3, 0x8f0ccc92, 0xffeff47d,\n    0x85845dd1, 0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,\n    0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391]\n\n\ndef left_circular_shift(k, bits):\n    bits = bits % 32\n    k = k % (2 ** 32)\n    upper = (k << bits) % (2 ** 32)\n    result = upper | (k >> (32 - bits))\n    return result\n\n\ndef block_divide(block, chunks):\n    result = []\n    size = len(block) // chunks\n    for i in range(0, chunks):\n        result.append(int.from_bytes(block[i * size:(i + 1) * size], byteorder="little"))\n    return result\n\n\ndef f(x, y, z):\n    return (x & y) | ((~x) & z)\n\n\ndef g(x, y, z):\n    return (x & z) | (y & (~z))\n\n\ndef h(x, y, z):\n    return x ^ y ^ z\n\n\ndef i(x, y, z):\n    return y ^ (x | (~z))\n\n\ndef ff(a, b, c, d, m, s, t):\n    result = b + left_circular_shift((a + f(b, c, d) + m + t), s)\n    return result\n\n\ndef gg(a, b, c, d, m, s, t):\n    result = b + left_circular_shift((a + g(b, c, d) + m + t), s)\n    return result\n\n\ndef hh(a, b, c, d, m, s, t):\n    result = b + left_circular_shift((a + h(b, c, d) + m + t), s)\n    return result\n\n\ndef ii(a, b, c, d, m, s, t):\n    result = b + left_circular_shift((a + i(b, c, d) + m + t), s)\n    return result\n\n\ndef fmt8(num):\n    big_hex = "{0:08x}".format(num)\n    unhex = binascii.unhexlify(big_hex)\n    result = "{0:08x}".format(int.from_bytes(unhex, byteorder=\'little\'))\n    return result\n\n\ndef bit_len(bitstring):\n    return len(bitstring) * 8\n\n\ndef md5_hash(msg):\n    # first, we pad the message\n    msg_len = bit_len(msg) % (2 ** 64)\n    msg = msg + b\'\\x80\'\n    zero_pad = (448 - (msg_len + 8) % 512) % 512\n    zero_pad //= 8\n    msg = msg + b\'\\x00\' * zero_pad + msg_len.to_bytes(8, byteorder=\'little\')\n    msg_len = bit_len(msg)\n    iterations = msg_len // 512\n    # chaining variables\n    a = 0x67452301\n    b = 0xefcdab89\n    c = 0x98badcfe\n    d = 0x10325476\n    # main loop\n    for i in range(0, iterations):\n        a = a\n        b = b\n        c = c\n        d = d\n        block = msg[i * 64:(i + 1) * 64]\n        m = block_divide(block, 16)\n        # rounds\n        a = ff(a, b, c, d, m[0], 7, sv[0])\n        d = ff(d, a, b, c, m[1], 12, sv[1])\n        c = ff(c, d, a, b, m[2], 17, sv[2])\n        b = ff(b, c, d, a, m[3], 22, sv[3])\n        a = ff(a, b, c, d, m[4], 7, sv[4])\n        d = ff(d, a, b, c, m[5], 12, sv[5])\n        c = ff(c, d, a, b, m[6], 17, sv[6])\n        b = ff(b, c, d, a, m[7], 22, sv[7])\n        a = ff(a, b, c, d, m[8], 7, sv[8])\n        d = ff(d, a, b, c, m[9], 12, sv[9])\n        c = ff(c, d, a, b, m[10], 17, sv[10])\n        b = ff(b, c, d, a, m[11], 22, sv[11])\n        a = ff(a, b, c, d, m[12], 7, sv[12])\n        d = ff(d, a, b, c, m[13], 12, sv[13])\n        c = ff(c, d, a, b, m[14], 17, sv[14])\n        b = ff(b, c, d, a, m[15], 22, sv[15])\n        a = gg(a, b, c, d, m[1], 5, sv[16])\n        d = gg(d, a, b, c, m[6], 9, sv[17])\n        c = gg(c, d, a, b, m[11], 14, sv[18])\n        b = gg(b, c, d, a, m[0], 20, sv[19])\n        a = gg(a, b, c, d, m[5], 5, sv[20])\n        d = gg(d, a, b, c, m[10], 9, sv[21])\n        c = gg(c, d, a, b, m[15], 14, sv[22])\n        b = gg(b, c, d, a, m[4], 20, sv[23])\n        a = gg(a, b, c, d, m[9], 5, sv[24])\n        d = gg(d, a, b, c, m[14], 9, sv[25])\n        c = gg(c, d, a, b, m[3], 14, sv[26])\n        b = gg(b, c, d, a, m[8], 20, sv[27])\n        a = gg(a, b, c, d, m[13], 5, sv[28])\n        d = gg(d, a, b, c, m[2], 9, sv[29])\n        c = gg(c, d, a, b, m[7], 14, sv[30])\n        b = gg(b, c, d, a, m[12], 20, sv[31])\n        a = hh(a, b, c, d, m[5], 4, sv[32])\n        d = hh(d, a, b, c, m[8], 11, sv[33])\n        c = hh(c, d, a, b, m[11], 16, sv[34])\n        b = hh(b, c, d, a, m[14], 23, sv[35])\n        a = hh(a, b, c, d, m[1], 4, sv[36])\n        d = hh(d, a, b, c, m[4], 11, sv[37])\n        c = hh(c, d, a, b, m[7], 16, sv[38])\n        b = hh(b, c, d, a, m[10], 23, sv[39])\n        a = hh(a, b, c, d, m[13], 4, sv[40])\n        d = hh(d, a, b, c, m[0], 11, sv[41])\n        c = hh(c, d, a, b, m[3], 16, sv[42])\n        b = hh(b, c, d, a, m[6], 23, sv[43])\n        a = hh(a, b, c, d, m[9], 4, sv[44])\n        d = hh(d, a, b, c, m[12], 11, sv[45])\n        c = hh(c, d, a, b, m[15], 16, sv[46])\n        b = hh(b, c, d, a, m[2], 23, sv[47])\n        a = ii(a, b, c, d, m[0], 6, sv[48])\n        d = ii(d, a, b, c, m[7], 10, sv[49])\n        c = ii(c, d, a, b, m[14], 15, sv[50])\n        b = ii(b, c, d, a, m[5], 21, sv[51])\n        a = ii(a, b, c, d, m[12], 6, sv[52])\n        d = ii(d, a, b, c, m[3], 10, sv[53])\n        c = ii(c, d, a, b, m[10], 15, sv[54])\n        b = ii(b, c, d, a, m[1], 21, sv[55])\n        a = ii(a, b, c, d, m[8], 6, sv[56])\n        d = ii(d, a, b, c, m[15], 10, sv[57])\n        c = ii(c, d, a, b, m[6], 15, sv[58])\n        b = ii(b, c, d, a, m[13], 21, sv[59])\n        a = ii(a, b, c, d, m[4], 6, sv[60])\n        d = ii(d, a, b, c, m[11], 10, sv[61])\n        c = ii(c, d, a, b, m[2], 15, sv[62])\n        b = ii(b, c, d, a, m[9], 21, sv[63])\n        a = (a + a) % (2 ** 32)\n        b = (b + b) % (2 ** 32)\n        c = (c + c) % (2 ** 32)\n        d = (d + d) % (2 ** 32)\n    result = fmt8(a) + fmt8(b) + fmt8(c) + fmt8(d)\n    return result\n\n\nif __name__ == "__main__":\n    data = \'spiderapi.cn - 虫术\'\n\n    result_lowercase_32bit = md5_hash(data.encode())\n    result_uppercase_32bit = result_lowercase_32bit.upper()\n    result_lowercase_16bit = result_lowercase_32bit[8:-8]\n    result_uppercase_16bit = result_lowercase_16bit.upper()\n\n    print("32 位小写值: ", result_lowercase_32bit)  # 4040361f7f0d278bf2781451e0639619\n    print("32 位大写值: ", result_uppercase_32bit)  # 4040361f7f0d278bf2781451e0639619\n    print("16 位小写值: ", result_lowercase_16bit)  # 7f0d278bf2781451\n    print("16 位大写值: ", result_uppercase_16bit)  # 7f0d278bf2781451\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n\n\n\n# javascript\n\n// 安装依赖 npm install crypto-js\n\nvar cryptojs = require("crypto-js");\n\nvar data = "spiderapi.cn - 虫术";\nvar resultlowercase32bit = cryptojs.md5(data).tostring(cryptojs.enc.hex);\nvar resultuppercase32bit = resultlowercase32bit.touppercase();\nvar resultlowercase16bit = resultlowercase32bit.slice(8, 24);\nvar resultuppercase16bit = resultlowercase16bit.touppercase();\n\nconsole.log("32 位小写值:", resultlowercase32bit);\nconsole.log("32 位大写值:", resultuppercase32bit);\nconsole.log("16 位小写值:", resultlowercase16bit);\nconsole.log("16 位大写值:", resultuppercase16bit);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n// 安装依赖 npm install crypto\n\nvar crypto = require("crypto");\n\nvar data = "spiderapi.cn - 虫术";\nvar hashobject = crypto.createhash("md5");\nhashobject.update(data);\nvar resultlowercase32bit = hashobject.digest("hex");\nvar resultuppercase32bit = resultlowercase32bit.touppercase();\nvar resultlowercase16bit = resultlowercase32bit.slice(8, 24);\nvar resultuppercase16bit = resultlowercase16bit.touppercase();\n\nconsole.log("32 位小写值:", resultlowercase32bit);\nconsole.log("32 位大写值:", resultuppercase32bit);\nconsole.log("16 位小写值:", resultlowercase16bit);\nconsole.log("16 位大写值:", resultuppercase16bit);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n// 安装依赖 npm install md5\n\nvar md5 = require("md5");\n\nvar data = "spiderapi.cn - 虫术";\nvar resultlowercase32bit = md5(data);\nvar resultuppercase32bit = resultlowercase32bit.touppercase();\nvar resultlowercase16bit = resultlowercase32bit.slice(8, 24);\nvar resultuppercase16bit = resultlowercase16bit.touppercase();\n\nconsole.log("32 位小写值:", resultlowercase32bit);\nconsole.log("32 位大写值:", resultuppercase32bit);\nconsole.log("16 位小写值:", resultlowercase16bit);\nconsole.log("16 位大写值:", resultuppercase16bit);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n// 不借助官方或者第三方库，纯源码实现\n\nvar cryptojs = cryptojs || (function (math, undefined) {\n    var crypto;\n    if (typeof window !== \'undefined\' && window.crypto) {\n        crypto = window.crypto;\n    }\n    if (typeof self !== \'undefined\' && self.crypto) {\n        crypto = self.crypto;\n    }\n    if (typeof globalthis !== \'undefined\' && globalthis.crypto) {\n        crypto = globalthis.crypto;\n    }\n    if (!crypto && typeof window !== \'undefined\' && window.mscrypto) {\n        crypto = window.mscrypto;\n    }\n    if (!crypto && typeof global !== \'undefined\' && global.crypto) {\n        crypto = global.crypto;\n    }\n    if (!crypto && typeof require === \'function\') {\n        try {\n            crypto = require(\'crypto\');\n        } catch (err) {}\n    }\n    var cryptosecurerandomint = function () {\n        if (crypto) {\n            if (typeof crypto.getrandomvalues === \'function\') {\n                try {\n                    return crypto.getrandomvalues(new uint32array(1))[0];\n                } catch (err) {}\n            }\n            if (typeof crypto.randombytes === \'function\') {\n                try {\n                    return crypto.randombytes(4).readint32le();\n                } catch (err) {}\n            }\n        }\n        throw new error(\'native crypto module could not be used to get secure random number.\');\n    };\n    var create = object.create || (function () {\n        function f() {}\n        return function (obj) {\n            var subtype;\n            f.prototype = obj;\n            subtype = new f();\n            f.prototype = null;\n            return subtype;\n        };\n    }());\n    var c = {};\n    var c_lib = c.lib = {};\n    var base = c_lib.base = (function () {\n        return {\n            extend: function (overrides) {\n                var subtype = create(this);\n                if (overrides) {\n                    subtype.mixin(overrides);\n                }\n                if (!subtype.hasownproperty(\'init\') || this.init === subtype.init) {\n                    subtype.init = function () {\n                        subtype.$super.init.apply(this, arguments);\n                    };\n                }\n                subtype.init.prototype = subtype;\n                subtype.$super = this;\n                return subtype;\n            }, create: function () {\n                var instance = this.extend();\n                instance.init.apply(instance, arguments);\n                return instance;\n            }, init: function () {}, mixin: function (properties) {\n                for (var propertyname in properties) {\n                    if (properties.hasownproperty(propertyname)) {\n                        this[propertyname] = properties[propertyname];\n                    }\n                }\n                if (properties.hasownproperty(\'tostring\')) {\n                    this.tostring = properties.tostring;\n                }\n            }, clone: function () {\n                return this.init.prototype.extend(this);\n            }\n        };\n    }());\n    var wordarray = c_lib.wordarray = base.extend({\n        init: function (words, sigbytes) {\n            words = this.words = words || [];\n            if (sigbytes != undefined) {\n                this.sigbytes = sigbytes;\n            } else {\n                this.sigbytes = words.length * 4;\n            }\n        }, tostring: function (encoder) {\n            return (encoder || hex).stringify(this);\n        }, concat: function (wordarray) {\n            var thiswords = this.words;\n            var thatwords = wordarray.words;\n            var thissigbytes = this.sigbytes;\n            var thatsigbytes = wordarray.sigbytes;\n            this.clamp();\n            if (thissigbytes % 4) {\n                for (var i = 0; i < thatsigbytes; i++) {\n                    var thatbyte = (thatwords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                    thiswords[(thissigbytes + i) >>> 2] |= thatbyte << (24 - ((thissigbytes + i) % 4) * 8);\n                }\n            } else {\n                for (var j = 0; j < thatsigbytes; j += 4) {\n                    thiswords[(thissigbytes + j) >>> 2] = thatwords[j >>> 2];\n                }\n            }\n            this.sigbytes += thatsigbytes;\n            return this;\n        }, clamp: function () {\n            var words = this.words;\n            var sigbytes = this.sigbytes;\n            words[sigbytes >>> 2] &= 0xffffffff << (32 - (sigbytes % 4) * 8);\n            words.length = math.ceil(sigbytes / 4);\n        }, clone: function () {\n            var clone = base.clone.call(this);\n            clone.words = this.words.slice(0);\n            return clone;\n        }, random: function (nbytes) {\n            var words = [];\n            var r = (function (m_w) {\n                var m_w = m_w;\n                var m_z = 0x3ade68b1;\n                var mask = 0xffffffff;\n                return function () {\n                    m_z = (0x9069 * (m_z & 0xffff) + (m_z >> 0x10)) & mask;\n                    m_w = (0x4650 * (m_w & 0xffff) + (m_w >> 0x10)) & mask;\n                    var result = ((m_z << 0x10) + m_w) & mask;\n                    result /= 0x100000000;\n                    result += 0.5;\n                    return result * (math.random() > .5 ? 1 : -1);\n                }\n            });\n            var random = false, _r;\n            try {\n                cryptosecurerandomint();\n                random = true;\n            } catch (err) {}\n            for (var i = 0, rcache; i < nbytes; i += 4) {\n                if (!random) {\n                    _r = r((rcache || math.random()) * 0x100000000);\n                    rcache = _r() * 0x3ade67b7;\n                    words.push((_r() * 0x100000000) | 0);\n                    continue;\n                }\n                words.push(cryptosecurerandomint());\n            }\n            return new wordarray.init(words, nbytes);\n        }\n    });\n    var c_enc = c.enc = {};\n    var hex = c_enc.hex = {\n        stringify: function (wordarray) {\n            var words = wordarray.words;\n            var sigbytes = wordarray.sigbytes;\n            var hexchars = [];\n            for (var i = 0; i < sigbytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                hexchars.push((bite >>> 4).tostring(16));\n                hexchars.push((bite & 0x0f).tostring(16));\n            }\n            return hexchars.join(\'\');\n        }, parse: function (hexstr) {\n            var hexstrlength = hexstr.length;\n            var words = [];\n            for (var i = 0; i < hexstrlength; i += 2) {\n                words[i >>> 3] |= parseint(hexstr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n            }\n            return new wordarray.init(words, hexstrlength / 2);\n        }\n    };\n    var latin1 = c_enc.latin1 = {\n        stringify: function (wordarray) {\n            var words = wordarray.words;\n            var sigbytes = wordarray.sigbytes;\n            var latin1chars = [];\n            for (var i = 0; i < sigbytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                latin1chars.push(string.fromcharcode(bite));\n            }\n            return latin1chars.join(\'\');\n        }, parse: function (latin1str) {\n            var latin1strlength = latin1str.length;\n            var words = [];\n            for (var i = 0; i < latin1strlength; i++) {\n                words[i >>> 2] |= (latin1str.charcodeat(i) & 0xff) << (24 - (i % 4) * 8);\n            }\n            return new wordarray.init(words, latin1strlength);\n        }\n    };\n    var utf8 = c_enc.utf8 = {\n        stringify: function (wordarray) {\n            try {\n                return decodeuricomponent(escape(latin1.stringify(wordarray)));\n            } catch (e) {\n                throw new error(\'malformed utf-8 data\');\n            }\n        }, parse: function (utf8str) {\n            return latin1.parse(unescape(encodeuricomponent(utf8str)));\n        }\n    };\n    var bufferedblockalgorithm = c_lib.bufferedblockalgorithm = base.extend({\n        reset: function () {\n            this._data = new wordarray.init();\n            this._ndatabytes = 0;\n        }, _append: function (data) {\n            if (typeof data == \'string\') {\n                data = utf8.parse(data);\n            }\n            this._data.concat(data);\n            this._ndatabytes += data.sigbytes;\n        }, _process: function (doflush) {\n            var processedwords;\n            var data = this._data;\n            var datawords = data.words;\n            var datasigbytes = data.sigbytes;\n            var blocksize = this.blocksize;\n            var blocksizebytes = blocksize * 4;\n            var nblocksready = datasigbytes / blocksizebytes;\n            if (doflush) {\n                nblocksready = math.ceil(nblocksready);\n            } else {\n                nblocksready = math.max((nblocksready | 0) - this._minbuffersize, 0);\n            }\n            var nwordsready = nblocksready * blocksize;\n            var nbytesready = math.min(nwordsready * 4, datasigbytes);\n            if (nwordsready) {\n                for (var offset = 0; offset < nwordsready; offset += blocksize) {\n                    this._doprocessblock(datawords, offset);\n                }\n                processedwords = datawords.splice(0, nwordsready);\n                data.sigbytes -= nbytesready;\n            }\n            return new wordarray.init(processedwords, nbytesready);\n        }, clone: function () {\n            var clone = base.clone.call(this);\n            clone._data = this._data.clone();\n            return clone;\n        }, _minbuffersize: 0\n    });\n    var hasher = c_lib.hasher = bufferedblockalgorithm.extend({\n        cfg: base.extend(),\n        init: function (cfg) {\n            this.cfg = this.cfg.extend(cfg);\n            this.reset();\n        }, reset: function () {\n            bufferedblockalgorithm.reset.call(this);\n            this._doreset();\n        }, update: function (messageupdate) {\n            this._append(messageupdate);\n            this._process();\n            return this;\n        }, finalize: function (messageupdate) {\n            if (messageupdate) {\n                this._append(messageupdate);\n            }\n            var hash = this._dofinalize();\n            return hash;\n        }, blocksize: 512 / 32,\n        _createhelper: function (hasher) {\n            return function (message, cfg) {\n                return new hasher.init(cfg).finalize(message);\n            };\n        }, _createhmachelper: function (hasher) {\n            return function (message, key) {\n                return new c_algo.hmac.init(hasher, key).finalize(message);\n            };\n        }\n    });\n    var c_algo = c.algo = {};\n    return c;\n}(math));\n\n(function (math) {\n    var c = cryptojs;\n    var c_lib = c.lib;\n    var wordarray = c_lib.wordarray;\n    var hasher = c_lib.hasher;\n    var c_algo = c.algo;\n    var t = [];\n    (function () {\n        for (var i = 0; i < 64; i++) {\n            t[i] = (math.abs(math.sin(i + 1)) * 0x100000000) | 0;\n        }\n    }());\n    var md5 = c_algo.md5 = hasher.extend({\n        _doreset: function () {\n            this._hash = new wordarray.init([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);\n        }, _doprocessblock: function (m, offset) {\n            for (var i = 0; i < 16; i++) {\n                var offset_i = offset + i;\n                var m_offset_i = m[offset_i];\n                m[offset_i] = ((((m_offset_i << 8) | (m_offset_i >>> 24)) & 0x00ff00ff) | (((m_offset_i << 24) | (m_offset_i >>> 8)) & 0xff00ff00));\n            }\n            var h = this._hash.words;\n            var m_offset_0 = m[offset + 0];\n            var m_offset_1 = m[offset + 1];\n            var m_offset_2 = m[offset + 2];\n            var m_offset_3 = m[offset + 3];\n            var m_offset_4 = m[offset + 4];\n            var m_offset_5 = m[offset + 5];\n            var m_offset_6 = m[offset + 6];\n            var m_offset_7 = m[offset + 7];\n            var m_offset_8 = m[offset + 8];\n            var m_offset_9 = m[offset + 9];\n            var m_offset_10 = m[offset + 10];\n            var m_offset_11 = m[offset + 11];\n            var m_offset_12 = m[offset + 12];\n            var m_offset_13 = m[offset + 13];\n            var m_offset_14 = m[offset + 14];\n            var m_offset_15 = m[offset + 15];\n            var a = h[0];\n            var b = h[1];\n            var c = h[2];\n            var d = h[3];\n            a = ff(a, b, c, d, m_offset_0, 7, t[0]);\n            d = ff(d, a, b, c, m_offset_1, 12, t[1]);\n            c = ff(c, d, a, b, m_offset_2, 17, t[2]);\n            b = ff(b, c, d, a, m_offset_3, 22, t[3]);\n            a = ff(a, b, c, d, m_offset_4, 7, t[4]);\n            d = ff(d, a, b, c, m_offset_5, 12, t[5]);\n            c = ff(c, d, a, b, m_offset_6, 17, t[6]);\n            b = ff(b, c, d, a, m_offset_7, 22, t[7]);\n            a = ff(a, b, c, d, m_offset_8, 7, t[8]);\n            d = ff(d, a, b, c, m_offset_9, 12, t[9]);\n            c = ff(c, d, a, b, m_offset_10, 17, t[10]);\n            b = ff(b, c, d, a, m_offset_11, 22, t[11]);\n            a = ff(a, b, c, d, m_offset_12, 7, t[12]);\n            d = ff(d, a, b, c, m_offset_13, 12, t[13]);\n            c = ff(c, d, a, b, m_offset_14, 17, t[14]);\n            b = ff(b, c, d, a, m_offset_15, 22, t[15]);\n            a = gg(a, b, c, d, m_offset_1, 5, t[16]);\n            d = gg(d, a, b, c, m_offset_6, 9, t[17]);\n            c = gg(c, d, a, b, m_offset_11, 14, t[18]);\n            b = gg(b, c, d, a, m_offset_0, 20, t[19]);\n            a = gg(a, b, c, d, m_offset_5, 5, t[20]);\n            d = gg(d, a, b, c, m_offset_10, 9, t[21]);\n            c = gg(c, d, a, b, m_offset_15, 14, t[22]);\n            b = gg(b, c, d, a, m_offset_4, 20, t[23]);\n            a = gg(a, b, c, d, m_offset_9, 5, t[24]);\n            d = gg(d, a, b, c, m_offset_14, 9, t[25]);\n            c = gg(c, d, a, b, m_offset_3, 14, t[26]);\n            b = gg(b, c, d, a, m_offset_8, 20, t[27]);\n            a = gg(a, b, c, d, m_offset_13, 5, t[28]);\n            d = gg(d, a, b, c, m_offset_2, 9, t[29]);\n            c = gg(c, d, a, b, m_offset_7, 14, t[30]);\n            b = gg(b, c, d, a, m_offset_12, 20, t[31]);\n            a = hh(a, b, c, d, m_offset_5, 4, t[32]);\n            d = hh(d, a, b, c, m_offset_8, 11, t[33]);\n            c = hh(c, d, a, b, m_offset_11, 16, t[34]);\n            b = hh(b, c, d, a, m_offset_14, 23, t[35]);\n            a = hh(a, b, c, d, m_offset_1, 4, t[36]);\n            d = hh(d, a, b, c, m_offset_4, 11, t[37]);\n            c = hh(c, d, a, b, m_offset_7, 16, t[38]);\n            b = hh(b, c, d, a, m_offset_10, 23, t[39]);\n            a = hh(a, b, c, d, m_offset_13, 4, t[40]);\n            d = hh(d, a, b, c, m_offset_0, 11, t[41]);\n            c = hh(c, d, a, b, m_offset_3, 16, t[42]);\n            b = hh(b, c, d, a, m_offset_6, 23, t[43]);\n            a = hh(a, b, c, d, m_offset_9, 4, t[44]);\n            d = hh(d, a, b, c, m_offset_12, 11, t[45]);\n            c = hh(c, d, a, b, m_offset_15, 16, t[46]);\n            b = hh(b, c, d, a, m_offset_2, 23, t[47]);\n            a = ii(a, b, c, d, m_offset_0, 6, t[48]);\n            d = ii(d, a, b, c, m_offset_7, 10, t[49]);\n            c = ii(c, d, a, b, m_offset_14, 15, t[50]);\n            b = ii(b, c, d, a, m_offset_5, 21, t[51]);\n            a = ii(a, b, c, d, m_offset_12, 6, t[52]);\n            d = ii(d, a, b, c, m_offset_3, 10, t[53]);\n            c = ii(c, d, a, b, m_offset_10, 15, t[54]);\n            b = ii(b, c, d, a, m_offset_1, 21, t[55]);\n            a = ii(a, b, c, d, m_offset_8, 6, t[56]);\n            d = ii(d, a, b, c, m_offset_15, 10, t[57]);\n            c = ii(c, d, a, b, m_offset_6, 15, t[58]);\n            b = ii(b, c, d, a, m_offset_13, 21, t[59]);\n            a = ii(a, b, c, d, m_offset_4, 6, t[60]);\n            d = ii(d, a, b, c, m_offset_11, 10, t[61]);\n            c = ii(c, d, a, b, m_offset_2, 15, t[62]);\n            b = ii(b, c, d, a, m_offset_9, 21, t[63]);\n            h[0] = (h[0] + a) | 0;\n            h[1] = (h[1] + b) | 0;\n            h[2] = (h[2] + c) | 0;\n            h[3] = (h[3] + d) | 0;\n        }, _dofinalize: function () {\n            var data = this._data;\n            var datawords = data.words;\n            var nbitstotal = this._ndatabytes * 8;\n            var nbitsleft = data.sigbytes * 8;\n            datawords[nbitsleft >>> 5] |= 0x80 << (24 - nbitsleft % 32);\n            var nbitstotalh = math.floor(nbitstotal / 0x100000000);\n            var nbitstotall = nbitstotal;\n            datawords[(((nbitsleft + 64) >>> 9) << 4) + 15] = ((((nbitstotalh << 8) | (nbitstotalh >>> 24)) & 0x00ff00ff) | (((nbitstotalh << 24) | (nbitstotalh >>> 8)) & 0xff00ff00));\n            datawords[(((nbitsleft + 64) >>> 9) << 4) + 14] = ((((nbitstotall << 8) | (nbitstotall >>> 24)) & 0x00ff00ff) | (((nbitstotall << 24) | (nbitstotall >>> 8)) & 0xff00ff00));\n            data.sigbytes = (datawords.length + 1) * 4;\n            this._process();\n            var hash = this._hash;\n            var h = hash.words;\n            for (var i = 0; i < 4; i++) {\n                var h_i = h[i];\n                h[i] = (((h_i << 8) | (h_i >>> 24)) & 0x00ff00ff) | (((h_i << 24) | (h_i >>> 8)) & 0xff00ff00);\n            }\n            return hash;\n        }, clone: function () {\n            var clone = hasher.clone.call(this);\n            clone._hash = this._hash.clone();\n            return clone;\n        }\n    });\n    function ff(a, b, c, d, x, s, t) {\n        var n = a + ((b & c) | (~b & d)) + x + t;\n        return ((n << s) | (n >>> (32 - s))) + b;\n    }\n    function gg(a, b, c, d, x, s, t) {\n        var n = a + ((b & d) | (c & ~d)) + x + t;\n        return ((n << s) | (n >>> (32 - s))) + b;\n    }\n    function hh(a, b, c, d, x, s, t) {\n        var n = a + (b ^ c ^ d) + x + t;\n        return ((n << s) | (n >>> (32 - s))) + b;\n    }\n    function ii(a, b, c, d, x, s, t) {\n        var n = a + (c ^ (b | ~d)) + x + t;\n        return ((n << s) | (n >>> (32 - s))) + b;\n    }\n    c.md5 = hasher._createhelper(md5);\n    c.hmacmd5 = hasher._createhmachelper(md5);\n}(math));\n\n\nvar data = "spiderapi.cn - 虫术";\nvar resultlowercase32bit = cryptojs.md5(data).tostring(cryptojs.enc.hex);\nvar resultuppercase32bit = resultlowercase32bit.touppercase();\nvar resultlowercase16bit = resultlowercase32bit.slice(8, 24);\nvar resultuppercase16bit = resultlowercase16bit.touppercase();\n\nconsole.log("32 位小写值:", resultlowercase32bit);\nconsole.log("32 位大写值:", resultuppercase32bit);\nconsole.log("16 位小写值:", resultlowercase16bit);\nconsole.log("16 位大写值:", resultuppercase16bit);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n\n\n// 不借助官方或者第三方库，纯源码实现\n\nfunction md5hash(instring) {\n    var hexcase = 0;   /* hex output format. 0 - lowercase; 1 - uppercase        */\n    var b64pad = "";  /* base-64 pad character. "=" for strict rfc compliance   */\n\n    /*\n     * these are the functions you\'ll usually want to call\n     * they take string arguments and return either hex or base-64 encoded strings\n     */\n    function hex_md5(s) {\n        return rstr2hex(rstr_md5(str2rstr_utf8(s)));\n    }\n\n    function b64_md5(s) {\n        return rstr2b64(rstr_md5(str2rstr_utf8(s)));\n    }\n\n    function any_md5(s, e) {\n        return rstr2any(rstr_md5(str2rstr_utf8(s)), e);\n    }\n\n    function hex_hmac_md5(k, d) {\n        return rstr2hex(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)));\n    }\n\n    function b64_hmac_md5(k, d) {\n        return rstr2b64(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)));\n    }\n\n    function any_hmac_md5(k, d, e) {\n        return rstr2any(rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d)), e);\n    }\n\n    /*\n     * calculate the md5 of a raw string\n     */\n    function rstr_md5(s) {\n        return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));\n    }\n\n    /*\n     * calculate the hmac-md5, of a key and some data (raw strings)\n     */\n    function rstr_hmac_md5(key, data) {\n        var bkey = rstr2binl(key);\n        if (bkey.length > 16) bkey = binl_md5(bkey, key.length * 8);\n\n        var ipad = array(16), opad = array(16);\n        for (var i = 0; i < 16; i++) {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5c5c5c5c;\n        }\n\n        var hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n        return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));\n    }\n\n    /*\n     * convert a raw string to a hex string\n     */\n    function rstr2hex(input) {\n        try {\n            hexcase\n        } catch (e) {\n            hexcase = 0;\n        }\n        var hex_tab = hexcase ? "0123456789abcdef" : "0123456789abcdef";\n        var output = "";\n        var x;\n        for (var i = 0; i < input.length; i++) {\n            x = input.charcodeat(i);\n            output += hex_tab.charat((x >>> 4) & 0x0f)\n                + hex_tab.charat(x & 0x0f);\n        }\n        return output;\n    }\n\n    /*\n     * convert a raw string to a base-64 string\n     */\n    function rstr2b64(input) {\n        try {\n            b64pad\n        } catch (e) {\n            b64pad = \'\';\n        }\n        var tab = "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789+/";\n        var output = "";\n        var len = input.length;\n        for (var i = 0; i < len; i += 3) {\n            var triplet = (input.charcodeat(i) << 16)\n                | (i + 1 < len ? input.charcodeat(i + 1) << 8 : 0)\n                | (i + 2 < len ? input.charcodeat(i + 2) : 0);\n            for (var j = 0; j < 4; j++) {\n                if (i * 8 + j * 6 > input.length * 8) output += b64pad;\n                else output += tab.charat((triplet >>> 6 * (3 - j)) & 0x3f);\n            }\n        }\n        return output;\n    }\n\n    /*\n     * convert a raw string to an arbitrary string encoding\n     */\n    function rstr2any(input, encoding) {\n        var divisor = encoding.length;\n        var i, j, q, x, quotient;\n\n        /* convert to an array of 16-bit big-endian values, forming the dividend */\n        var dividend = array(math.ceil(input.length / 2));\n        for (i = 0; i < dividend.length; i++) {\n            dividend[i] = (input.charcodeat(i * 2) << 8) | input.charcodeat(i * 2 + 1);\n        }\n\n        /*\n         * repeatedly perform a long division. the binary array forms the dividend,\n         * the length of the encoding is the divisor. once computed, the quotient\n         * forms the dividend for the next step. all remainders are stored for later\n         * use.\n         */\n        var full_length = math.ceil(input.length * 8 /\n            (math.log(encoding.length) / math.log(2)));\n        var remainders = array(full_length);\n        for (j = 0; j < full_length; j++) {\n            quotient = array();\n            x = 0;\n            for (i = 0; i < dividend.length; i++) {\n                x = (x << 16) + dividend[i];\n                q = math.floor(x / divisor);\n                x -= q * divisor;\n                if (quotient.length > 0 || q > 0)\n                    quotient[quotient.length] = q;\n            }\n            remainders[j] = x;\n            dividend = quotient;\n        }\n\n        /* convert the remainders to the output string */\n        var output = "";\n        for (i = remainders.length - 1; i >= 0; i--)\n            output += encoding.charat(remainders[i]);\n\n        return output;\n    }\n\n    /*\n     * encode a string as utf-8.\n     * for efficiency, this assumes the input is valid utf-16.\n     */\n    function str2rstr_utf8(input) {\n        var output = "";\n        var i = -1;\n        var x, y;\n\n        while (++i < input.length) {\n            /* decode utf-16 surrogate pairs */\n            x = input.charcodeat(i);\n            y = i + 1 < input.length ? input.charcodeat(i + 1) : 0;\n            if (0xd800 <= x && x <= 0xdbff && 0xdc00 <= y && y <= 0xdfff) {\n                x = 0x10000 + ((x & 0x03ff) << 10) + (y & 0x03ff);\n                i++;\n            }\n\n            /* encode output as utf-8 */\n            if (x <= 0x7f)\n                output += string.fromcharcode(x);\n            else if (x <= 0x7ff)\n                output += string.fromcharcode(0xc0 | ((x >>> 6) & 0x1f),\n                    0x80 | (x & 0x3f));\n            else if (x <= 0xffff)\n                output += string.fromcharcode(0xe0 | ((x >>> 12) & 0x0f),\n                    0x80 | ((x >>> 6) & 0x3f),\n                    0x80 | (x & 0x3f));\n            else if (x <= 0x1fffff)\n                output += string.fromcharcode(0xf0 | ((x >>> 18) & 0x07),\n                    0x80 | ((x >>> 12) & 0x3f),\n                    0x80 | ((x >>> 6) & 0x3f),\n                    0x80 | (x & 0x3f));\n        }\n        return output;\n    }\n\n    /*\n     * encode a string as utf-16\n     */\n    function str2rstr_utf16le(input) {\n        var output = "";\n        for (var i = 0; i < input.length; i++)\n            output += string.fromcharcode(input.charcodeat(i) & 0xff,\n                (input.charcodeat(i) >>> 8) & 0xff);\n        return output;\n    }\n\n    function str2rstr_utf16be(input) {\n        var output = "";\n        for (var i = 0; i < input.length; i++)\n            output += string.fromcharcode((input.charcodeat(i) >>> 8) & 0xff,\n                input.charcodeat(i) & 0xff);\n        return output;\n    }\n\n    /*\n     * convert a raw string to an array of little-endian words\n     * characters >255 have their high-byte silently ignored.\n     */\n    function rstr2binl(input) {\n        var output = array(input.length >> 2);\n        for (var i = 0; i < output.length; i++)\n            output[i] = 0;\n        for (var i = 0; i < input.length * 8; i += 8)\n            output[i >> 5] |= (input.charcodeat(i / 8) & 0xff) << (i % 32);\n        return output;\n    }\n\n    /*\n     * convert an array of little-endian words to a string\n     */\n    function binl2rstr(input) {\n        var output = "";\n        for (var i = 0; i < input.length * 32; i += 8)\n            output += string.fromcharcode((input[i >> 5] >>> (i % 32)) & 0xff);\n        return output;\n    }\n\n    /*\n     * calculate the md5 of an array of little-endian words, and a bit length.\n     */\n    function binl_md5(x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << ((len) % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var a = 1732584193;\n        var b = -271733879;\n        var c = -1732584194;\n        var d = 271733878;\n\n        for (var i = 0; i < x.length; i += 16) {\n            var olda = a;\n            var oldb = b;\n            var oldc = c;\n            var oldd = d;\n\n            a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);\n            d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);\n            c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);\n            b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);\n            a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);\n            d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);\n            c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);\n            b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);\n            a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);\n            d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);\n            c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n            b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n            a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);\n            d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n            c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n            b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n            a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);\n            d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);\n            c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);\n            b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);\n            a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);\n            d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);\n            c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n            b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);\n            a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);\n            d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);\n            c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);\n            b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);\n            a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);\n            d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);\n            c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);\n            b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n            a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);\n            d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);\n            c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);\n            b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n            a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);\n            d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);\n            c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);\n            b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n            a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);\n            d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);\n            c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);\n            b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);\n            a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);\n            d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n            c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);\n            b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n            a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);\n            d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);\n            c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n            b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);\n            a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);\n            d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);\n            c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n            b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);\n            a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);\n            d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n            c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);\n            b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);\n            a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);\n            d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n            c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);\n            b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n            a = safe_add(a, olda);\n            b = safe_add(b, oldb);\n            c = safe_add(c, oldc);\n            d = safe_add(d, oldd);\n        }\n        return array(a, b, c, d);\n    }\n\n    /*\n     * these functions implement the four basic operations the algorithm uses.\n     */\n    function md5_cmn(q, a, b, x, s, t) {\n        return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);\n    }\n\n    function md5_ff(a, b, c, d, x, s, t) {\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    }\n\n    function md5_gg(a, b, c, d, x, s, t) {\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    }\n\n    function md5_hh(a, b, c, d, x, s, t) {\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    }\n\n    function md5_ii(a, b, c, d, x, s, t) {\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    }\n\n    /*\n     * add integers, wrapping at 2^32. this uses 16-bit operations internally\n     * to work around bugs in some js interpreters.\n     */\n    function safe_add(x, y) {\n        var lsw = (x & 0xffff) + (y & 0xffff);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xffff);\n    }\n\n    /*\n     * bitwise rotate a 32-bit number to the left.\n     */\n    function bit_rol(num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    }\n\n    return hex_md5(instring);\n}\n\nvar data = "spiderapi.cn - 虫术";\nvar resultlowercase32bit = md5hash(data);\nvar resultuppercase32bit = resultlowercase32bit.touppercase();\nvar resultlowercase16bit = resultlowercase32bit.slice(8, 24);\nvar resultuppercase16bit = resultlowercase16bit.touppercase();\n\nconsole.log("32 位小写值:", resultlowercase32bit);\nconsole.log("32 位大写值:", resultuppercase32bit);\nconsole.log("16 位小写值:", resultlowercase16bit);\nconsole.log("16 位大写值:", resultuppercase16bit);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n\n\n\n# golang\n\n// 方法一：使用 md5.new 创建哈希对象\n\npackage main\n\nimport (\n    "crypto/md5"\n    "encoding/hex"\n    "fmt"\n    "strings"\n)\n\nfunc md5hash(data string) string {\n    hashobject := md5.new()\n    hashobject.write([]byte(data))\n    hashbytes := hashobject.sum(nil)\n    hashstring := hex.encodetostring(hashbytes)\n    return hashstring\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n    resultlowercase32bit := md5hash(data)\n    resultuppercase32bit := strings.toupper(resultlowercase32bit)\n    resultlowercase16bit := resultlowercase32bit[8:24]\n    resultuppercase16bit := strings.toupper(resultlowercase16bit)\n    fmt.println("32 位小写值: ", resultlowercase32bit)\n    fmt.println("32 位大写值: ", resultuppercase32bit)\n    fmt.println("16 位小写值: ", resultlowercase16bit)\n    fmt.println("16 位大写值: ", resultuppercase16bit)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n// 方法二：使用 io 包将字符串写入哈希对象\n\npackage main\n\nimport (\n    "crypto/md5"\n    "encoding/hex"\n    "fmt"\n    "io"\n    "strings"\n)\n\nfunc md5hash(data string) string {\n    hashobject := md5.new()\n    _, err := io.writestring(hashobject, data)\n    if err != nil {\n        fmt.println("md5hash error:", err)\n        return ""\n    }\n    hashbytes := hashobject.sum(nil)\n    hashstring := hex.encodetostring(hashbytes)\n    return hashstring\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n    resultlowercase32bit := md5hash(data)\n    resultuppercase32bit := strings.toupper(resultlowercase32bit)\n    resultlowercase16bit := resultlowercase32bit[8:24]\n    resultuppercase16bit := strings.toupper(resultlowercase16bit)\n    fmt.println("32 位小写值: ", resultlowercase32bit)\n    fmt.println("32 位大写值: ", resultuppercase32bit)\n    fmt.println("16 位小写值: ", resultlowercase16bit)\n    fmt.println("16 位大写值: ", resultuppercase16bit)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n// 方法三：使用 md5.sum 函数计算哈希值\n\npackage main\n\nimport (\n    "crypto/md5"\n    "encoding/hex"\n    "fmt"\n    "strings"\n)\n\nfunc md5hash(data string) string {\n    hashbytes := md5.sum([]byte(data))\n    hashstring := hex.encodetostring(hashbytes[:])\n    return hashstring\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n    resultlowercase32bit := md5hash(data)\n    resultuppercase32bit := strings.toupper(resultlowercase32bit)\n    resultlowercase16bit := resultlowercase32bit[8:24]\n    resultuppercase16bit := strings.toupper(resultlowercase16bit)\n    fmt.println("32 位小写值: ", resultlowercase32bit)\n    fmt.println("32 位大写值: ", resultuppercase32bit)\n    fmt.println("16 位小写值: ", resultlowercase16bit)\n    fmt.println("16 位大写值: ", resultuppercase16bit)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n// 不借助官方或者第三方库，纯源码实现\n\npackage main\n\nimport (\n    "bytes"\n    "encoding/binary"\n    "fmt"\n    "math"\n    "strings"\n)\n\nvar shift = [...]uint{7, 12, 17, 22, 5, 9, 14, 20, 4, 11, 16, 23, 6, 10, 15, 21}\nvar table [64]uint32\n\nfunc init() {\n    for i := range table {\n        table[i] = uint32((1 << 32) * math.abs(math.sin(float64(i+1))))\n    }\n}\n\nfunc md5hash(s string) string {\n    padded := bytes.newbuffer([]byte(s))\n    padded.writebyte(0x80)\n    for padded.len()%64 != 56 {\n        padded.writebyte(0)\n    }\n    messagelenbits := uint64(len(s)) * 8\n    err := binary.write(padded, binary.littleendian, messagelenbits)\n    if err != nil {\n        return ""\n    }\n  \n    var a, b, c, d uint32 = 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476\n    var buffer [16]uint32\n    for binary.read(padded, binary.littleendian, buffer[:]) == nil { // read every 64 bytes\n        a1, b1, c1, d1 := a, b, c, d\n        for j := 0; j < 64; j++ {\n            var f uint32\n            bufferindex := j\n            round := j >> 4\n            switch round {\n            case 0:\n                f = (b1 & c1) | (^b1 & d1)\n            case 1:\n                f = (b1 & d1) | (c1 & ^d1)\n                bufferindex = (bufferindex*5 + 1) & 0x0f\n            case 2:\n                f = b1 ^ c1 ^ d1\n                bufferindex = (bufferindex*3 + 5) & 0x0f\n            case 3:\n                f = c1 ^ (b1 | ^d1)\n                bufferindex = (bufferindex * 7) & 0x0f\n            }\n            sa := shift[(round<<2)|(j&3)]\n            a1 += f + buffer[bufferindex] + table[j]\n            a1, d1, c1, b1 = d1, c1, b1, a1<<sa|a1>>(32-sa)+b1\n        }\n        a, b, c, d = a+a1, b+b1, c+c1, d+d1\n    }\n  \n    var result [16]byte\n    binary.littleendian.putuint32(result[0:4], a)\n    binary.littleendian.putuint32(result[4:8], b)\n    binary.littleendian.putuint32(result[8:12], c)\n    binary.littleendian.putuint32(result[12:16], d)\n    return fmt.sprintf("%x", result)\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n    resultlowercase32bit := md5hash(data)\n    resultuppercase32bit := strings.toupper(resultlowercase32bit)\n    resultlowercase16bit := resultlowercase32bit[8:24]\n    resultuppercase16bit := strings.toupper(resultlowercase16bit)\n    fmt.println("32 位小写值: ", resultlowercase32bit)\n    fmt.println("32 位大写值: ", resultuppercase32bit)\n    fmt.println("16 位小写值: ", resultlowercase16bit)\n    fmt.println("16 位大写值: ", resultuppercase16bit)\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n\n\n\n# 主要特征\n\nmd5 的 hash 值具有明显的特征，实现该算法的源代码里也有一些固定的特征值，没有这些特定值，就无法实现 md5，我们可以通过密文特征和搜索源码特征值来快速判断是否为 md5 算法。\n\n密文特征：\n\n * 密文一般为 16 位或者 32 位，其中 16 位是取的 32 位第 9~25 位的值；\n * 组成方式为字母（a-f）和数字（0-9）混合，字母可以全部是大写或者小写。\n\n源码特征值：\n\n * 0123456789abcdef、0123456789abcdef\n * 1732584193、-271733879、-1732584194、271733878\n * 0x67452301、0xefcdab89、0x98badcfe、0x10325476\n\nps：某些特殊情况下，密文的长度也有可能不止 16 位或者 32 位，有可能是在官方算法上有一些魔改，通常也是在 16 位的基础上，左右填充了一些随机字符串。\n\n示例：\n\n编码类型     示例一                                示例二\n明文       01234567890                        administrators\n32 位小写   ebe596017db2f8c69136e5d6e594d365   d04952b3df94d47c04fc2dc28396a62d\n32 位大写   ebe596017db2f8c69136e5d6e594d365   d04952b3df94d47c04fc2dc28396a62d\n16 位小写   7db2f8c69136e5d6                   df94d47c04fc2dc2\n16 位大写   7db2f8c69136e5d6                   df94d47c04fc2dc2\n\n\n# 在线工具\n\nhttps://www.sojson.com/encrypt_md5.html',charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Base64",frontmatter:{title:"Base64",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/base64",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/03.base64.html",relativePath:"03.辅助查询/04.加密算法/03.base64.md",key:"v-571b7cbc",path:"/pages/base64/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:350},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:3e3},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:23365},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:26004},{level:2,title:"在线工具",slug:"在线工具",normalizedTitle:"在线工具",charIndex:26775}],headersStr:"Python JavaScript Golang 主要特征 在线工具",content:'关于 Base64 编码\n\nBase64 是网络上最常见的用于传输 8Bit 字节码的编码方式之一，Base64 是一种基于 64 个可打印字符来表示二进制数据的方法。由于 ，所以每 6 个比特为一个单元，对应某个可打印字符，3 个字节相当于 24 个比特，对应于 4 个 Base64 单元，即 3 个字节可由 4 个可打印字符来表示。Base64 包括字母 a-z、A-Z、数字 0-9、符号 +、/ 一共 64 个字符的字符集，任何符号都可以转换成这个字符集中的字符，这个转换过程就叫做 Base64 编码。\n\nBase64 编码是从二进制到字符的过程，可用于在 HTTP 环境下传递较长的标识信息。采用 Base64 编码具有不可读性，需要解码后才能阅读。\n\nBase64 维基百科\n\n\n# Python\n\nimport base64\n\n\ndata = "spiderapi.cn - 虫术"\n\nresult_encoded = base64.b64encode(data.encode("utf-8")).decode("utf-8")\nresult_decoded = base64.b64decode(result_encoded).decode("utf-8")\nprint("Base64 编码值:", result_encoded)  # c3BpZGVyYXBpLmNuIC0g6Jmr5pyv\nprint("Base64 解码值:", result_decoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 不借助官方或者第三方库，纯源码实现\n\ndef base64_encode(input_string):\n    base64_chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"\n    result = ""\n    # 将输入字符串转换为字节\n    input_bytes = input_string.encode("utf-8")\n    for i in range(0, len(input_bytes), 3):\n        chunk = input_bytes[i:i + 3]\n        # 将每个字符转换为ASCII码\n        chunk_bytes = [byte for byte in chunk]\n        # 将三个字节合并为一个24位的二进制字符串\n        binary_string = "".join(format(byte, "08b") for byte in chunk_bytes)\n\n        # 根据需求在二进制字符串末尾补0\n        while len(binary_string) % 24 != 0:\n            binary_string += "0"\n\n        # 将24位的二进制字符串切分为6位的小块\n        six_bit_chunks = [binary_string[j:j + 6] for j in range(0, len(binary_string), 6)]\n\n        # 将每个6位的二进制字符串转换为相应的Base64字符\n        for six_bit_chunk in six_bit_chunks:\n            if len(six_bit_chunk) < 6:\n                six_bit_chunk = six_bit_chunk.ljust(6, \'0\')\n            result += base64_chars[int(six_bit_chunk, 2)]\n\n    # 对不足3个字符的情况进行Base64填充\n    padding = len(input_bytes) % 3\n    if padding == 1:\n        result += "=="\n    elif padding == 2:\n        result += "="\n\n    return result\n\n\ndef base64_decode(encoded_string):\n    base64_chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"\n    result = bytearray()\n    # 对于每4个Base64字符，将其解码为3个原始字符\n    for i in range(0, len(encoded_string), 4):\n        chunk = encoded_string[i:i + 4]\n        # 将每个Base64字符转换为其对应的6位二进制字符串\n        binary_string = ""\n        for char in chunk:\n            if char != "=":\n                binary_string += format(base64_chars.index(char), "06b")\n\n        # 将24位的二进制字符串切分为8位的字符\n        eight_bit_chunks = [binary_string[j:j + 8] for j in range(0, len(binary_string), 8)]\n\n        # 将每个8位的二进制字符串转换为相应的字节\n        for eight_bit_chunk in eight_bit_chunks:\n            result.append(int(eight_bit_chunk, 2))\n\n    return result.decode("utf-8")\n\n\nif __name__ == "__main__":\n    data = "spiderapi.cn - 虫术"\n\n    result_encoded = base64_encode(data)\n    result_decoded = base64_decode(result_encoded)\n    print("Base64 编码值:", result_encoded)  # c3BpZGVyYXBpLmNuIC0g6Jmr5pyv\n    print("Base64 解码值:", result_decoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n\n\n\n# JavaScript\n\n// 使用内置函数 btoa 和 atob\n// 需要注意的是函数仅支持编码 Latin1 字符集，所以像汉字这样的字符集无法编码，需要将字符串作为 URI 组件进行编码后再进行 Base64 编码。\n\nvar dataLatin1 = "spiderapi.cn";\nvar dataChinese = "spiderapi.cn - 虫术";\n\nvar resultEncodedLatin1 = btoa(dataLatin1);\nvar resultDecodedLatin1 = atob(resultEncodedLatin1);\n\nvar resultEncodedChinese = btoa(unescape(encodeURIComponent(dataChinese)));\nvar resultDecodedChinese = decodeURIComponent(escape(atob(resultEncodedChinese)));\n\nconsole.log("Base64 英文编码值:", resultEncodedLatin1)   // c3BpZGVyYXBpLmNu\nconsole.log("Base64 英文解码值:", resultDecodedLatin1)\nconsole.log("Base64 中文编码值:", resultEncodedChinese)  // c3BpZGVyYXBpLmNuIC0g6Jmr5pyv\nconsole.log("Base64 中文解码值:", resultDecodedChinese)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n// Node 环境内置方法\n\nvar data = "spiderapi.cn - 虫术";\n\nvar resultEncoded = new Buffer.from(data).toString("base64");\nvar resultDecoded = new Buffer.from(resultEncoded, "base64").toString();\n\nconsole.log("Base64 编码值:", resultEncoded)  // c3BpZGVyYXBpLmNuIC0g6Jmr5pyv\nconsole.log("Base64 解码值:", resultDecoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n// 安装依赖 npm install crypto-js\n\nvar CryptoJS = require("crypto-js");\n\nvar data = "spiderapi.cn - 虫术";\nvar resultEncoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(data));\nvar resultDecoded = CryptoJS.enc.Base64.parse(resultEncoded).toString(CryptoJS.enc.Utf8);\n\nconsole.log("Base64 编码值:", resultEncoded)  // c3BpZGVyYXBpLmNuIC0g6Jmr5pyv\nconsole.log("Base64 解码值:", resultDecoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n// 不借助官方或者第三方库，纯源码实现\n\nvar CryptoJS = CryptoJS || (function (Math, undefined) {\n    var crypto;\n    if (typeof window !== \'undefined\' && window.crypto) {\n        crypto = window.crypto;\n    }\n    if (typeof self !== \'undefined\' && self.crypto) {\n        crypto = self.crypto;\n    }\n    if (typeof globalThis !== \'undefined\' && globalThis.crypto) {\n        crypto = globalThis.crypto;\n    }\n    if (!crypto && typeof window !== \'undefined\' && window.msCrypto) {\n        crypto = window.msCrypto;\n    }\n    if (!crypto && typeof global !== \'undefined\' && global.crypto) {\n        crypto = global.crypto;\n    }\n    if (!crypto && typeof require === \'function\') {\n        try {\n            crypto = require(\'crypto\');\n        } catch (err) {}\n    }\n    var cryptoSecureRandomInt = function () {\n        if (crypto) {\n            if (typeof crypto.getRandomValues === \'function\') {\n                try {\n                    return crypto.getRandomValues(new Uint32Array(1))[0];\n                } catch (err) {}\n            }\n            if (typeof crypto.randomBytes === \'function\') {\n                try {\n                    return crypto.randomBytes(4).readInt32LE();\n                } catch (err) {}\n            }\n        }\n        throw new Error(\'Native crypto module could not be used to get secure random number.\');\n    };\n    var create = Object.create || (function () {\n        function F() {}\n        return function (obj) {\n            var subtype;\n            F.prototype = obj;\n            subtype = new F();\n            F.prototype = null;\n            return subtype;\n        };\n    }());\n    var C = {};\n    var C_lib = C.lib = {};\n    var Base = C_lib.Base = (function () {\n        return {\n            extend: function (overrides) {\n                var subtype = create(this);\n                if (overrides) {\n                    subtype.mixIn(overrides);\n                }\n                if (!subtype.hasOwnProperty(\'init\') || this.init === subtype.init) {\n                    subtype.init = function () {\n                        subtype.$super.init.apply(this, arguments);\n                    };\n                }\n                subtype.init.prototype = subtype;\n                subtype.$super = this;\n                return subtype;\n            }, create: function () {\n                var instance = this.extend();\n                instance.init.apply(instance, arguments);\n                return instance;\n            }, init: function () {}, mixIn: function (properties) {\n                for (var propertyName in properties) {\n                    if (properties.hasOwnProperty(propertyName)) {\n                        this[propertyName] = properties[propertyName];\n                    }\n                }\n                if (properties.hasOwnProperty(\'toString\')) {\n                    this.toString = properties.toString;\n                }\n            }, clone: function () {\n                return this.init.prototype.extend(this);\n            }\n        };\n    }());\n    var WordArray = C_lib.WordArray = Base.extend({\n        init: function (words, sigBytes) {\n            words = this.words = words || [];\n            if (sigBytes != undefined) {\n                this.sigBytes = sigBytes;\n            } else {\n                this.sigBytes = words.length * 4;\n            }\n        }, toString: function (encoder) {\n            return (encoder || Hex).stringify(this);\n        }, concat: function (wordArray) {\n            var thisWords = this.words;\n            var thatWords = wordArray.words;\n            var thisSigBytes = this.sigBytes;\n            var thatSigBytes = wordArray.sigBytes;\n            this.clamp();\n            if (thisSigBytes % 4) {\n                for (var i = 0; i < thatSigBytes; i++) {\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n                }\n            } else {\n                for (var j = 0; j < thatSigBytes; j += 4) {\n                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n                }\n            }\n            this.sigBytes += thatSigBytes;\n            return this;\n        }, clamp: function () {\n            var words = this.words;\n            var sigBytes = this.sigBytes;\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n            words.length = Math.ceil(sigBytes / 4);\n        }, clone: function () {\n            var clone = Base.clone.call(this);\n            clone.words = this.words.slice(0);\n            return clone;\n        }, random: function (nBytes) {\n            var words = [];\n            var r = (function (m_w) {\n                var m_w = m_w;\n                var m_z = 0x3ade68b1;\n                var mask = 0xffffffff;\n                return function () {\n                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n                    var result = ((m_z << 0x10) + m_w) & mask;\n                    result /= 0x100000000;\n                    result += 0.5;\n                    return result * (Math.random() > .5 ? 1 : -1);\n                }\n            });\n            var RANDOM = false, _r;\n            try {\n                cryptoSecureRandomInt();\n                RANDOM = true;\n            } catch (err) {}\n            for (var i = 0, rcache; i < nBytes; i += 4) {\n                if (!RANDOM) {\n                    _r = r((rcache || Math.random()) * 0x100000000);\n                    rcache = _r() * 0x3ade67b7;\n                    words.push((_r() * 0x100000000) | 0);\n                    continue;\n                }\n                words.push(cryptoSecureRandomInt());\n            }\n            return new WordArray.init(words, nBytes);\n        }\n    });\n    var C_enc = C.enc = {};\n    var Hex = C_enc.Hex = {\n        stringify: function (wordArray) {\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n            var hexChars = [];\n            for (var i = 0; i < sigBytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                hexChars.push((bite >>> 4).toString(16));\n                hexChars.push((bite & 0x0f).toString(16));\n            }\n            return hexChars.join(\'\');\n        }, parse: function (hexStr) {\n            var hexStrLength = hexStr.length;\n            var words = [];\n            for (var i = 0; i < hexStrLength; i += 2) {\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n            }\n            return new WordArray.init(words, hexStrLength / 2);\n        }\n    };\n    var Latin1 = C_enc.Latin1 = {\n        stringify: function (wordArray) {\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n            var latin1Chars = [];\n            for (var i = 0; i < sigBytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                latin1Chars.push(String.fromCharCode(bite));\n            }\n            return latin1Chars.join(\'\');\n        }, parse: function (latin1Str) {\n            var latin1StrLength = latin1Str.length;\n            var words = [];\n            for (var i = 0; i < latin1StrLength; i++) {\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n            }\n            return new WordArray.init(words, latin1StrLength);\n        }\n    };\n    var Utf8 = C_enc.Utf8 = {\n        stringify: function (wordArray) {\n            try {\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n            } catch (e) {\n                throw new Error(\'Malformed UTF-8 data\');\n            }\n        }, parse: function (utf8Str) {\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n        }\n    };\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n        reset: function () {\n            this._data = new WordArray.init();\n            this._nDataBytes = 0;\n        }, _append: function (data) {\n            if (typeof data == \'string\') {\n                data = Utf8.parse(data);\n            }\n            this._data.concat(data);\n            this._nDataBytes += data.sigBytes;\n        }, _process: function (doFlush) {\n            var processedWords;\n            var data = this._data;\n            var dataWords = data.words;\n            var dataSigBytes = data.sigBytes;\n            var blockSize = this.blockSize;\n            var blockSizeBytes = blockSize * 4;\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\n            if (doFlush) {\n                nBlocksReady = Math.ceil(nBlocksReady);\n            } else {\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n            }\n            var nWordsReady = nBlocksReady * blockSize;\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n            if (nWordsReady) {\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n                    this._doProcessBlock(dataWords, offset);\n                }\n                processedWords = dataWords.splice(0, nWordsReady);\n                data.sigBytes -= nBytesReady;\n            }\n            return new WordArray.init(processedWords, nBytesReady);\n        }, clone: function () {\n            var clone = Base.clone.call(this);\n            clone._data = this._data.clone();\n            return clone;\n        }, _minBufferSize: 0\n    });\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n        cfg: Base.extend(),\n        init: function (cfg) {\n            this.cfg = this.cfg.extend(cfg);\n            this.reset();\n        }, reset: function () {\n            BufferedBlockAlgorithm.reset.call(this);\n            this._doReset();\n        }, update: function (messageUpdate) {\n            this._append(messageUpdate);\n            this._process();\n            return this;\n        }, finalize: function (messageUpdate) {\n            if (messageUpdate) {\n                this._append(messageUpdate);\n            }\n            var hash = this._doFinalize();\n            return hash;\n        }, blockSize: 512 / 32,\n        _createHelper: function (hasher) {\n            return function (message, cfg) {\n                return new hasher.init(cfg).finalize(message);\n            };\n        }, _createHmacHelper: function (hasher) {\n            return function (message, key) {\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\n            };\n        }\n    });\n    var C_algo = C.algo = {};\n    return C;\n}(Math));\n\n(function () {\n    var C = CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var C_enc = C.enc;\n    var Base64 = C_enc.Base64 = {\n        stringify: function (wordArray) {\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n            var map = this._map;\n            wordArray.clamp();\n            var base64Chars = [];\n            for (var i = 0; i < sigBytes; i += 3) {\n                var byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n                for (var j = 0;\n                     (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n                }\n            }\n            var paddingChar = map.charAt(64);\n            if (paddingChar) {\n                while (base64Chars.length % 4) {\n                    base64Chars.push(paddingChar);\n                }\n            }\n            return base64Chars.join(\'\');\n        }, parse: function (base64Str) {\n            var base64StrLength = base64Str.length;\n            var map = this._map;\n            var reverseMap = this._reverseMap;\n            if (!reverseMap) {\n                reverseMap = this._reverseMap = [];\n                for (var j = 0; j < map.length; j++) {\n                    reverseMap[map.charCodeAt(j)] = j;\n                }\n            }\n            var paddingChar = map.charAt(64);\n            if (paddingChar) {\n                var paddingIndex = base64Str.indexOf(paddingChar);\n                if (paddingIndex !== -1) {\n                    base64StrLength = paddingIndex;\n                }\n            }\n            return parseLoop(base64Str, base64StrLength, reverseMap);\n        }, _map: \'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\'\n    };\n    function parseLoop(base64Str, base64StrLength, reverseMap) {\n        var words = [];\n        var nBytes = 0;\n        for (var i = 0; i < base64StrLength; i++) {\n            if (i % 4) {\n                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n                words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n                nBytes++;\n            }\n        }\n        return WordArray.create(words, nBytes);\n    }\n}());\n\n\nvar data = "spiderapi.cn - 虫术";\nvar resultEncoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(data));\nvar resultDecoded = CryptoJS.enc.Base64.parse(resultEncoded).toString(CryptoJS.enc.Utf8);\n\nconsole.log("Base64 编码值:", resultEncoded)  // c3BpZGVyYXBpLmNuIC0g6Jmr5pyv\nconsole.log("Base64 解码值:", resultDecoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n\n\n// 不借助官方或者第三方库，纯源码实现\n\nvar Base64 = {\n    _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",\n\n    encode: function(input) {\n        var output = "";\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = Base64.utf8Encode(input);\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n            output += Base64._keyStr.charAt(enc1) + Base64._keyStr.charAt(enc2) +\n                Base64._keyStr.charAt(enc3) + Base64._keyStr.charAt(enc4);\n        }\n        return output;\n    },\n\n    decode: function(input) {\n        var output = "";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, "");\n        while (i < input.length) {\n            enc1 = Base64._keyStr.indexOf(input.charAt(i++));\n            enc2 = Base64._keyStr.indexOf(input.charAt(i++));\n            enc3 = Base64._keyStr.indexOf(input.charAt(i++));\n            enc4 = Base64._keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output += String.fromCharCode(chr1);\n            if (enc3 !== 64) {\n                output += String.fromCharCode(chr2);\n            }\n            if (enc4 !== 64) {\n                output += String.fromCharCode(chr3);\n            }\n        }\n        output = Base64.utf8Decode(output);\n        return output;\n    },\n\n    utf8Encode: function(string) {\n        string = string.replace(/\\r\\n/g, "\\n");\n        var utfText = "";\n        for (var n = 0; n < string.length; n++) {\n            var c = string.charCodeAt(n);\n            if (c < 128) {\n                utfText += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utfText += String.fromCharCode((c >> 6) | 192);\n                utfText += String.fromCharCode((c & 63) | 128);\n            } else {\n                utfText += String.fromCharCode((c >> 12) | 224);\n                utfText += String.fromCharCode(((c >> 6) & 63) | 128);\n                utfText += String.fromCharCode((c & 63) | 128);\n            }\n        }\n        return utfText;\n    },\n\n    utf8Decode: function(utfText) {\n        var string = "";\n        var i = 0;\n        var c, c1, c2;\n        while (i < utfText.length) {\n            c = utfText.charCodeAt(i);\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utfText.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utfText.charCodeAt(i + 1);\n                var c3 = utfText.charCodeAt(i + 2);\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n        }\n        return string;\n    }\n};\n\n\nvar data = "spiderapi.cn - 虫术";\nvar resultEncoded = Base64.encode(data);\nvar resultDecoded = Base64.decode(resultEncoded);\n\nconsole.log("Base64 编码值:", resultEncoded)  // c3BpZGVyYXBpLmNuIC0g6Jmr5pyv\nconsole.log("Base64 解码值:", resultDecoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n\n\n\n# Golang\n\npackage main\n\nimport (\n    "encoding/base64"\n    "fmt"\n)\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n    \n    resultEncoded := base64.StdEncoding.EncodeToString([]byte(data))\n    resultDecoded, err := base64.StdEncoding.DecodeString(resultEncoded)\n    if err != nil {\n        fmt.Println("Base64 decode error:", err)\n        return\n    }\n    fmt.Println("Base64 编码值:", resultEncoded) // c3BpZGVyYXBpLmNuIC0g6Jmr5pyv\n    fmt.Println("Base64 解码值:", string(resultDecoded))\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n// 不借助官方或者第三方库，纯源码实现\n\npackage main\n\nimport "fmt"\n\nconst (\n    base64Table = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"\n)\n\nfunc base64Encode(data []byte) []byte {\n    var result []byte\n    pad := len(data) % 3\n    for i := 0; i < len(data); i += 3 {\n    threeBytes := (int(data[i]) << 16) | (int(data[i+1]) << 8) | int(data[i+2])\n        result = append(result, base64Table[(threeBytes>>18)&0x3F])\n        result = append(result, base64Table[(threeBytes>>12)&0x3F])\n        result = append(result, base64Table[(threeBytes>>6)&0x3F])\n        result = append(result, base64Table[threeBytes&0x3F])\n    }\n    if pad > 0 {\n        result[len(result)-1] = \'=\'\n        if pad == 1 {\n            result[len(result)-2] = \'=\'\n        }\n    }\n    return result\n}\n\nfunc base64Decode(input string) ([]byte, error) {\n    var result []byte\n    pad := 0\n    if input[len(input)-1] == \'=\' {\n        pad++\n    }\n    if input[len(input)-2] == \'=\' {\n        pad++\n    }\n    for i := 0; i < len(input); i += 4 {\n        oneBytes := (index(input[i]) << 18) | (index(input[i+1]) << 12) | (index(input[i+2]) << 6) | index(input[i+3])\n        result = append(result, byte((oneBytes>>16)&0xFF))\n        result = append(result, byte((oneBytes>>8)&0xFF))\n        result = append(result, byte(oneBytes&0xFF))\n    }\n    return result[:len(result)-pad], nil\n}\n\nfunc index(char byte) int {\n    for i := 0; i < len(base64Table); i++ {\n        if base64Table[i] == char {\n            return i\n        }\n    }\n    return -1\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n  \n    resultEncoded := base64Encode([]byte(data))\n    resultDecoded, err := base64Decode(string(resultEncoded))\n    if err != nil {\n      fmt.Println("Base64 decode error:", err)\n      return\n    }\n    fmt.Println("Base64 编码值:", string(resultEncoded)) // c3BpZGVyYXBpLmNuIC0g6Jmr5pyv\n    fmt.Println("Base64 解码值:", string(resultDecoded))\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n\n\n\n# 主要特征\n\nBase64 是我们最常见的编码，除此之外，其实还有 Base16、Base32、Base58、Base85、Base100 等，Base 系列主要特征如下：\n\n * Base16：结尾没有等号，数字要多于字母；\n * Base32：字母要多于数字，明文数量超过10个，结尾可能会有很多等号；\n * Base58：结尾没有等号，字母要多于数字；\n * Base64：一般情况下结尾都会有1个或者2个等号，明文很少的时候可能没有，由 a-z、A-Z、0-9、+、/ 组成；\n * Base85：等号一般出现在字符串中间，含有一些奇怪的字符；\n * Base100：密文由 Emoji 表情组成。\n\n示例：\n\n编码类型      示例一                        示例二\n明文        01234567890                administrators\nBase16    3031323334353637383930     61646D696E6973747261746F7273\nBase32    GAYTEMZUGU3DOOBZGA======   MFSG22LONFZXI4TBORXXE4Y=\nBase58    cX8j8pvGzppMKVb            BNF5dFLUTN5XwM1yLoF\nBase64    MDEyMzQ1Njc4OTA=           YWRtaW5pc3RyYXRvcnM=\nBase85    0JP==1c70M3&rY             @:X4hDJ=06Eaa\'.EcV\nBase100   🐧🐨🐩🐪🐫🐬🐭🐮🐯🐰🐧     👘👛👤👠👥👠👪👫👩👘👫👦👩👪\n\n\n# 在线工具\n\n * https://base64.us/\n * https://tool.chinaz.com/tools/base64.aspx',normalizedContent:'关于 base64 编码\n\nbase64 是网络上最常见的用于传输 8bit 字节码的编码方式之一，base64 是一种基于 64 个可打印字符来表示二进制数据的方法。由于 ，所以每 6 个比特为一个单元，对应某个可打印字符，3 个字节相当于 24 个比特，对应于 4 个 base64 单元，即 3 个字节可由 4 个可打印字符来表示。base64 包括字母 a-z、a-z、数字 0-9、符号 +、/ 一共 64 个字符的字符集，任何符号都可以转换成这个字符集中的字符，这个转换过程就叫做 base64 编码。\n\nbase64 编码是从二进制到字符的过程，可用于在 http 环境下传递较长的标识信息。采用 base64 编码具有不可读性，需要解码后才能阅读。\n\nbase64 维基百科\n\n\n# python\n\nimport base64\n\n\ndata = "spiderapi.cn - 虫术"\n\nresult_encoded = base64.b64encode(data.encode("utf-8")).decode("utf-8")\nresult_decoded = base64.b64decode(result_encoded).decode("utf-8")\nprint("base64 编码值:", result_encoded)  # c3bpzgvyyxbplmnuic0g6jmr5pyv\nprint("base64 解码值:", result_decoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n# 不借助官方或者第三方库，纯源码实现\n\ndef base64_encode(input_string):\n    base64_chars = "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789+/"\n    result = ""\n    # 将输入字符串转换为字节\n    input_bytes = input_string.encode("utf-8")\n    for i in range(0, len(input_bytes), 3):\n        chunk = input_bytes[i:i + 3]\n        # 将每个字符转换为ascii码\n        chunk_bytes = [byte for byte in chunk]\n        # 将三个字节合并为一个24位的二进制字符串\n        binary_string = "".join(format(byte, "08b") for byte in chunk_bytes)\n\n        # 根据需求在二进制字符串末尾补0\n        while len(binary_string) % 24 != 0:\n            binary_string += "0"\n\n        # 将24位的二进制字符串切分为6位的小块\n        six_bit_chunks = [binary_string[j:j + 6] for j in range(0, len(binary_string), 6)]\n\n        # 将每个6位的二进制字符串转换为相应的base64字符\n        for six_bit_chunk in six_bit_chunks:\n            if len(six_bit_chunk) < 6:\n                six_bit_chunk = six_bit_chunk.ljust(6, \'0\')\n            result += base64_chars[int(six_bit_chunk, 2)]\n\n    # 对不足3个字符的情况进行base64填充\n    padding = len(input_bytes) % 3\n    if padding == 1:\n        result += "=="\n    elif padding == 2:\n        result += "="\n\n    return result\n\n\ndef base64_decode(encoded_string):\n    base64_chars = "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789+/"\n    result = bytearray()\n    # 对于每4个base64字符，将其解码为3个原始字符\n    for i in range(0, len(encoded_string), 4):\n        chunk = encoded_string[i:i + 4]\n        # 将每个base64字符转换为其对应的6位二进制字符串\n        binary_string = ""\n        for char in chunk:\n            if char != "=":\n                binary_string += format(base64_chars.index(char), "06b")\n\n        # 将24位的二进制字符串切分为8位的字符\n        eight_bit_chunks = [binary_string[j:j + 8] for j in range(0, len(binary_string), 8)]\n\n        # 将每个8位的二进制字符串转换为相应的字节\n        for eight_bit_chunk in eight_bit_chunks:\n            result.append(int(eight_bit_chunk, 2))\n\n    return result.decode("utf-8")\n\n\nif __name__ == "__main__":\n    data = "spiderapi.cn - 虫术"\n\n    result_encoded = base64_encode(data)\n    result_decoded = base64_decode(result_encoded)\n    print("base64 编码值:", result_encoded)  # c3bpzgvyyxbplmnuic0g6jmr5pyv\n    print("base64 解码值:", result_decoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n\n\n\n# javascript\n\n// 使用内置函数 btoa 和 atob\n// 需要注意的是函数仅支持编码 latin1 字符集，所以像汉字这样的字符集无法编码，需要将字符串作为 uri 组件进行编码后再进行 base64 编码。\n\nvar datalatin1 = "spiderapi.cn";\nvar datachinese = "spiderapi.cn - 虫术";\n\nvar resultencodedlatin1 = btoa(datalatin1);\nvar resultdecodedlatin1 = atob(resultencodedlatin1);\n\nvar resultencodedchinese = btoa(unescape(encodeuricomponent(datachinese)));\nvar resultdecodedchinese = decodeuricomponent(escape(atob(resultencodedchinese)));\n\nconsole.log("base64 英文编码值:", resultencodedlatin1)   // c3bpzgvyyxbplmnu\nconsole.log("base64 英文解码值:", resultdecodedlatin1)\nconsole.log("base64 中文编码值:", resultencodedchinese)  // c3bpzgvyyxbplmnuic0g6jmr5pyv\nconsole.log("base64 中文解码值:", resultdecodedchinese)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n// node 环境内置方法\n\nvar data = "spiderapi.cn - 虫术";\n\nvar resultencoded = new buffer.from(data).tostring("base64");\nvar resultdecoded = new buffer.from(resultencoded, "base64").tostring();\n\nconsole.log("base64 编码值:", resultencoded)  // c3bpzgvyyxbplmnuic0g6jmr5pyv\nconsole.log("base64 解码值:", resultdecoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n// 安装依赖 npm install crypto-js\n\nvar cryptojs = require("crypto-js");\n\nvar data = "spiderapi.cn - 虫术";\nvar resultencoded = cryptojs.enc.base64.stringify(cryptojs.enc.utf8.parse(data));\nvar resultdecoded = cryptojs.enc.base64.parse(resultencoded).tostring(cryptojs.enc.utf8);\n\nconsole.log("base64 编码值:", resultencoded)  // c3bpzgvyyxbplmnuic0g6jmr5pyv\nconsole.log("base64 解码值:", resultdecoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n// 不借助官方或者第三方库，纯源码实现\n\nvar cryptojs = cryptojs || (function (math, undefined) {\n    var crypto;\n    if (typeof window !== \'undefined\' && window.crypto) {\n        crypto = window.crypto;\n    }\n    if (typeof self !== \'undefined\' && self.crypto) {\n        crypto = self.crypto;\n    }\n    if (typeof globalthis !== \'undefined\' && globalthis.crypto) {\n        crypto = globalthis.crypto;\n    }\n    if (!crypto && typeof window !== \'undefined\' && window.mscrypto) {\n        crypto = window.mscrypto;\n    }\n    if (!crypto && typeof global !== \'undefined\' && global.crypto) {\n        crypto = global.crypto;\n    }\n    if (!crypto && typeof require === \'function\') {\n        try {\n            crypto = require(\'crypto\');\n        } catch (err) {}\n    }\n    var cryptosecurerandomint = function () {\n        if (crypto) {\n            if (typeof crypto.getrandomvalues === \'function\') {\n                try {\n                    return crypto.getrandomvalues(new uint32array(1))[0];\n                } catch (err) {}\n            }\n            if (typeof crypto.randombytes === \'function\') {\n                try {\n                    return crypto.randombytes(4).readint32le();\n                } catch (err) {}\n            }\n        }\n        throw new error(\'native crypto module could not be used to get secure random number.\');\n    };\n    var create = object.create || (function () {\n        function f() {}\n        return function (obj) {\n            var subtype;\n            f.prototype = obj;\n            subtype = new f();\n            f.prototype = null;\n            return subtype;\n        };\n    }());\n    var c = {};\n    var c_lib = c.lib = {};\n    var base = c_lib.base = (function () {\n        return {\n            extend: function (overrides) {\n                var subtype = create(this);\n                if (overrides) {\n                    subtype.mixin(overrides);\n                }\n                if (!subtype.hasownproperty(\'init\') || this.init === subtype.init) {\n                    subtype.init = function () {\n                        subtype.$super.init.apply(this, arguments);\n                    };\n                }\n                subtype.init.prototype = subtype;\n                subtype.$super = this;\n                return subtype;\n            }, create: function () {\n                var instance = this.extend();\n                instance.init.apply(instance, arguments);\n                return instance;\n            }, init: function () {}, mixin: function (properties) {\n                for (var propertyname in properties) {\n                    if (properties.hasownproperty(propertyname)) {\n                        this[propertyname] = properties[propertyname];\n                    }\n                }\n                if (properties.hasownproperty(\'tostring\')) {\n                    this.tostring = properties.tostring;\n                }\n            }, clone: function () {\n                return this.init.prototype.extend(this);\n            }\n        };\n    }());\n    var wordarray = c_lib.wordarray = base.extend({\n        init: function (words, sigbytes) {\n            words = this.words = words || [];\n            if (sigbytes != undefined) {\n                this.sigbytes = sigbytes;\n            } else {\n                this.sigbytes = words.length * 4;\n            }\n        }, tostring: function (encoder) {\n            return (encoder || hex).stringify(this);\n        }, concat: function (wordarray) {\n            var thiswords = this.words;\n            var thatwords = wordarray.words;\n            var thissigbytes = this.sigbytes;\n            var thatsigbytes = wordarray.sigbytes;\n            this.clamp();\n            if (thissigbytes % 4) {\n                for (var i = 0; i < thatsigbytes; i++) {\n                    var thatbyte = (thatwords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                    thiswords[(thissigbytes + i) >>> 2] |= thatbyte << (24 - ((thissigbytes + i) % 4) * 8);\n                }\n            } else {\n                for (var j = 0; j < thatsigbytes; j += 4) {\n                    thiswords[(thissigbytes + j) >>> 2] = thatwords[j >>> 2];\n                }\n            }\n            this.sigbytes += thatsigbytes;\n            return this;\n        }, clamp: function () {\n            var words = this.words;\n            var sigbytes = this.sigbytes;\n            words[sigbytes >>> 2] &= 0xffffffff << (32 - (sigbytes % 4) * 8);\n            words.length = math.ceil(sigbytes / 4);\n        }, clone: function () {\n            var clone = base.clone.call(this);\n            clone.words = this.words.slice(0);\n            return clone;\n        }, random: function (nbytes) {\n            var words = [];\n            var r = (function (m_w) {\n                var m_w = m_w;\n                var m_z = 0x3ade68b1;\n                var mask = 0xffffffff;\n                return function () {\n                    m_z = (0x9069 * (m_z & 0xffff) + (m_z >> 0x10)) & mask;\n                    m_w = (0x4650 * (m_w & 0xffff) + (m_w >> 0x10)) & mask;\n                    var result = ((m_z << 0x10) + m_w) & mask;\n                    result /= 0x100000000;\n                    result += 0.5;\n                    return result * (math.random() > .5 ? 1 : -1);\n                }\n            });\n            var random = false, _r;\n            try {\n                cryptosecurerandomint();\n                random = true;\n            } catch (err) {}\n            for (var i = 0, rcache; i < nbytes; i += 4) {\n                if (!random) {\n                    _r = r((rcache || math.random()) * 0x100000000);\n                    rcache = _r() * 0x3ade67b7;\n                    words.push((_r() * 0x100000000) | 0);\n                    continue;\n                }\n                words.push(cryptosecurerandomint());\n            }\n            return new wordarray.init(words, nbytes);\n        }\n    });\n    var c_enc = c.enc = {};\n    var hex = c_enc.hex = {\n        stringify: function (wordarray) {\n            var words = wordarray.words;\n            var sigbytes = wordarray.sigbytes;\n            var hexchars = [];\n            for (var i = 0; i < sigbytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                hexchars.push((bite >>> 4).tostring(16));\n                hexchars.push((bite & 0x0f).tostring(16));\n            }\n            return hexchars.join(\'\');\n        }, parse: function (hexstr) {\n            var hexstrlength = hexstr.length;\n            var words = [];\n            for (var i = 0; i < hexstrlength; i += 2) {\n                words[i >>> 3] |= parseint(hexstr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n            }\n            return new wordarray.init(words, hexstrlength / 2);\n        }\n    };\n    var latin1 = c_enc.latin1 = {\n        stringify: function (wordarray) {\n            var words = wordarray.words;\n            var sigbytes = wordarray.sigbytes;\n            var latin1chars = [];\n            for (var i = 0; i < sigbytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                latin1chars.push(string.fromcharcode(bite));\n            }\n            return latin1chars.join(\'\');\n        }, parse: function (latin1str) {\n            var latin1strlength = latin1str.length;\n            var words = [];\n            for (var i = 0; i < latin1strlength; i++) {\n                words[i >>> 2] |= (latin1str.charcodeat(i) & 0xff) << (24 - (i % 4) * 8);\n            }\n            return new wordarray.init(words, latin1strlength);\n        }\n    };\n    var utf8 = c_enc.utf8 = {\n        stringify: function (wordarray) {\n            try {\n                return decodeuricomponent(escape(latin1.stringify(wordarray)));\n            } catch (e) {\n                throw new error(\'malformed utf-8 data\');\n            }\n        }, parse: function (utf8str) {\n            return latin1.parse(unescape(encodeuricomponent(utf8str)));\n        }\n    };\n    var bufferedblockalgorithm = c_lib.bufferedblockalgorithm = base.extend({\n        reset: function () {\n            this._data = new wordarray.init();\n            this._ndatabytes = 0;\n        }, _append: function (data) {\n            if (typeof data == \'string\') {\n                data = utf8.parse(data);\n            }\n            this._data.concat(data);\n            this._ndatabytes += data.sigbytes;\n        }, _process: function (doflush) {\n            var processedwords;\n            var data = this._data;\n            var datawords = data.words;\n            var datasigbytes = data.sigbytes;\n            var blocksize = this.blocksize;\n            var blocksizebytes = blocksize * 4;\n            var nblocksready = datasigbytes / blocksizebytes;\n            if (doflush) {\n                nblocksready = math.ceil(nblocksready);\n            } else {\n                nblocksready = math.max((nblocksready | 0) - this._minbuffersize, 0);\n            }\n            var nwordsready = nblocksready * blocksize;\n            var nbytesready = math.min(nwordsready * 4, datasigbytes);\n            if (nwordsready) {\n                for (var offset = 0; offset < nwordsready; offset += blocksize) {\n                    this._doprocessblock(datawords, offset);\n                }\n                processedwords = datawords.splice(0, nwordsready);\n                data.sigbytes -= nbytesready;\n            }\n            return new wordarray.init(processedwords, nbytesready);\n        }, clone: function () {\n            var clone = base.clone.call(this);\n            clone._data = this._data.clone();\n            return clone;\n        }, _minbuffersize: 0\n    });\n    var hasher = c_lib.hasher = bufferedblockalgorithm.extend({\n        cfg: base.extend(),\n        init: function (cfg) {\n            this.cfg = this.cfg.extend(cfg);\n            this.reset();\n        }, reset: function () {\n            bufferedblockalgorithm.reset.call(this);\n            this._doreset();\n        }, update: function (messageupdate) {\n            this._append(messageupdate);\n            this._process();\n            return this;\n        }, finalize: function (messageupdate) {\n            if (messageupdate) {\n                this._append(messageupdate);\n            }\n            var hash = this._dofinalize();\n            return hash;\n        }, blocksize: 512 / 32,\n        _createhelper: function (hasher) {\n            return function (message, cfg) {\n                return new hasher.init(cfg).finalize(message);\n            };\n        }, _createhmachelper: function (hasher) {\n            return function (message, key) {\n                return new c_algo.hmac.init(hasher, key).finalize(message);\n            };\n        }\n    });\n    var c_algo = c.algo = {};\n    return c;\n}(math));\n\n(function () {\n    var c = cryptojs;\n    var c_lib = c.lib;\n    var wordarray = c_lib.wordarray;\n    var c_enc = c.enc;\n    var base64 = c_enc.base64 = {\n        stringify: function (wordarray) {\n            var words = wordarray.words;\n            var sigbytes = wordarray.sigbytes;\n            var map = this._map;\n            wordarray.clamp();\n            var base64chars = [];\n            for (var i = 0; i < sigbytes; i += 3) {\n                var byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n                for (var j = 0;\n                     (j < 4) && (i + j * 0.75 < sigbytes); j++) {\n                    base64chars.push(map.charat((triplet >>> (6 * (3 - j))) & 0x3f));\n                }\n            }\n            var paddingchar = map.charat(64);\n            if (paddingchar) {\n                while (base64chars.length % 4) {\n                    base64chars.push(paddingchar);\n                }\n            }\n            return base64chars.join(\'\');\n        }, parse: function (base64str) {\n            var base64strlength = base64str.length;\n            var map = this._map;\n            var reversemap = this._reversemap;\n            if (!reversemap) {\n                reversemap = this._reversemap = [];\n                for (var j = 0; j < map.length; j++) {\n                    reversemap[map.charcodeat(j)] = j;\n                }\n            }\n            var paddingchar = map.charat(64);\n            if (paddingchar) {\n                var paddingindex = base64str.indexof(paddingchar);\n                if (paddingindex !== -1) {\n                    base64strlength = paddingindex;\n                }\n            }\n            return parseloop(base64str, base64strlength, reversemap);\n        }, _map: \'abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789+/=\'\n    };\n    function parseloop(base64str, base64strlength, reversemap) {\n        var words = [];\n        var nbytes = 0;\n        for (var i = 0; i < base64strlength; i++) {\n            if (i % 4) {\n                var bits1 = reversemap[base64str.charcodeat(i - 1)] << ((i % 4) * 2);\n                var bits2 = reversemap[base64str.charcodeat(i)] >>> (6 - (i % 4) * 2);\n                words[nbytes >>> 2] |= (bits1 | bits2) << (24 - (nbytes % 4) * 8);\n                nbytes++;\n            }\n        }\n        return wordarray.create(words, nbytes);\n    }\n}());\n\n\nvar data = "spiderapi.cn - 虫术";\nvar resultencoded = cryptojs.enc.base64.stringify(cryptojs.enc.utf8.parse(data));\nvar resultdecoded = cryptojs.enc.base64.parse(resultencoded).tostring(cryptojs.enc.utf8);\n\nconsole.log("base64 编码值:", resultencoded)  // c3bpzgvyyxbplmnuic0g6jmr5pyv\nconsole.log("base64 解码值:", resultdecoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n\n\n// 不借助官方或者第三方库，纯源码实现\n\nvar base64 = {\n    _keystr: "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789+/=",\n\n    encode: function(input) {\n        var output = "";\n        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = base64.utf8encode(input);\n        while (i < input.length) {\n            chr1 = input.charcodeat(i++);\n            chr2 = input.charcodeat(i++);\n            chr3 = input.charcodeat(i++);\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n            if (isnan(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isnan(chr3)) {\n                enc4 = 64;\n            }\n            output += base64._keystr.charat(enc1) + base64._keystr.charat(enc2) +\n                base64._keystr.charat(enc3) + base64._keystr.charat(enc4);\n        }\n        return output;\n    },\n\n    decode: function(input) {\n        var output = "";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = input.replace(/[^a-za-z0-9\\+\\/\\=]/g, "");\n        while (i < input.length) {\n            enc1 = base64._keystr.indexof(input.charat(i++));\n            enc2 = base64._keystr.indexof(input.charat(i++));\n            enc3 = base64._keystr.indexof(input.charat(i++));\n            enc4 = base64._keystr.indexof(input.charat(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output += string.fromcharcode(chr1);\n            if (enc3 !== 64) {\n                output += string.fromcharcode(chr2);\n            }\n            if (enc4 !== 64) {\n                output += string.fromcharcode(chr3);\n            }\n        }\n        output = base64.utf8decode(output);\n        return output;\n    },\n\n    utf8encode: function(string) {\n        string = string.replace(/\\r\\n/g, "\\n");\n        var utftext = "";\n        for (var n = 0; n < string.length; n++) {\n            var c = string.charcodeat(n);\n            if (c < 128) {\n                utftext += string.fromcharcode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += string.fromcharcode((c >> 6) | 192);\n                utftext += string.fromcharcode((c & 63) | 128);\n            } else {\n                utftext += string.fromcharcode((c >> 12) | 224);\n                utftext += string.fromcharcode(((c >> 6) & 63) | 128);\n                utftext += string.fromcharcode((c & 63) | 128);\n            }\n        }\n        return utftext;\n    },\n\n    utf8decode: function(utftext) {\n        var string = "";\n        var i = 0;\n        var c, c1, c2;\n        while (i < utftext.length) {\n            c = utftext.charcodeat(i);\n            if (c < 128) {\n                string += string.fromcharcode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charcodeat(i + 1);\n                string += string.fromcharcode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charcodeat(i + 1);\n                var c3 = utftext.charcodeat(i + 2);\n                string += string.fromcharcode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n        }\n        return string;\n    }\n};\n\n\nvar data = "spiderapi.cn - 虫术";\nvar resultencoded = base64.encode(data);\nvar resultdecoded = base64.decode(resultencoded);\n\nconsole.log("base64 编码值:", resultencoded)  // c3bpzgvyyxbplmnuic0g6jmr5pyv\nconsole.log("base64 解码值:", resultdecoded)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n\n\n\n# golang\n\npackage main\n\nimport (\n    "encoding/base64"\n    "fmt"\n)\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n    \n    resultencoded := base64.stdencoding.encodetostring([]byte(data))\n    resultdecoded, err := base64.stdencoding.decodestring(resultencoded)\n    if err != nil {\n        fmt.println("base64 decode error:", err)\n        return\n    }\n    fmt.println("base64 编码值:", resultencoded) // c3bpzgvyyxbplmnuic0g6jmr5pyv\n    fmt.println("base64 解码值:", string(resultdecoded))\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n// 不借助官方或者第三方库，纯源码实现\n\npackage main\n\nimport "fmt"\n\nconst (\n    base64table = "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789+/"\n)\n\nfunc base64encode(data []byte) []byte {\n    var result []byte\n    pad := len(data) % 3\n    for i := 0; i < len(data); i += 3 {\n    threebytes := (int(data[i]) << 16) | (int(data[i+1]) << 8) | int(data[i+2])\n        result = append(result, base64table[(threebytes>>18)&0x3f])\n        result = append(result, base64table[(threebytes>>12)&0x3f])\n        result = append(result, base64table[(threebytes>>6)&0x3f])\n        result = append(result, base64table[threebytes&0x3f])\n    }\n    if pad > 0 {\n        result[len(result)-1] = \'=\'\n        if pad == 1 {\n            result[len(result)-2] = \'=\'\n        }\n    }\n    return result\n}\n\nfunc base64decode(input string) ([]byte, error) {\n    var result []byte\n    pad := 0\n    if input[len(input)-1] == \'=\' {\n        pad++\n    }\n    if input[len(input)-2] == \'=\' {\n        pad++\n    }\n    for i := 0; i < len(input); i += 4 {\n        onebytes := (index(input[i]) << 18) | (index(input[i+1]) << 12) | (index(input[i+2]) << 6) | index(input[i+3])\n        result = append(result, byte((onebytes>>16)&0xff))\n        result = append(result, byte((onebytes>>8)&0xff))\n        result = append(result, byte(onebytes&0xff))\n    }\n    return result[:len(result)-pad], nil\n}\n\nfunc index(char byte) int {\n    for i := 0; i < len(base64table); i++ {\n        if base64table[i] == char {\n            return i\n        }\n    }\n    return -1\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n  \n    resultencoded := base64encode([]byte(data))\n    resultdecoded, err := base64decode(string(resultencoded))\n    if err != nil {\n      fmt.println("base64 decode error:", err)\n      return\n    }\n    fmt.println("base64 编码值:", string(resultencoded)) // c3bpzgvyyxbplmnuic0g6jmr5pyv\n    fmt.println("base64 解码值:", string(resultdecoded))\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n\n\n\n# 主要特征\n\nbase64 是我们最常见的编码，除此之外，其实还有 base16、base32、base58、base85、base100 等，base 系列主要特征如下：\n\n * base16：结尾没有等号，数字要多于字母；\n * base32：字母要多于数字，明文数量超过10个，结尾可能会有很多等号；\n * base58：结尾没有等号，字母要多于数字；\n * base64：一般情况下结尾都会有1个或者2个等号，明文很少的时候可能没有，由 a-z、a-z、0-9、+、/ 组成；\n * base85：等号一般出现在字符串中间，含有一些奇怪的字符；\n * base100：密文由 emoji 表情组成。\n\n示例：\n\n编码类型      示例一                        示例二\n明文        01234567890                administrators\nbase16    3031323334353637383930     61646d696e6973747261746f7273\nbase32    gaytemzugu3doobzga======   mfsg22lonfzxi4tborxxe4y=\nbase58    cx8j8pvgzppmkvb            bnf5dflutn5xwm1ylof\nbase64    mdeymzq1njc4ota=           ywrtaw5pc3ryyxrvcnm=\nbase85    0jp==1c70m3&ry             @:x4hdj=06eaa\'.ecv\nbase100   🐧🐨🐩🐪🐫🐬🐭🐮🐯🐰🐧     👘👛👤👠👥👠👪👫👩👘👫👦👩👪\n\n\n# 在线工具\n\n * https://base64.us/\n * https://tool.chinaz.com/tools/base64.aspx',charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"HMAC",frontmatter:{title:"HMAC",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/hmac",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/05.hmac.html",relativePath:"03.辅助查询/04.加密算法/05.hmac.md",key:"v-6fd2a0a2",path:"/pages/hmac/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:446},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:2593},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:5845},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:8217},{level:2,title:"在线工具",slug:"在线工具",normalizedTitle:"在线工具",charIndex:9367}],headersStr:"Python JavaScript Golang 主要特征 在线工具",content:'关于 HMAC 哈希算法\n\nHMAC 是密钥相关的哈希运算消息认证码（Hash-based Message Authentication Code）的缩写，是一种通过特别计算方式之后产生的消息认证码（MAC），使用密码散列函数，同时结合一个加密密钥。它可以用来保证资料的完整性，同时可以用来作某个消息的身份验证。简单来说，HMAC 算法就是在 MD5、SHA 两种加密的基础上引入了秘钥，其密文也和 MD5、SHA 类似，密文的长度和使用的 MD5、SHA 算法对应密文的长度是一样的，HMAC 可分为：\n\n * HMAC-MD5\n * HMAC-SHA-1\n * HMAC-SHA-224\n * HMAC-SHA-256\n * HMAC-SHA-384\n * HMAC-SHA-512\n * HMAC-SHA3-224\n * HMAC-SHA3-256\n * HMAC-SHA3-384\n * HMAC-SHA3-512\n * HMAC-RIPEMD-160\n\nHMAC 维基百科\n\n\n# Python\n\n# 安装依赖 pip install pycryptodome\n\nimport hmac\nimport hashlib\nfrom Crypto.Hash import RIPEMD\n\n\ndef hmac_hash(hash_key, hash_data, hash_algorithm):\n    hmac_result = hmac.new(hash_key.encode(), hash_data.encode(), hash_algorithm)\n    return hmac_result.hexdigest()\n\n\ndef hmac_hash_ripemd160(hash_key, hash_data):\n    hmac_result = hmac.new(hash_key.encode(), hash_data.encode(), RIPEMD)\n    return hmac_result.hexdigest()\n\n\nkey = "spiderapi"\ndata = "spiderapi.cn - 虫术"\n\nprint("HMAC-MD5 值: ", hmac_hash(key, data, hashlib.md5))            # b7fb775de287693efcdf4800328090ac\nprint("HMAC-SHA-1 值: ", hmac_hash(key, data, hashlib.sha1))         # 991cc6a5a76a7a329c6201bedd62794f1bef3cb7\nprint("HMAC-SHA-224 值: ", hmac_hash(key, data, hashlib.sha224))     # 149e19e357f991ce6e997ac7db69e61fa41b7b10fd26e07af83ef691\nprint("HMAC-SHA-256 值: ", hmac_hash(key, data, hashlib.sha256))     # ff605bd71b01d22f836ae60a622253d3e0761a4b275bf7952e061c419514c44e\nprint("HMAC-SHA-384 值: ", hmac_hash(key, data, hashlib.sha384))     # a78c0cb3bc0ecb27a7a4b9527f18b9fa9ea8bf625798bc3c225b3695e8f9cad52eb7d76e8a18b1bcf23d9f13d3eb65fe\nprint("HMAC-SHA-512 值: ", hmac_hash(key, data, hashlib.sha512))     # 668258a31cd742fef5c47511aa60d46998c62422d73470976c19c895c29b9f8a155fd8b7b95e534453b18294cf0064f30be9293fc9061421e3e8d30f1f7da886\nprint("HMAC-SHA3-224 值: ", hmac_hash(key, data, hashlib.sha3_224))  # 4ebea358ef7123734a9f585f9825d91a4779b2b69c8fb1218ad6850d\nprint("HMAC-SHA3-256 值: ", hmac_hash(key, data, hashlib.sha3_256))  # ab67f986a381d6992d773fddc2367b9592df5f19ea2c2a3d4c19291c5b1492d4\nprint("HMAC-SHA3-384 值: ", hmac_hash(key, data, hashlib.sha3_384))  # bb2da5b39030fd22e8b3acc4d34d7e78c7739b5dd740c51897009f49b5c8384de0f9b784bebddca13255f1956734a542\nprint("HMAC-SHA3-512 值: ", hmac_hash(key, data, hashlib.sha3_512))  # 75cc29368c86c102280b68ad64f09c5d90596f760fef39a331afadc5bcdc9ac70d17bbd02a3bb61c22e81f7cfcb12ed10ee094003b382262f68f1dcc074ff032\nprint("HMAC-RIPEMD-160 值: ", hmac_hash_ripemd160(key, data))        # 136838f8f725e801d76c1a376395884d1068d425\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# JavaScript\n\nvar crypto = require("crypto");\n\n\nfunction hmacHash(hashKey, hashData, hashAlgorithm) {\n    var hmac = crypto.createHmac(hashAlgorithm, hashKey);\n    hmac.update(hashData);\n    return hmac.digest("hex");\n}\n\nvar key = "spiderapi"\nvar data = "spiderapi.cn - 虫术";\n\nconsole.log("HMAC-MD5 值: ", hmacHash(key, data, "md5"))               // b7fb775de287693efcdf4800328090ac\nconsole.log("HMAC-SHA-1 值: ", hmacHash(key, data, "sha1"))            // 991cc6a5a76a7a329c6201bedd62794f1bef3cb7\nconsole.log("HMAC-SHA-224 值: ", hmacHash(key, data, "sha224"))        // 149e19e357f991ce6e997ac7db69e61fa41b7b10fd26e07af83ef691\nconsole.log("HMAC-SHA-256 值: ", hmacHash(key, data, "sha256"))        // ff605bd71b01d22f836ae60a622253d3e0761a4b275bf7952e061c419514c44e\nconsole.log("HMAC-SHA-384 值: ", hmacHash(key, data, "sha384"))        // a78c0cb3bc0ecb27a7a4b9527f18b9fa9ea8bf625798bc3c225b3695e8f9cad52eb7d76e8a18b1bcf23d9f13d3eb65fe\nconsole.log("HMAC-SHA-512 值: ", hmacHash(key, data, "sha512"))        // 668258a31cd742fef5c47511aa60d46998c62422d73470976c19c895c29b9f8a155fd8b7b95e534453b18294cf0064f30be9293fc9061421e3e8d30f1f7da886\nconsole.log("HMAC-SHA3-224 值: ", hmacHash(key, data, "sha3-224"))     // 4ebea358ef7123734a9f585f9825d91a4779b2b69c8fb1218ad6850d\nconsole.log("HMAC-SHA3-256 值: ", hmacHash(key, data, "sha3-256"))     // ab67f986a381d6992d773fddc2367b9592df5f19ea2c2a3d4c19291c5b1492d4\nconsole.log("HMAC-SHA3-384 值: ", hmacHash(key, data, "sha3-384"))     // bb2da5b39030fd22e8b3acc4d34d7e78c7739b5dd740c51897009f49b5c8384de0f9b784bebddca13255f1956734a542\nconsole.log("HMAC-SHA3-512 值: ", hmacHash(key, data, "sha3-512"))     // 75cc29368c86c102280b68ad64f09c5d90596f760fef39a331afadc5bcdc9ac70d17bbd02a3bb61c22e81f7cfcb12ed10ee094003b382262f68f1dcc074ff032\nconsole.log("HMAC-RIPEMD-160 值: ", hmacHash(key, data, "ripemd160"))  // 136838f8f725e801d76c1a376395884d1068d425\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n// 安装依赖 npm install crypto-js\n// crypto-js 不支持 HMAC-SHA3-224、HMAC-SHA3-256、HMAC-SHA3-384 和 HMAC-SHA3-512\n\nvar CryptoJS = require("crypto-js");\n\nvar key = "spiderapi"\nvar data = "spiderapi.cn - 虫术";\n\nconsole.log("HMAC-MD5 值: ", CryptoJS.HmacMD5(data, key).toString())               // b7fb775de287693efcdf4800328090ac\nconsole.log("HMAC-SHA-1 值: ", CryptoJS.HmacSHA1(data, key).toString())            // 991cc6a5a76a7a329c6201bedd62794f1bef3cb7\nconsole.log("HMAC-SHA-224 值: ", CryptoJS.HmacSHA224(data, key).toString())        // 149e19e357f991ce6e997ac7db69e61fa41b7b10fd26e07af83ef691\nconsole.log("HMAC-SHA-256 值: ", CryptoJS.HmacSHA256(data, key).toString())        // ff605bd71b01d22f836ae60a622253d3e0761a4b275bf7952e061c419514c44e\nconsole.log("HMAC-SHA-384 值: ", CryptoJS.HmacSHA384(data, key).toString())        // a78c0cb3bc0ecb27a7a4b9527f18b9fa9ea8bf625798bc3c225b3695e8f9cad52eb7d76e8a18b1bcf23d9f13d3eb65fe\nconsole.log("HMAC-SHA-512 值: ", CryptoJS.HmacSHA512(data, key).toString())        // 668258a31cd742fef5c47511aa60d46998c62422d73470976c19c895c29b9f8a155fd8b7b95e534453b18294cf0064f30be9293fc9061421e3e8d30f1f7da886\nconsole.log("HMAC-RIPEMD-160 值: ", CryptoJS.HmacRIPEMD160(data, key).toString())  // 136838f8f725e801d76c1a376395884d1068d425\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# Golang\n\n// 安装依赖：go get golang.org/x/crypto\n\npackage main\n\nimport (\n    "crypto/hmac"\n    "crypto/md5"\n    "crypto/sha1"\n    "crypto/sha256"\n    "crypto/sha512"\n    "encoding/hex"\n    "fmt"\n    "golang.org/x/crypto/ripemd160"\n    "golang.org/x/crypto/sha3"\n    "hash"\n)\n\nfunc hmacHash(hashKey, hashData string, hashAlgorithm func() hash.Hash) string {\n    key := []byte(hashKey)\n    data := []byte(hashData)\n    h := hmac.New(hashAlgorithm, key)\n    h.Write(data)\n    return hex.EncodeToString(h.Sum(nil))\n}\n\nfunc main() {\n    key := "spiderapi"\n    data := "spiderapi.cn - 虫术"\n  \n    fmt.Println("HMAC-MD5 值: ", hmacHash(key, data, md5.New))              // b7fb775de287693efcdf4800328090ac\n    fmt.Println("HMAC-SHA-1 值: ", hmacHash(key, data, sha1.New))           // 991cc6a5a76a7a329c6201bedd62794f1bef3cb7\n    fmt.Println("HMAC-SHA-224 值: ", hmacHash(key, data, sha256.New224))    // 149e19e357f991ce6e997ac7db69e61fa41b7b10fd26e07af83ef691\n    fmt.Println("HMAC-SHA-256 值: ", hmacHash(key, data, sha256.New))       // ff605bd71b01d22f836ae60a622253d3e0761a4b275bf7952e061c419514c44e\n    fmt.Println("HMAC-SHA-384 值: ", hmacHash(key, data, sha512.New384))    // a78c0cb3bc0ecb27a7a4b9527f18b9fa9ea8bf625798bc3c225b3695e8f9cad52eb7d76e8a18b1bcf23d9f13d3eb65fe\n    fmt.Println("HMAC-SHA-512 值: ", hmacHash(key, data, sha512.New))       // 668258a31cd742fef5c47511aa60d46998c62422d73470976c19c895c29b9f8a155fd8b7b95e534453b18294cf0064f30be9293fc9061421e3e8d30f1f7da886\n    fmt.Println("HMAC-SHA3-224 值: ", hmacHash(key, data, sha3.New224))     // 4ebea358ef7123734a9f585f9825d91a4779b2b69c8fb1218ad6850d\n    fmt.Println("HMAC-SHA3-256 值: ", hmacHash(key, data, sha3.New256))     // ab67f986a381d6992d773fddc2367b9592df5f19ea2c2a3d4c19291c5b1492d4\n    fmt.Println("HMAC-SHA3-384 值: ", hmacHash(key, data, sha3.New384))     // bb2da5b39030fd22e8b3acc4d34d7e78c7739b5dd740c51897009f49b5c8384de0f9b784bebddca13255f1956734a542\n    fmt.Println("HMAC-SHA3-512 值: ", hmacHash(key, data, sha3.New512))     // 75cc29368c86c102280b68ad64f09c5d90596f760fef39a331afadc5bcdc9ac70d17bbd02a3bb61c22e81f7cfcb12ed10ee094003b382262f68f1dcc074ff032\n    fmt.Println("HMAC-RIPEMD-160 值: ", hmacHash(key, data, ripemd160.New)) // 136838f8f725e801d76c1a376395884d1068d425\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\n\n# 主要特征\n\n由于 HMAC 算法就是在 MD5、SHA 两种算法的基础上引入了秘钥，所以其密文也和 MD5、SHA 类似，密文的长度和使用的 MD5、SHA 算法对应密文的长度是一样的。特征如下：\n\n * HMAC-MD5：字母（a-f）和数字（0-9）混合，位数一般为 32 位；\n * HMAC-SHA-1：字母（a-f）和数字（0-9）混合，固定位数 40 位；\n * HMAC-SHA-224 / HMAC-SHA3-224：字母（a-f）和数字（0-9）混合，固定位数 56 位；\n * HMAC-SHA-256 / HMAC-SHA3-256：字母（a-f）和数字（0-9）混合，固定位数 64 位；\n * HMAC-SHA-384 / HMAC-SHA3-384：字母（a-f）和数字（0-9）混合，固定位数 96 位；\n * HMAC-SHA-512 / HMAC-SHA3-512：字母（a-f）和数字（0-9）混合，固定位数 128 位；\n * HMAC-RIPEMD-160：字母（a-f）和数字（0-9）混合，固定位数 40 位。\n\nHMAC 和 SHA、MD5 的密文都很像，当无法确定是否为 HMAC 时，可以通过其名称搜索到加密方法，如果传入了密钥 key，说明就是 HMAC，当然你也可以直接当做是 SHA 或 MD5 来解，解密失败时就得考虑是否有密钥。\n\n示例（密钥 spiderapi）：\n\n编码类型              示例\n明文                123456\nHMAC-MD5          58363adc66f92f49bd70aa62c2519e39\nHMAC-SHA-1        58dfa53888e3f5a5dfeafd74bc67428756bebc93\nHMAC-SHA-224      740839e11183a155bba6c309973ae361f5e41d82b0ab43500624391e\nHMAC-SHA-256      9182e7ff9430bc11321076680820198c4dd50c69b66c15db817961227c989ce0\nHMAC-SHA3-224     1d961ebaee1b4b78a64f3ca3c110a39284570c2bafdbff14eb2e5a59\nHMAC-SHA3-256     60f454d239b616f44163c6e236eb7b5e4a12192509482345be5721cd93b977da\nHMAC-RIPEMD-160   10af3008f6a808770d7ff2a473ae295e70e8b929\n\n\n# 在线工具\n\n * https://tool.chinaz.com/tools/hash.aspx\n * https://www.wetools.com/hmac/',normalizedContent:'关于 hmac 哈希算法\n\nhmac 是密钥相关的哈希运算消息认证码（hash-based message authentication code）的缩写，是一种通过特别计算方式之后产生的消息认证码（mac），使用密码散列函数，同时结合一个加密密钥。它可以用来保证资料的完整性，同时可以用来作某个消息的身份验证。简单来说，hmac 算法就是在 md5、sha 两种加密的基础上引入了秘钥，其密文也和 md5、sha 类似，密文的长度和使用的 md5、sha 算法对应密文的长度是一样的，hmac 可分为：\n\n * hmac-md5\n * hmac-sha-1\n * hmac-sha-224\n * hmac-sha-256\n * hmac-sha-384\n * hmac-sha-512\n * hmac-sha3-224\n * hmac-sha3-256\n * hmac-sha3-384\n * hmac-sha3-512\n * hmac-ripemd-160\n\nhmac 维基百科\n\n\n# python\n\n# 安装依赖 pip install pycryptodome\n\nimport hmac\nimport hashlib\nfrom crypto.hash import ripemd\n\n\ndef hmac_hash(hash_key, hash_data, hash_algorithm):\n    hmac_result = hmac.new(hash_key.encode(), hash_data.encode(), hash_algorithm)\n    return hmac_result.hexdigest()\n\n\ndef hmac_hash_ripemd160(hash_key, hash_data):\n    hmac_result = hmac.new(hash_key.encode(), hash_data.encode(), ripemd)\n    return hmac_result.hexdigest()\n\n\nkey = "spiderapi"\ndata = "spiderapi.cn - 虫术"\n\nprint("hmac-md5 值: ", hmac_hash(key, data, hashlib.md5))            # b7fb775de287693efcdf4800328090ac\nprint("hmac-sha-1 值: ", hmac_hash(key, data, hashlib.sha1))         # 991cc6a5a76a7a329c6201bedd62794f1bef3cb7\nprint("hmac-sha-224 值: ", hmac_hash(key, data, hashlib.sha224))     # 149e19e357f991ce6e997ac7db69e61fa41b7b10fd26e07af83ef691\nprint("hmac-sha-256 值: ", hmac_hash(key, data, hashlib.sha256))     # ff605bd71b01d22f836ae60a622253d3e0761a4b275bf7952e061c419514c44e\nprint("hmac-sha-384 值: ", hmac_hash(key, data, hashlib.sha384))     # a78c0cb3bc0ecb27a7a4b9527f18b9fa9ea8bf625798bc3c225b3695e8f9cad52eb7d76e8a18b1bcf23d9f13d3eb65fe\nprint("hmac-sha-512 值: ", hmac_hash(key, data, hashlib.sha512))     # 668258a31cd742fef5c47511aa60d46998c62422d73470976c19c895c29b9f8a155fd8b7b95e534453b18294cf0064f30be9293fc9061421e3e8d30f1f7da886\nprint("hmac-sha3-224 值: ", hmac_hash(key, data, hashlib.sha3_224))  # 4ebea358ef7123734a9f585f9825d91a4779b2b69c8fb1218ad6850d\nprint("hmac-sha3-256 值: ", hmac_hash(key, data, hashlib.sha3_256))  # ab67f986a381d6992d773fddc2367b9592df5f19ea2c2a3d4c19291c5b1492d4\nprint("hmac-sha3-384 值: ", hmac_hash(key, data, hashlib.sha3_384))  # bb2da5b39030fd22e8b3acc4d34d7e78c7739b5dd740c51897009f49b5c8384de0f9b784bebddca13255f1956734a542\nprint("hmac-sha3-512 值: ", hmac_hash(key, data, hashlib.sha3_512))  # 75cc29368c86c102280b68ad64f09c5d90596f760fef39a331afadc5bcdc9ac70d17bbd02a3bb61c22e81f7cfcb12ed10ee094003b382262f68f1dcc074ff032\nprint("hmac-ripemd-160 值: ", hmac_hash_ripemd160(key, data))        # 136838f8f725e801d76c1a376395884d1068d425\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n\n# javascript\n\nvar crypto = require("crypto");\n\n\nfunction hmachash(hashkey, hashdata, hashalgorithm) {\n    var hmac = crypto.createhmac(hashalgorithm, hashkey);\n    hmac.update(hashdata);\n    return hmac.digest("hex");\n}\n\nvar key = "spiderapi"\nvar data = "spiderapi.cn - 虫术";\n\nconsole.log("hmac-md5 值: ", hmachash(key, data, "md5"))               // b7fb775de287693efcdf4800328090ac\nconsole.log("hmac-sha-1 值: ", hmachash(key, data, "sha1"))            // 991cc6a5a76a7a329c6201bedd62794f1bef3cb7\nconsole.log("hmac-sha-224 值: ", hmachash(key, data, "sha224"))        // 149e19e357f991ce6e997ac7db69e61fa41b7b10fd26e07af83ef691\nconsole.log("hmac-sha-256 值: ", hmachash(key, data, "sha256"))        // ff605bd71b01d22f836ae60a622253d3e0761a4b275bf7952e061c419514c44e\nconsole.log("hmac-sha-384 值: ", hmachash(key, data, "sha384"))        // a78c0cb3bc0ecb27a7a4b9527f18b9fa9ea8bf625798bc3c225b3695e8f9cad52eb7d76e8a18b1bcf23d9f13d3eb65fe\nconsole.log("hmac-sha-512 值: ", hmachash(key, data, "sha512"))        // 668258a31cd742fef5c47511aa60d46998c62422d73470976c19c895c29b9f8a155fd8b7b95e534453b18294cf0064f30be9293fc9061421e3e8d30f1f7da886\nconsole.log("hmac-sha3-224 值: ", hmachash(key, data, "sha3-224"))     // 4ebea358ef7123734a9f585f9825d91a4779b2b69c8fb1218ad6850d\nconsole.log("hmac-sha3-256 值: ", hmachash(key, data, "sha3-256"))     // ab67f986a381d6992d773fddc2367b9592df5f19ea2c2a3d4c19291c5b1492d4\nconsole.log("hmac-sha3-384 值: ", hmachash(key, data, "sha3-384"))     // bb2da5b39030fd22e8b3acc4d34d7e78c7739b5dd740c51897009f49b5c8384de0f9b784bebddca13255f1956734a542\nconsole.log("hmac-sha3-512 值: ", hmachash(key, data, "sha3-512"))     // 75cc29368c86c102280b68ad64f09c5d90596f760fef39a331afadc5bcdc9ac70d17bbd02a3bb61c22e81f7cfcb12ed10ee094003b382262f68f1dcc074ff032\nconsole.log("hmac-ripemd-160 值: ", hmachash(key, data, "ripemd160"))  // 136838f8f725e801d76c1a376395884d1068d425\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n// 安装依赖 npm install crypto-js\n// crypto-js 不支持 hmac-sha3-224、hmac-sha3-256、hmac-sha3-384 和 hmac-sha3-512\n\nvar cryptojs = require("crypto-js");\n\nvar key = "spiderapi"\nvar data = "spiderapi.cn - 虫术";\n\nconsole.log("hmac-md5 值: ", cryptojs.hmacmd5(data, key).tostring())               // b7fb775de287693efcdf4800328090ac\nconsole.log("hmac-sha-1 值: ", cryptojs.hmacsha1(data, key).tostring())            // 991cc6a5a76a7a329c6201bedd62794f1bef3cb7\nconsole.log("hmac-sha-224 值: ", cryptojs.hmacsha224(data, key).tostring())        // 149e19e357f991ce6e997ac7db69e61fa41b7b10fd26e07af83ef691\nconsole.log("hmac-sha-256 值: ", cryptojs.hmacsha256(data, key).tostring())        // ff605bd71b01d22f836ae60a622253d3e0761a4b275bf7952e061c419514c44e\nconsole.log("hmac-sha-384 值: ", cryptojs.hmacsha384(data, key).tostring())        // a78c0cb3bc0ecb27a7a4b9527f18b9fa9ea8bf625798bc3c225b3695e8f9cad52eb7d76e8a18b1bcf23d9f13d3eb65fe\nconsole.log("hmac-sha-512 值: ", cryptojs.hmacsha512(data, key).tostring())        // 668258a31cd742fef5c47511aa60d46998c62422d73470976c19c895c29b9f8a155fd8b7b95e534453b18294cf0064f30be9293fc9061421e3e8d30f1f7da886\nconsole.log("hmac-ripemd-160 值: ", cryptojs.hmacripemd160(data, key).tostring())  // 136838f8f725e801d76c1a376395884d1068d425\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n\n# golang\n\n// 安装依赖：go get golang.org/x/crypto\n\npackage main\n\nimport (\n    "crypto/hmac"\n    "crypto/md5"\n    "crypto/sha1"\n    "crypto/sha256"\n    "crypto/sha512"\n    "encoding/hex"\n    "fmt"\n    "golang.org/x/crypto/ripemd160"\n    "golang.org/x/crypto/sha3"\n    "hash"\n)\n\nfunc hmachash(hashkey, hashdata string, hashalgorithm func() hash.hash) string {\n    key := []byte(hashkey)\n    data := []byte(hashdata)\n    h := hmac.new(hashalgorithm, key)\n    h.write(data)\n    return hex.encodetostring(h.sum(nil))\n}\n\nfunc main() {\n    key := "spiderapi"\n    data := "spiderapi.cn - 虫术"\n  \n    fmt.println("hmac-md5 值: ", hmachash(key, data, md5.new))              // b7fb775de287693efcdf4800328090ac\n    fmt.println("hmac-sha-1 值: ", hmachash(key, data, sha1.new))           // 991cc6a5a76a7a329c6201bedd62794f1bef3cb7\n    fmt.println("hmac-sha-224 值: ", hmachash(key, data, sha256.new224))    // 149e19e357f991ce6e997ac7db69e61fa41b7b10fd26e07af83ef691\n    fmt.println("hmac-sha-256 值: ", hmachash(key, data, sha256.new))       // ff605bd71b01d22f836ae60a622253d3e0761a4b275bf7952e061c419514c44e\n    fmt.println("hmac-sha-384 值: ", hmachash(key, data, sha512.new384))    // a78c0cb3bc0ecb27a7a4b9527f18b9fa9ea8bf625798bc3c225b3695e8f9cad52eb7d76e8a18b1bcf23d9f13d3eb65fe\n    fmt.println("hmac-sha-512 值: ", hmachash(key, data, sha512.new))       // 668258a31cd742fef5c47511aa60d46998c62422d73470976c19c895c29b9f8a155fd8b7b95e534453b18294cf0064f30be9293fc9061421e3e8d30f1f7da886\n    fmt.println("hmac-sha3-224 值: ", hmachash(key, data, sha3.new224))     // 4ebea358ef7123734a9f585f9825d91a4779b2b69c8fb1218ad6850d\n    fmt.println("hmac-sha3-256 值: ", hmachash(key, data, sha3.new256))     // ab67f986a381d6992d773fddc2367b9592df5f19ea2c2a3d4c19291c5b1492d4\n    fmt.println("hmac-sha3-384 值: ", hmachash(key, data, sha3.new384))     // bb2da5b39030fd22e8b3acc4d34d7e78c7739b5dd740c51897009f49b5c8384de0f9b784bebddca13255f1956734a542\n    fmt.println("hmac-sha3-512 值: ", hmachash(key, data, sha3.new512))     // 75cc29368c86c102280b68ad64f09c5d90596f760fef39a331afadc5bcdc9ac70d17bbd02a3bb61c22e81f7cfcb12ed10ee094003b382262f68f1dcc074ff032\n    fmt.println("hmac-ripemd-160 值: ", hmachash(key, data, ripemd160.new)) // 136838f8f725e801d76c1a376395884d1068d425\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n\n\n\n# 主要特征\n\n由于 hmac 算法就是在 md5、sha 两种算法的基础上引入了秘钥，所以其密文也和 md5、sha 类似，密文的长度和使用的 md5、sha 算法对应密文的长度是一样的。特征如下：\n\n * hmac-md5：字母（a-f）和数字（0-9）混合，位数一般为 32 位；\n * hmac-sha-1：字母（a-f）和数字（0-9）混合，固定位数 40 位；\n * hmac-sha-224 / hmac-sha3-224：字母（a-f）和数字（0-9）混合，固定位数 56 位；\n * hmac-sha-256 / hmac-sha3-256：字母（a-f）和数字（0-9）混合，固定位数 64 位；\n * hmac-sha-384 / hmac-sha3-384：字母（a-f）和数字（0-9）混合，固定位数 96 位；\n * hmac-sha-512 / hmac-sha3-512：字母（a-f）和数字（0-9）混合，固定位数 128 位；\n * hmac-ripemd-160：字母（a-f）和数字（0-9）混合，固定位数 40 位。\n\nhmac 和 sha、md5 的密文都很像，当无法确定是否为 hmac 时，可以通过其名称搜索到加密方法，如果传入了密钥 key，说明就是 hmac，当然你也可以直接当做是 sha 或 md5 来解，解密失败时就得考虑是否有密钥。\n\n示例（密钥 spiderapi）：\n\n编码类型              示例\n明文                123456\nhmac-md5          58363adc66f92f49bd70aa62c2519e39\nhmac-sha-1        58dfa53888e3f5a5dfeafd74bc67428756bebc93\nhmac-sha-224      740839e11183a155bba6c309973ae361f5e41d82b0ab43500624391e\nhmac-sha-256      9182e7ff9430bc11321076680820198c4dd50c69b66c15db817961227c989ce0\nhmac-sha3-224     1d961ebaee1b4b78a64f3ca3c110a39284570c2bafdbff14eb2e5a59\nhmac-sha3-256     60f454d239b616f44163c6e236eb7b5e4a12192509482345be5721cd93b977da\nhmac-ripemd-160   10af3008f6a808770d7ff2a473ae295e70e8b929\n\n\n# 在线工具\n\n * https://tool.chinaz.com/tools/hash.aspx\n * https://www.wetools.com/hmac/',charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"SHA",frontmatter:{title:"SHA",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/sha",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/06.sha.html",relativePath:"03.辅助查询/04.加密算法/06.sha.md",key:"v-f4006068",path:"/pages/sha/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:616},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:2818},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:6220},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:10553},{level:2,title:"在线工具",slug:"在线工具",normalizedTitle:"在线工具",charIndex:11207}],headersStr:"Python JavaScript Golang 主要特征 在线工具",content:'关于 SHA 哈希算法\n\n安全哈希算法（英语：Secure Hash Algorithm，缩写为 SHA）由美国国家安全局（NSA）所设计，并由美国国家标准与技术研究院（NIST）发布的一系列加密哈希算法，SHA 家族系列包括：\n\n * SHA-0：1993 年发布，当时称做安全散列标准（Secure Hash Standard），由于未公开的重大缺陷，发布之后很快就被 NSA 撤回，并被稍作修改的 SHA-1 版本取代；\n * SHA-1：1995 年发布，但在 2010 年以后已经不被大多数的加密场景所接受，2017 年荷兰密码学研究小组 CWI 和 Google 正式宣布攻破了 SHA-1；\n * SHA-2：2001 年发布，包括 SHA-224、SHA-256、SHA-384、SHA-512、SHA-512/224、SHA-512/256，SHA-2 目前没有出现明显的弱点，虽然至今尚未出现对 SHA-2 有效的攻击，但它的算法跟 SHA-1 基本上仍然相似；\n * SHA-3：2015 年发布，包括 SHA3-224、SHA3-256、SHA3-384、SHA3-512、SHAKE128、SHAKE256，由于 MD5 被成功的破解，以及 SHA-0 和 SHA-1 出现理论上破解的方法，NIST 需要一个与之前算法不同的、可替换的加密散列算法，也就是现在的 SHA-3。\n\nSHA 维基百科\n\n\n# Python\n\nimport hashlib\n\n\ndef sha_hash(hash_data, hash_algorithm):\n    sha_object = hashlib.new(hash_algorithm)\n    sha_object.update(hash_data.encode())\n    sha_result = sha_object.hexdigest()\n    return sha_result\n\n\ndef sha_hash_shake128(hash_data, hash_length):\n    sha_object = hashlib.shake_128()\n    sha_object.update(hash_data.encode())\n    sha_result = sha_object.digest(hash_length).hex()\n    return sha_result\n\n\ndef sha_hash_shake256(hash_data, hash_length):\n    sha_object = hashlib.shake_256()\n    sha_object.update(hash_data.encode())\n    sha_result = sha_object.digest(hash_length).hex()\n    return sha_result\n\n\ndata = "spiderapi.cn - 虫术"\n\nprint("SHA-1 值: ", sha_hash(data, "sha1"))         # 53189bf70db84f4ced0f6c691dffe67c19632b19\nprint("SHA-224 值: ", sha_hash(data, "sha224"))     # c1aabab47820be476620ba4ee445a20f937803023142d28d68e6e369\nprint("SHA-256 值: ", sha_hash(data, "sha256"))     # a9b9db2c59053c7843d59218bf9f9067f5803031bece0fe6853c858532ef6d3c\nprint("SHA-384 值: ", sha_hash(data, "sha384"))     # c984e64888d99ecd27b8761293286fc2bee56a3537f79bf9cbf7652ff28310f388e4d5f94d7832f9691ea34e5eec66c7\nprint("SHA-512 值: ", sha_hash(data, "sha512"))     # 233a2eb1a25db75a9f32d46c99432fe7c4321719f3405530c4f94fa6624d890b5a1fa3f31f672a9c679eb3eb5b867edf13967246ecd737103e95fd63929c593e\nprint("SHA3-224 值: ", sha_hash(data, "sha3_224"))  # d6ad2d97cec0c2377bf20e98a1f464d5157860aa840e5733bdbe12dd\nprint("SHA3-256 值: ", sha_hash(data, "sha3_256"))  # 63dd351dcd0ba81682119d93991e0bf6b58d503e60dcb3747222921ec83955a5\nprint("SHA3-384 值: ", sha_hash(data, "sha3_384"))  # ee7ad38dcda87bfddb5acaa021a4abc46cc1f0c631967bd7aee657850fffaf43c342a3c9194fcb1e4694c670e04f9a80\nprint("SHA3-512 值: ", sha_hash(data, "sha3_512"))  # d376726ba1c4708653ae44445d057382d6df05e20538e27a6f98b1247b5077dc4d81cd159738aaf2409eaadc64263c7b5fef94f1345df777cbf03fd700154816\n\n# 获取比特长度为 16 的哈希值，比特长度必须是 8 的倍数，且不超过 2^256-1\nprint("SHAKE128 值: ", sha_hash_shake128(data, 16))  # b5b1a0f24b4b35e097020a2dc3c8a2e5\nprint("SHAKE256 值: ", sha_hash_shake256(data, 16))  # 18f5334b2b2ae60e07459da26d97a0fc\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n\n# JavaScript\n\n// crypto 不支持 SHAKE128、SHAKE256，请使用方法二\n\nvar crypto = require("crypto");\n\n\nfunction shaHash(hashData, hashAlgorithm) {\n    var sha = crypto.createHash(hashAlgorithm);\n    sha.update(hashData);\n    return sha.digest("hex");\n}\n\nvar data = "spiderapi.cn - 虫术";\n\nconsole.log("SHA-1 值: ", shaHash(data, "sha1"))         // 53189bf70db84f4ced0f6c691dffe67c19632b19\nconsole.log("SHA-224 值: ", shaHash(data, "sha224"))     // c1aabab47820be476620ba4ee445a20f937803023142d28d68e6e369\nconsole.log("SHA-256 值: ", shaHash(data, "sha256"))     // a9b9db2c59053c7843d59218bf9f9067f5803031bece0fe6853c858532ef6d3c\nconsole.log("SHA-384 值: ", shaHash(data, "sha384"))     // c984e64888d99ecd27b8761293286fc2bee56a3537f79bf9cbf7652ff28310f388e4d5f94d7832f9691ea34e5eec66c7\nconsole.log("SHA-512 值: ", shaHash(data, "sha512"))     // 233a2eb1a25db75a9f32d46c99432fe7c4321719f3405530c4f94fa6624d890b5a1fa3f31f672a9c679eb3eb5b867edf13967246ecd737103e95fd63929c593e\nconsole.log("SHA3-224 值: ", shaHash(data, "sha3-224"))  // d6ad2d97cec0c2377bf20e98a1f464d5157860aa840e5733bdbe12dd\nconsole.log("SHA3-256 值: ", shaHash(data, "sha3-256"))  // 63dd351dcd0ba81682119d93991e0bf6b58d503e60dcb3747222921ec83955a5\nconsole.log("SHA3-384 值: ", shaHash(data, "sha3-384"))  // ee7ad38dcda87bfddb5acaa021a4abc46cc1f0c631967bd7aee657850fffaf43c342a3c9194fcb1e4694c670e04f9a80\nconsole.log("SHA3-512 值: ", shaHash(data, "sha3-512"))  // d376726ba1c4708653ae44445d057382d6df05e20538e27a6f98b1247b5077dc4d81cd159738aaf2409eaadc64263c7b5fef94f1345df777cbf03fd700154816\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n// 安装依赖 npm install js-sha3\n// 仅支持 SHA3 系列算法\n\nvar jsSHA3 = require("js-sha3");\n\n\nvar data = "spiderapi.cn - 虫术";\n\nconsole.log("SHA3-224 值: ", jsSHA3.sha3_224(data))       // d6ad2d97cec0c2377bf20e98a1f464d5157860aa840e5733bdbe12dd\nconsole.log("SHA3-256 值: ", jsSHA3.sha3_256(data))       // 63dd351dcd0ba81682119d93991e0bf6b58d503e60dcb3747222921ec83955a5\nconsole.log("SHA3-384 值: ", jsSHA3.sha3_384(data))       // ee7ad38dcda87bfddb5acaa021a4abc46cc1f0c631967bd7aee657850fffaf43c342a3c9194fcb1e4694c670e04f9a80\nconsole.log("SHA3-512 值: ", jsSHA3.sha3_512(data))       // d376726ba1c4708653ae44445d057382d6df05e20538e27a6f98b1247b5077dc4d81cd159738aaf2409eaadc64263c7b5fef94f1345df777cbf03fd700154816\nconsole.log("SHAKE128 值: ", jsSHA3.shake128(data, 128))  // b5b1a0f24b4b35e097020a2dc3c8a2e5\nconsole.log("SHAKE256 值: ", jsSHA3.shake256(data, 128))  // 18f5334b2b2ae60e07459da26d97a0fc\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n// 安装依赖 npm install crypto-js\n// SHA3 系列算法推荐使用方法一和方法二\n\nvar CryptoJS = require("crypto-js");\n\n\nvar data = "spiderapi.cn - 虫术";\n\nconsole.log("SHA-1 值: ", CryptoJS.SHA1(data).toString())      // 53189bf70db84f4ced0f6c691dffe67c19632b19\nconsole.log("SHA-224 值: ", CryptoJS.SHA224(data).toString())  // c1aabab47820be476620ba4ee445a20f937803023142d28d68e6e369\nconsole.log("SHA-256 值: ", CryptoJS.SHA256(data).toString())  // a9b9db2c59053c7843d59218bf9f9067f5803031bece0fe6853c858532ef6d3c\nconsole.log("SHA-384 值: ", CryptoJS.SHA384(data).toString())  // c984e64888d99ecd27b8761293286fc2bee56a3537f79bf9cbf7652ff28310f388e4d5f94d7832f9691ea34e5eec66c7\nconsole.log("SHA-512 值: ", CryptoJS.SHA512(data).toString())  // 233a2eb1a25db75a9f32d46c99432fe7c4321719f3405530c4f94fa6624d890b5a1fa3f31f672a9c679eb3eb5b867edf13967246ecd737103e95fd63929c593e\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# Golang\n\n// 安装依赖：go get golang.org/x/crypto\n\npackage main\n\nimport (\n    "crypto/sha1"\n    "crypto/sha256"\n    "crypto/sha512"\n    "encoding/hex"\n    "fmt"\n    "golang.org/x/crypto/sha3"\n)\n\nfunc shaHash(hashData, hashAlgorithm string) string {\n    switch hashAlgorithm {\n    case "sha1":\n        hash := sha1.New()\n        hash.Write([]byte(hashData))\n        return hex.EncodeToString(hash.Sum(nil))\n    case "sha224":\n        hash := sha256.New224()\n        hash.Write([]byte(hashData))\n        return hex.EncodeToString(hash.Sum(nil))\n    case "sha384":\n        hash := sha512.New384()\n        hash.Write([]byte(hashData))\n        return hex.EncodeToString(hash.Sum(nil))\n    case "sha256":\n        hash := sha256.New()\n        hash.Write([]byte(hashData))\n        return hex.EncodeToString(hash.Sum(nil))\n    case "sha512":\n        hash := sha512.New()\n        hash.Write([]byte(hashData))\n        return hex.EncodeToString(hash.Sum(nil))\n    case "sha3-224":\n        hash := sha3.New224()\n        hash.Write([]byte(hashData))\n        return hex.EncodeToString(hash.Sum(nil))\n    case "sha3-256":\n        hash := sha3.New256()\n        hash.Write([]byte(hashData))\n        return hex.EncodeToString(hash.Sum(nil))\n    case "sha3-384":\n        hash := sha3.New384()\n        hash.Write([]byte(hashData))\n        return hex.EncodeToString(hash.Sum(nil))\n    case "sha3-512":\n        hash := sha3.New512()\n        hash.Write([]byte(hashData))\n        return hex.EncodeToString(hash.Sum(nil))\n    default:\n        panic("Unsupported sha algorithm!")\n    }\n}\n\nfunc shaHashShake(hashData, hashAlgorithm string, hashLength int) string {\n    switch hashAlgorithm {\n    case "shake128":\n        hash := sha3.NewShake128()\n        _, err := hash.Write([]byte(hashData))\n        if err != nil {\n            return ""\n        }\n        hashValue := make([]byte, hashLength)\n        _, err = hash.Read(hashValue)\n        if err != nil {\n            return ""\n        }\n        return hex.EncodeToString(hashValue)\n    case "shake256":\n        hash := sha3.NewShake256()\n        _, err := hash.Write([]byte(hashData))\n        if err != nil {\n            return ""\n        }\n        hashValue := make([]byte, hashLength)\n        _, err = hash.Read(hashValue)\n        if err != nil {\n            return ""\n        }\n        return hex.EncodeToString(hashValue)\n    default:\n        panic("Unsupported sha algorithm!")\n    }\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n  \n    fmt.Println("SHA-1 值: ", shaHash(data, "sha1"))        // 53189bf70db84f4ced0f6c691dffe67c19632b19\n    fmt.Println("SHA-224 值: ", shaHash(data, "sha224"))    // c1aabab47820be476620ba4ee445a20f937803023142d28d68e6e369\n    fmt.Println("SHA-256 值: ", shaHash(data, "sha256"))    // a9b9db2c59053c7843d59218bf9f9067f5803031bece0fe6853c858532ef6d3c\n    fmt.Println("SHA-384 值: ", shaHash(data, "sha384"))    // c984e64888d99ecd27b8761293286fc2bee56a3537f79bf9cbf7652ff28310f388e4d5f94d7832f9691ea34e5eec66c7\n    fmt.Println("SHA-512 值: ", shaHash(data, "sha512"))    // 233a2eb1a25db75a9f32d46c99432fe7c4321719f3405530c4f94fa6624d890b5a1fa3f31f672a9c679eb3eb5b867edf13967246ecd737103e95fd63929c593e\n    fmt.Println("SHA3-224 值: ", shaHash(data, "sha3-224")) // d6ad2d97cec0c2377bf20e98a1f464d5157860aa840e5733bdbe12dd\n    fmt.Println("SHA3-256 值: ", shaHash(data, "sha3-256")) // 63dd351dcd0ba81682119d93991e0bf6b58d503e60dcb3747222921ec83955a5\n    fmt.Println("SHA3-384 值: ", shaHash(data, "sha3-384")) // ee7ad38dcda87bfddb5acaa021a4abc46cc1f0c631967bd7aee657850fffaf43c342a3c9194fcb1e4694c670e04f9a80\n    fmt.Println("SHA3-512 值: ", shaHash(data, "sha3-512")) // d376726ba1c4708653ae44445d057382d6df05e20538e27a6f98b1247b5077dc4d81cd159738aaf2409eaadc64263c7b5fef94f1345df777cbf03fd700154816\n  \n    // 获取比特长度为 16 的哈希值，比特长度必须是 8 的倍数，且不超过 2^256-1\n    fmt.Println("SHAKE128 值: ", shaHashShake(data, "shake128", 16)) // b5b1a0f24b4b35e097020a2dc3c8a2e5\n    fmt.Println("SHAKE256 值: ", shaHashShake(data, "shake256", 16)) // 18f5334b2b2ae60e07459da26d97a0fc\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n\n\n\n# 主要特征\n\nSHAKE 算法结果的大小并不是固定的，其他算法特征如下：\n\n * SHA-1：字母（a-f）和数字（0-9）混合，固定位数 40 位；\n * SHA-224/SHA3-224：字母（a-f）和数字（0-9）混合，固定位数 56 位；\n * SHA-256/SHA3-256：字母（a-f）和数字（0-9）混合，固定位数 64 位；\n * SHA-384/SHA3-384：字母（a-f）和数字（0-9）混合，固定位数 96 位；\n * SHA-512/SHA3-512：字母（a-f）和数字（0-9）混合，固定位数 128 位。\n\n示例：\n\n编码类型       示例\n明文         123456\nSHA-1      7c4a8d09ca3762af61e59520943dc26494f8941b\nSHA-224    f8cdb04495ded47615258f9dc6a3f4707fd2405434fefc3cbf4ef4e6\nSHA-256    8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92\nSHA3-224   6be790258b73da9441099c4cb6aeec1f0c883152dd74e7581b70a648\nSHA3-256   d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e\n\n\n# 在线工具\n\nhttps://www.bejson.com/enc/sha/',normalizedContent:'关于 sha 哈希算法\n\n安全哈希算法（英语：secure hash algorithm，缩写为 sha）由美国国家安全局（nsa）所设计，并由美国国家标准与技术研究院（nist）发布的一系列加密哈希算法，sha 家族系列包括：\n\n * sha-0：1993 年发布，当时称做安全散列标准（secure hash standard），由于未公开的重大缺陷，发布之后很快就被 nsa 撤回，并被稍作修改的 sha-1 版本取代；\n * sha-1：1995 年发布，但在 2010 年以后已经不被大多数的加密场景所接受，2017 年荷兰密码学研究小组 cwi 和 google 正式宣布攻破了 sha-1；\n * sha-2：2001 年发布，包括 sha-224、sha-256、sha-384、sha-512、sha-512/224、sha-512/256，sha-2 目前没有出现明显的弱点，虽然至今尚未出现对 sha-2 有效的攻击，但它的算法跟 sha-1 基本上仍然相似；\n * sha-3：2015 年发布，包括 sha3-224、sha3-256、sha3-384、sha3-512、shake128、shake256，由于 md5 被成功的破解，以及 sha-0 和 sha-1 出现理论上破解的方法，nist 需要一个与之前算法不同的、可替换的加密散列算法，也就是现在的 sha-3。\n\nsha 维基百科\n\n\n# python\n\nimport hashlib\n\n\ndef sha_hash(hash_data, hash_algorithm):\n    sha_object = hashlib.new(hash_algorithm)\n    sha_object.update(hash_data.encode())\n    sha_result = sha_object.hexdigest()\n    return sha_result\n\n\ndef sha_hash_shake128(hash_data, hash_length):\n    sha_object = hashlib.shake_128()\n    sha_object.update(hash_data.encode())\n    sha_result = sha_object.digest(hash_length).hex()\n    return sha_result\n\n\ndef sha_hash_shake256(hash_data, hash_length):\n    sha_object = hashlib.shake_256()\n    sha_object.update(hash_data.encode())\n    sha_result = sha_object.digest(hash_length).hex()\n    return sha_result\n\n\ndata = "spiderapi.cn - 虫术"\n\nprint("sha-1 值: ", sha_hash(data, "sha1"))         # 53189bf70db84f4ced0f6c691dffe67c19632b19\nprint("sha-224 值: ", sha_hash(data, "sha224"))     # c1aabab47820be476620ba4ee445a20f937803023142d28d68e6e369\nprint("sha-256 值: ", sha_hash(data, "sha256"))     # a9b9db2c59053c7843d59218bf9f9067f5803031bece0fe6853c858532ef6d3c\nprint("sha-384 值: ", sha_hash(data, "sha384"))     # c984e64888d99ecd27b8761293286fc2bee56a3537f79bf9cbf7652ff28310f388e4d5f94d7832f9691ea34e5eec66c7\nprint("sha-512 值: ", sha_hash(data, "sha512"))     # 233a2eb1a25db75a9f32d46c99432fe7c4321719f3405530c4f94fa6624d890b5a1fa3f31f672a9c679eb3eb5b867edf13967246ecd737103e95fd63929c593e\nprint("sha3-224 值: ", sha_hash(data, "sha3_224"))  # d6ad2d97cec0c2377bf20e98a1f464d5157860aa840e5733bdbe12dd\nprint("sha3-256 值: ", sha_hash(data, "sha3_256"))  # 63dd351dcd0ba81682119d93991e0bf6b58d503e60dcb3747222921ec83955a5\nprint("sha3-384 值: ", sha_hash(data, "sha3_384"))  # ee7ad38dcda87bfddb5acaa021a4abc46cc1f0c631967bd7aee657850fffaf43c342a3c9194fcb1e4694c670e04f9a80\nprint("sha3-512 值: ", sha_hash(data, "sha3_512"))  # d376726ba1c4708653ae44445d057382d6df05e20538e27a6f98b1247b5077dc4d81cd159738aaf2409eaadc64263c7b5fef94f1345df777cbf03fd700154816\n\n# 获取比特长度为 16 的哈希值，比特长度必须是 8 的倍数，且不超过 2^256-1\nprint("shake128 值: ", sha_hash_shake128(data, 16))  # b5b1a0f24b4b35e097020a2dc3c8a2e5\nprint("shake256 值: ", sha_hash_shake256(data, 16))  # 18f5334b2b2ae60e07459da26d97a0fc\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n\n# javascript\n\n// crypto 不支持 shake128、shake256，请使用方法二\n\nvar crypto = require("crypto");\n\n\nfunction shahash(hashdata, hashalgorithm) {\n    var sha = crypto.createhash(hashalgorithm);\n    sha.update(hashdata);\n    return sha.digest("hex");\n}\n\nvar data = "spiderapi.cn - 虫术";\n\nconsole.log("sha-1 值: ", shahash(data, "sha1"))         // 53189bf70db84f4ced0f6c691dffe67c19632b19\nconsole.log("sha-224 值: ", shahash(data, "sha224"))     // c1aabab47820be476620ba4ee445a20f937803023142d28d68e6e369\nconsole.log("sha-256 值: ", shahash(data, "sha256"))     // a9b9db2c59053c7843d59218bf9f9067f5803031bece0fe6853c858532ef6d3c\nconsole.log("sha-384 值: ", shahash(data, "sha384"))     // c984e64888d99ecd27b8761293286fc2bee56a3537f79bf9cbf7652ff28310f388e4d5f94d7832f9691ea34e5eec66c7\nconsole.log("sha-512 值: ", shahash(data, "sha512"))     // 233a2eb1a25db75a9f32d46c99432fe7c4321719f3405530c4f94fa6624d890b5a1fa3f31f672a9c679eb3eb5b867edf13967246ecd737103e95fd63929c593e\nconsole.log("sha3-224 值: ", shahash(data, "sha3-224"))  // d6ad2d97cec0c2377bf20e98a1f464d5157860aa840e5733bdbe12dd\nconsole.log("sha3-256 值: ", shahash(data, "sha3-256"))  // 63dd351dcd0ba81682119d93991e0bf6b58d503e60dcb3747222921ec83955a5\nconsole.log("sha3-384 值: ", shahash(data, "sha3-384"))  // ee7ad38dcda87bfddb5acaa021a4abc46cc1f0c631967bd7aee657850fffaf43c342a3c9194fcb1e4694c670e04f9a80\nconsole.log("sha3-512 值: ", shahash(data, "sha3-512"))  // d376726ba1c4708653ae44445d057382d6df05e20538e27a6f98b1247b5077dc4d81cd159738aaf2409eaadc64263c7b5fef94f1345df777cbf03fd700154816\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n// 安装依赖 npm install js-sha3\n// 仅支持 sha3 系列算法\n\nvar jssha3 = require("js-sha3");\n\n\nvar data = "spiderapi.cn - 虫术";\n\nconsole.log("sha3-224 值: ", jssha3.sha3_224(data))       // d6ad2d97cec0c2377bf20e98a1f464d5157860aa840e5733bdbe12dd\nconsole.log("sha3-256 值: ", jssha3.sha3_256(data))       // 63dd351dcd0ba81682119d93991e0bf6b58d503e60dcb3747222921ec83955a5\nconsole.log("sha3-384 值: ", jssha3.sha3_384(data))       // ee7ad38dcda87bfddb5acaa021a4abc46cc1f0c631967bd7aee657850fffaf43c342a3c9194fcb1e4694c670e04f9a80\nconsole.log("sha3-512 值: ", jssha3.sha3_512(data))       // d376726ba1c4708653ae44445d057382d6df05e20538e27a6f98b1247b5077dc4d81cd159738aaf2409eaadc64263c7b5fef94f1345df777cbf03fd700154816\nconsole.log("shake128 值: ", jssha3.shake128(data, 128))  // b5b1a0f24b4b35e097020a2dc3c8a2e5\nconsole.log("shake256 值: ", jssha3.shake256(data, 128))  // 18f5334b2b2ae60e07459da26d97a0fc\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n// 安装依赖 npm install crypto-js\n// sha3 系列算法推荐使用方法一和方法二\n\nvar cryptojs = require("crypto-js");\n\n\nvar data = "spiderapi.cn - 虫术";\n\nconsole.log("sha-1 值: ", cryptojs.sha1(data).tostring())      // 53189bf70db84f4ced0f6c691dffe67c19632b19\nconsole.log("sha-224 值: ", cryptojs.sha224(data).tostring())  // c1aabab47820be476620ba4ee445a20f937803023142d28d68e6e369\nconsole.log("sha-256 值: ", cryptojs.sha256(data).tostring())  // a9b9db2c59053c7843d59218bf9f9067f5803031bece0fe6853c858532ef6d3c\nconsole.log("sha-384 值: ", cryptojs.sha384(data).tostring())  // c984e64888d99ecd27b8761293286fc2bee56a3537f79bf9cbf7652ff28310f388e4d5f94d7832f9691ea34e5eec66c7\nconsole.log("sha-512 值: ", cryptojs.sha512(data).tostring())  // 233a2eb1a25db75a9f32d46c99432fe7c4321719f3405530c4f94fa6624d890b5a1fa3f31f672a9c679eb3eb5b867edf13967246ecd737103e95fd63929c593e\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# golang\n\n// 安装依赖：go get golang.org/x/crypto\n\npackage main\n\nimport (\n    "crypto/sha1"\n    "crypto/sha256"\n    "crypto/sha512"\n    "encoding/hex"\n    "fmt"\n    "golang.org/x/crypto/sha3"\n)\n\nfunc shahash(hashdata, hashalgorithm string) string {\n    switch hashalgorithm {\n    case "sha1":\n        hash := sha1.new()\n        hash.write([]byte(hashdata))\n        return hex.encodetostring(hash.sum(nil))\n    case "sha224":\n        hash := sha256.new224()\n        hash.write([]byte(hashdata))\n        return hex.encodetostring(hash.sum(nil))\n    case "sha384":\n        hash := sha512.new384()\n        hash.write([]byte(hashdata))\n        return hex.encodetostring(hash.sum(nil))\n    case "sha256":\n        hash := sha256.new()\n        hash.write([]byte(hashdata))\n        return hex.encodetostring(hash.sum(nil))\n    case "sha512":\n        hash := sha512.new()\n        hash.write([]byte(hashdata))\n        return hex.encodetostring(hash.sum(nil))\n    case "sha3-224":\n        hash := sha3.new224()\n        hash.write([]byte(hashdata))\n        return hex.encodetostring(hash.sum(nil))\n    case "sha3-256":\n        hash := sha3.new256()\n        hash.write([]byte(hashdata))\n        return hex.encodetostring(hash.sum(nil))\n    case "sha3-384":\n        hash := sha3.new384()\n        hash.write([]byte(hashdata))\n        return hex.encodetostring(hash.sum(nil))\n    case "sha3-512":\n        hash := sha3.new512()\n        hash.write([]byte(hashdata))\n        return hex.encodetostring(hash.sum(nil))\n    default:\n        panic("unsupported sha algorithm!")\n    }\n}\n\nfunc shahashshake(hashdata, hashalgorithm string, hashlength int) string {\n    switch hashalgorithm {\n    case "shake128":\n        hash := sha3.newshake128()\n        _, err := hash.write([]byte(hashdata))\n        if err != nil {\n            return ""\n        }\n        hashvalue := make([]byte, hashlength)\n        _, err = hash.read(hashvalue)\n        if err != nil {\n            return ""\n        }\n        return hex.encodetostring(hashvalue)\n    case "shake256":\n        hash := sha3.newshake256()\n        _, err := hash.write([]byte(hashdata))\n        if err != nil {\n            return ""\n        }\n        hashvalue := make([]byte, hashlength)\n        _, err = hash.read(hashvalue)\n        if err != nil {\n            return ""\n        }\n        return hex.encodetostring(hashvalue)\n    default:\n        panic("unsupported sha algorithm!")\n    }\n}\n\nfunc main() {\n    data := "spiderapi.cn - 虫术"\n  \n    fmt.println("sha-1 值: ", shahash(data, "sha1"))        // 53189bf70db84f4ced0f6c691dffe67c19632b19\n    fmt.println("sha-224 值: ", shahash(data, "sha224"))    // c1aabab47820be476620ba4ee445a20f937803023142d28d68e6e369\n    fmt.println("sha-256 值: ", shahash(data, "sha256"))    // a9b9db2c59053c7843d59218bf9f9067f5803031bece0fe6853c858532ef6d3c\n    fmt.println("sha-384 值: ", shahash(data, "sha384"))    // c984e64888d99ecd27b8761293286fc2bee56a3537f79bf9cbf7652ff28310f388e4d5f94d7832f9691ea34e5eec66c7\n    fmt.println("sha-512 值: ", shahash(data, "sha512"))    // 233a2eb1a25db75a9f32d46c99432fe7c4321719f3405530c4f94fa6624d890b5a1fa3f31f672a9c679eb3eb5b867edf13967246ecd737103e95fd63929c593e\n    fmt.println("sha3-224 值: ", shahash(data, "sha3-224")) // d6ad2d97cec0c2377bf20e98a1f464d5157860aa840e5733bdbe12dd\n    fmt.println("sha3-256 值: ", shahash(data, "sha3-256")) // 63dd351dcd0ba81682119d93991e0bf6b58d503e60dcb3747222921ec83955a5\n    fmt.println("sha3-384 值: ", shahash(data, "sha3-384")) // ee7ad38dcda87bfddb5acaa021a4abc46cc1f0c631967bd7aee657850fffaf43c342a3c9194fcb1e4694c670e04f9a80\n    fmt.println("sha3-512 值: ", shahash(data, "sha3-512")) // d376726ba1c4708653ae44445d057382d6df05e20538e27a6f98b1247b5077dc4d81cd159738aaf2409eaadc64263c7b5fef94f1345df777cbf03fd700154816\n  \n    // 获取比特长度为 16 的哈希值，比特长度必须是 8 的倍数，且不超过 2^256-1\n    fmt.println("shake128 值: ", shahashshake(data, "shake128", 16)) // b5b1a0f24b4b35e097020a2dc3c8a2e5\n    fmt.println("shake256 值: ", shahashshake(data, "shake256", 16)) // 18f5334b2b2ae60e07459da26d97a0fc\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n\n\n\n# 主要特征\n\nshake 算法结果的大小并不是固定的，其他算法特征如下：\n\n * sha-1：字母（a-f）和数字（0-9）混合，固定位数 40 位；\n * sha-224/sha3-224：字母（a-f）和数字（0-9）混合，固定位数 56 位；\n * sha-256/sha3-256：字母（a-f）和数字（0-9）混合，固定位数 64 位；\n * sha-384/sha3-384：字母（a-f）和数字（0-9）混合，固定位数 96 位；\n * sha-512/sha3-512：字母（a-f）和数字（0-9）混合，固定位数 128 位。\n\n示例：\n\n编码类型       示例\n明文         123456\nsha-1      7c4a8d09ca3762af61e59520943dc26494f8941b\nsha-224    f8cdb04495ded47615258f9dc6a3f4707fd2405434fefc3cbf4ef4e6\nsha-256    8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92\nsha3-224   6be790258b73da9441099c4cb6aeec1f0c883152dd74e7581b70a648\nsha3-256   d7190eb194ff9494625514b6d178c87f99c5973e28c398969d2233f2960a573e\n\n\n# 在线工具\n\nhttps://www.bejson.com/enc/sha/',charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"AES",frontmatter:{title:"AES",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/aes",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/08.aes.html",relativePath:"03.辅助查询/04.加密算法/08.aes.md",key:"v-4a82ac02",path:"/pages/aes/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:17},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:28},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:43},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:54}],headersStr:"Python JavaScript Golang 主要特征",content:"关于\n\nAES 维基百科\n\n\n# Python\n\n\n# JavaScript\n\n\n# Golang\n\n\n# 主要特征",normalizedContent:"关于\n\naes 维基百科\n\n\n# python\n\n\n# javascript\n\n\n# golang\n\n\n# 主要特征",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"DES",frontmatter:{title:"DES",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/des",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/09.des.html",relativePath:"03.辅助查询/04.加密算法/09.des.md",key:"v-f6eb6f0c",path:"/pages/des/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:17},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:28},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:43},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:54}],headersStr:"Python JavaScript Golang 主要特征",content:"关于\n\nDES 维基百科\n\n\n# Python\n\n\n# JavaScript\n\n\n# Golang\n\n\n# 主要特征",normalizedContent:"关于\n\ndes 维基百科\n\n\n# python\n\n\n# javascript\n\n\n# golang\n\n\n# 主要特征",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"RSA",frontmatter:{title:"RSA",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/rsa",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/07.rsa.html",relativePath:"03.辅助查询/04.加密算法/07.rsa.md",key:"v-56895022",path:"/pages/rsa/",headers:[{level:2,title:"生成密钥",slug:"生成密钥",normalizedTitle:"生成密钥",charIndex:314},{level:3,title:"Python",slug:"python",normalizedTitle:"python",charIndex:3592},{level:3,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:1827},{level:3,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:19564},{level:2,title:"解析密钥",slug:"解析密钥",normalizedTitle:"解析密钥",charIndex:26062},{level:3,title:"Python",slug:"python-2",normalizedTitle:"python",charIndex:3592},{level:3,title:"JavaScript",slug:"javascript-2",normalizedTitle:"javascript",charIndex:1827},{level:3,title:"Golang",slug:"golang-2",normalizedTitle:"golang",charIndex:19564},{level:2,title:"转换密钥",slug:"转换密钥",normalizedTitle:"转换密钥",charIndex:47253},{level:3,title:"Python",slug:"python-3",normalizedTitle:"python",charIndex:3592},{level:3,title:"JavaScript",slug:"javascript-3",normalizedTitle:"javascript",charIndex:1827},{level:3,title:"Golang",slug:"golang-3",normalizedTitle:"golang",charIndex:19564},{level:2,title:"加密解密",slug:"加密解密",normalizedTitle:"加密解密",charIndex:68274},{level:3,title:"Python",slug:"python-4",normalizedTitle:"python",charIndex:3592},{level:3,title:"JavaScript",slug:"javascript-4",normalizedTitle:"javascript",charIndex:1827},{level:3,title:"Golang",slug:"golang-4",normalizedTitle:"golang",charIndex:19564},{level:2,title:"在线工具",slug:"在线工具",normalizedTitle:"在线工具",charIndex:90475}],headersStr:"生成密钥 Python JavaScript Golang 解析密钥 Python JavaScript Golang 转换密钥 Python JavaScript Golang 加密解密 Python JavaScript Golang 在线工具",content:'关于 RSA 非对称加密算法\n\nRSA 加密算法是一种非对称加密算法，是由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）在 1977 年一起提出的，RSA 就是他们三人姓氏开头字母拼在一起组成的。RSA 公开密钥密码体制的原理是：根据数论，寻求两个大素数比较简单，而将它们的乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。\n\nRSA 维基百科\n\n注意\n\nRSA 加解密涉及到密钥位数、密钥格式、密钥语法标准、填充方式等概念，请务必理解后再进行使用，否则可能在使用代码时发生各种报错，认真阅读文档，可解决 99% 的问题！！！\n\n\n# 生成密钥\n\n关于密钥各个术语的解释\n\n什么是密钥的位数：\n\n\n该位数既不是指公钥的长度，也不是私钥的长度，实际上是指生成的 RSA 密钥对中公钥和私钥所包含的模数（modulus）的位数，给定一个公钥或者私钥，均可从中解析出模数，由于 RSA 密钥对是基于一个大素数乘积生成的，因此长度也决定了其安全性和加密强度，在实际使用中，密钥位数常见的有 512 位、1024 位、2048 位、3072 位和 4096 位。但实际应用中不推荐 512 位，需要注意的是，密钥长度越长，加密的强度也就越强，但同时也会增加程序计算的时间。例如，秘钥长度增加 1 倍，密钥对生成的时间就增加 16 倍，公钥加密操作时长增加 4 倍，私钥解密操作时长增加 8 倍。因此，选择密钥长度时需要综合考虑安全性和效率。\n\n----------------------------------------\n\n什么是模数（modulus）：\n\n\nRSA 密钥的模数是公钥和私钥中的一个重要参数，通常用大素数的乘积表示，在 RSA 加密算法中，模数（modulus）是两个大素数的乘积，通常用 N 表示，在密钥生成过程中，选择两个大素数 p 和 q，然后计算它们的乘积 ，这个 N 就是 RSA 密钥的模数，模数 N 用于 RSA 算法中的加密、解密、签名和验证过程，公钥由模数 N 和公钥指数 e 组成，私钥由模数 N 和私钥指数 d 组成。模数 N 的长度通常决定了 RSA 密钥的安全性。\n\n----------------------------------------\n\n什么是公钥 / 私钥指数：\n\n\n在 RSA 加密算法中，公钥和私钥都包含一个指数，这些指数是用来进行加密和解密操作的，公钥指数通常用 e 表示，私钥指数通常用 d 表示，这两个指数的选择是相互关联的，确保了 RSA 算法的正确性，通常情况下，公钥指数 e 和私钥指数 d 满足以下条件：，其中 是欧拉函数，用于计算与模数 N 互素的正整数个数。这个条件保证了 RSA 加密和解密过程是可逆的，公钥指数 e 通常为 65537（0x10001，5bits），该值是除了 1、3、5、17、257 之外的最小素数，私钥指数 d 可以通过公钥指数 e 和模数 N 计算得到，一种常用的方法是使用扩展的欧几里得算法或模反演算法，这两种方法都可以有效地计算私钥指数 d，根据前面提到的两个指数关系的公式，可以得到：，所以私钥指数 d 应当是一个大整数，并且满足 。一般在各个 RSA 加解密代码里，都不用单独设置这公钥指数，基本上都是默认的 65537（0x10001，5bits）。\n\n----------------------------------------\n\n私钥签名（加密）：\n\n\n私钥签名，也称为私钥加密，私钥通常用于对敏感数据进行解密，如果私钥未经授权的访问者获得，可能会导致数据泄露或伪造签名等安全问题，通过加密私钥，即使未经授权的人获得了密钥文件，也需要正确的解密密码才能访问私钥，从而保护私钥的安全。在生成密钥对时，可以指定加密私钥的算法和密码，在使用私钥时，需要提供正确的解密密码才能解密私钥。\n\n----------------------------------------\n\n密钥输出的格式：\n\n * der：二进制数据，序列化 ASN.1 结构；\n * pem：最常见的类型，将 der 数据进行 base64 编码，然后加上以 ----- 包裹的标头，用于标识密钥类型；\n * jwk：JSON Web 密钥，关键数据存储在 JSON 对象中，是 JavaScript 对象签名和加密 (JOSE) 规范的一部分；\n * openssh：OpenSSH 密钥格式，常用于在 OpenSSH 客户端和服务器之间传输密钥，密钥以 ssh-rsa 开头。\n\n----------------------------------------\n\n密钥的语法标准：\n\n * 公钥语法标准：pkcs1 或 spki\n * 私钥语法标准：pkcs1 或 pkcs8\n\n有的库里面（如：JS 的 node-rsa 库），公钥语法标准支持 pkcs1 或 pkcs8，没有 spki，事实上这是不太规范的说法，参见 issues。\n\n当密钥输出格式为 pem 时：\n\n * 公钥使用 pkcs1 标准，得到的公钥以 -----BEGIN RSA PUBLIC KEY----- 开头；\n * 公钥使用 spki 标准，得到的公钥以 -----BEGIN PUBLIC KEY----- 开头；\n * 私钥使用 pkcs1 标准，得到的私钥以 -----BEGIN RSA PRIVATE KEY----- 开头；\n * 私钥使用 pkcs8 标准，得到的私钥以 -----BEGIN PRIVATE KEY----- 开头。\n * 私钥使用 pkcs1 标准，如果对私钥进行了加密，则得到的私钥以 -----BEGIN RSA PRIVATE KEY----- 开头，但内容里包含 Proc-Type、DEK-Info 字段；\n * 私钥使用 pkcs8 标准，如果对私钥进行了加密，则得到的私钥以 -----BEGIN ENCRYPTED PRIVATE KEY----- 开头。\n\n----------------------------------------\n\npkcs 标准科普：\n\n公钥加密标准（Public Key Cryptography Standards, PKCS），是由美国 RSA 数据安全公司及其合作伙伴制定的一组公钥密码学标准，其中包括证书申请、证书更新、证书作废表发布、扩展证书内容以及数字签名、数字信封的格式等方面的一系列相关协议。PKCS#1 至 PKCS#15 是不同类型的标准，用于不同的场景，在 RSA 算法中主要会用到 PKCS#1 和 PKCS#8 两种标准：\n\n * PKCS#1：专门针对 RSA 算法的一个标准，用于 RSA 公钥和私钥的具体实现以及加密、签名算法的规定；\n * PKCS#8：通用私钥语法标准，定义了私钥的存储格式，可以用于不同密码学算法的私钥存储。\n\n----------------------------------------\n\nspki 标准科普：\n\n * 公开密钥基础设施（Public Key Infrastructure, PKI），又称公开密钥基础架构、公钥基础建设、公钥基础设施、公开密码匙基础建设或公钥基础架构，是一组由硬件、软件、参与者、管理政策与流程组成的基础架构，其目的在于创造、管理、分配、使用、存储以及撤销数字证书；\n * 简单公钥基础设施（Simple public-key infrastructure, SPKI），是克服传统 X.509 PKI 复杂性的一种尝试，SPKI 规范定义了授权证书格式，提供了特权、权利或其他此类属性（称为授权）的描述，并将它们绑定到公钥。\n\n----------------------------------------\n\n【实用参考资料】\n\n公钥证书编码解读：https://zhuanlan.zhihu.com/p/77329250\nRSA密钥长度、明文长度和密文长度：https://cloud.tencent.com/developer/article/1199963\n安全：深入理解数字证书中的 PKCS#1 与 PKCS#8 标准 ：https://cloud.tencent.com/developer/article/2390956\nPKCS#1、PKCS#5、PKCS#7、PKCS#8 到底是什么？：https://blog.csdn.net/weixin_45264425/article/details/127096145\n\n\n# Python\n\n\n# ✅ 安装依赖 pip install pycryptodome，官方文档：https://pycryptodome.readthedocs.io/\n\n# ❌ 密钥输出格式不支持 jwk\n# ❌ 公钥语法标准不支持 pkcs1，仅支持 spki\n# ❌ 私钥加密：当私钥语法标准为 pkcs1 时，不支持指定算法，默认使用 DES-EDE3-CBC\n#             当私钥语法标准为 pkcs8 时，protection 可以指定算法，算法名称参考：https://pycryptodome.readthedocs.io/en/latest/src/io/pkcs8.html#encryption-parameters\n\nfrom Crypto.PublicKey import RSA\n\n\nkey = RSA.generate(\n    bits=2048,                           # 密钥位数，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n    e=65537                              # 公钥指数，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n)\n\nprivate_key = key.export_key(\n    format="PEM",                        # 私钥输出格式，支持 pem、der、openssh\n    pkcs=8,                              # 私钥语法标准，支持 pkcs1、pkcs8，该参数仅对私钥有效\n    # passphrase="spiderapi",            # 可选参数，私钥加密的密码，如果私钥加密了，则使用时需要先解密，该参数仅对私钥有效\n    # protection="scryptAndAES128-GCM",  # 可选参数，私钥加密的算法，该参数仅对私钥，且 pkcs=8 时有效\n)\npublic_key = key.publickey().export_key(\n    format="PEM",                        # 公钥输出格式，支持 pem、der、openssh，公钥语法标准，仅支持且默认 spki\n)\n\nprint("RSA 公钥（spki、pem）：\\n\\n", public_key.decode("utf-8"))\nprint("RSA 私钥（pkcs8、pem）：\\n\\n", private_key.decode("utf-8"))\n\n"""\nRSA 公钥（spki、pem）：\n\n-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4MIESlYLQMhXeh1AsIxi\nXqdbyG6hMo7feRu2CsvH14iYdwaxMZ2gV3PBu+Z9gCD+zoreO4PYMqpn0koXGg2n\nVRhTZVzJARVnLokmK3wVFYx2ooubABFv/duL30LzHi2qheXIz5etB0XjOPz1A9D3\nOngaHH6YnyoCos0KtDbaiNOdYY2lh5tXG8JV4yaHGmPgHLYjp19EBOYaqiXj89Ut\nGtTvc/bl6pO1uZbsR70zZY2yU79+B7UGhsMHTcFdZ7XokLk2uwUoKRYvsD1S/pEX\nxIYwq1DJZ4/SMAidVe58jwPEg9Vonb/HZX24l35PSDDKC52oUaEynQcdvnHJoJM9\nhwIDAQAB\n-----END PUBLIC KEY-----\n\nRSA 私钥（pkcs8、pem）：\n\n-----BEGIN PRIVATE KEY-----\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDgwgRKVgtAyFd6\nHUCwjGJep1vIbqEyjt95G7YKy8fXiJh3BrExnaBXc8G75n2AIP7Oit47g9gyqmfS\nShcaDadVGFNlXMkBFWcuiSYrfBUVjHaii5sAEW/924vfQvMeLaqF5cjPl60HReM4\n/PUD0Pc6eBocfpifKgKizQq0NtqI051hjaWHm1cbwlXjJocaY+ActiOnX0QE5hqq\nJePz1S0a1O9z9uXqk7W5luxHvTNljbJTv34HtQaGwwdNwV1nteiQuTa7BSgpFi+w\nPVL+kRfEhjCrUMlnj9IwCJ1V7nyPA8SD1Widv8dlfbiXfk9IMMoLnahRoTKdBx2+\nccmgkz2HAgMBAAECggEACSTA0Zi0MX5VAgycRp0XcrwClwyvyyOWgidMncjSMvmw\nINt+rELk3y9AOO7fY9iJH970u91ubLU+WbGWRK2R2qY4MlNMLBqc+CmFNNdXRj6m\nJDu4t7p94LPPT2sPrUZ0qFODpV+0HtZ1hX/TpJmaN+CN82MlE13n/eEzPRykLFUY\nDVhXcVYlMamHCtNT9039ByEBF7kIeODhLPYgKAcwCOY8f4fQqEDZUfshbHdOlAt+\nBx9bOToSPqNYMIrzHk/SrUfjI2+x3mVZY5PSSxyBRObroKVd4V+De+bXUyLhdnpC\nRmH8JWsFEcfSILMSlkrfA+xGag36oXTD8wtf19X9XQKBgQDqMQ+B3fiicVLirdLx\nPB0OD4U2noitzkyjr+qZYx3VpIRu+eK1q9esJ9KYzBUEdfTCXaKHHVcjZ/IErOsZ\neFcBS2Fwwpa3GMeOJ4hTcNuzBIsp6D/g6PwSF4I/lGXTSCep7YEgoana3VItKlqx\nFbweB1guMpzS0jpWKVAPFAG3KwKBgQD1sBAXTqZqXcaVLkgZaowdFA2maFDpNp0b\ntiyGcyRAhYHdbb4TBFrgSDCYdnMpQMo0H4YmqRQFI38r5ROOsSQDcTNwMf6E9nUX\nQlZu1DBri0vnGgbjRTuKIDUEadVrCepCHfYyX7yEMg1vkCqdoknqFICn38R48Gq9\nAb66m+IlFQKBgBv3M9TcPt6XDcDH5RKtjQKq08uL7uJiakB5t1gNv/hNJwthh7MO\nDDkgoENiy3e25j13lPrxhABUX1AznfdyqWEcMUyX0AuZR+svyVW9el7MQhoFA+vF\npqQ6bnFNNUOfsCzYkbzl0TSzjSabkiznXYlwcxVBMfzy4ch8MnU6fGH1AoGAZg3/\ncR8Lg412istRybT3hLCqxt/4FBfKhRNURXkYqvCKNEd8t/uMIDP8c6hoR8+Q7rvV\nhsOe/E91aO9cA17TvdZM7qLlvad+le3JZ3oert2K5vFpwQgmJkcgnrezniXdOB+n\n/97CuQrth9UTzqz2FRT1KEaMH0yGmgJajrtn4c0CgYA7N7XM7oI6oH5uG0c2bcNT\noF6CbMKKY6IRmpyrTeozRrNo/luA0v89o6ETdeC/hChzVh66oECz9KW/XVXFyttt\n8sOTwXEsdWE4A7oNOM1vQhx7DtKJpqtvZFAxrVhgYyuaZSAEc2isWKhIPWq2mjKD\npByL7lrJPDv9Z7za63nMBQ==\n-----END PRIVATE KEY-----\n"""\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n\n\n# ✅ 安装依赖 pip install cryptography，要求 Python 3.7+，官方文档：https://cryptography.io/\n\n# ❌ 密钥输出格式不支持 jwk\n# ❌ 私钥语法标准不支持 pkcs1\n\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.ciphers import algorithms\n\n\nprivate_key = rsa.generate_private_key(\n    public_exponent=65537,                                 # 公钥指数，推荐 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n    key_size=2048                                          # 密钥位数，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n)\n\n# 从私钥中提取公钥\npublic_key = private_key.public_key()\n\n# 序列化私钥和公钥\npublic_key = public_key.public_bytes(\n    encoding=serialization.Encoding.PEM,                    # 公钥输出格式，支持 pem、der、openssh\n    format=serialization.PublicFormat.SubjectPublicKeyInfo  # 公钥语法标准，支持 pkcs1、spki (SubjectPublicKeyInfo)\n)\n\n\nprivate_key = private_key.private_bytes(\n    encoding=serialization.Encoding.PEM,                    # 私钥输出格式，支持 pem、der、openssh\n    format=serialization.PrivateFormat.PKCS8,               # 私钥语法标准，支持 pkcs8\n    encryption_algorithm=serialization.NoEncryption()       # 私钥不加密\n    # encryption_algorithm=serialization.BestAvailableEncryption("password".encode())  # 对私钥加密\n)\n\nprint("RSA 公钥（spki、pem）：\\n\\n", public_key.decode("utf-8"))\nprint("RSA 私钥（pkcs8、pem）：\\n\\n", private_key.decode("utf-8"))\n\n\n"""\nRSA 公钥（spki、pem）：\n\n-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAunWw+FBw3WGzKuU9tyoP\n0UWn0FOD5N7vlfhjFn0FUkeMQlgPqj+4uxNnayMA4Qxj9UeMS/N9+dN8KfIWnvjg\nR+UBsSgqZuy/ONx9E23ycq6l2RjGbdIKcRSsmmEKcAjCQub/EglWhzhacwLB4nr/\nHQvQS2x/J5NwR9WD8VWoYPICIa+LUSNZAbbA29Fitj7njbJkJbhNX4aaHUSQpWFG\ndjoFyGmpXb1HhaswmaC1jtZo5xzQfuSIeCq21VNWS2wvKdqcHg7jNbhhst54H3W5\nO7Qg7IYiGseYLO2m6f4NxLuhFDfdDHjSNDONzgGvm1fAI1Xs1r01BTx0n3DfSbqz\nAQIDAQAB\n-----END PUBLIC KEY-----\n\nRSA 私钥（pkcs8、pem）：\n\n-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC6dbD4UHDdYbMq\n5T23Kg/RRafQU4Pk3u+V+GMWfQVSR4xCWA+qP7i7E2drIwDhDGP1R4xL833503wp\n8hae+OBH5QGxKCpm7L843H0TbfJyrqXZGMZt0gpxFKyaYQpwCMJC5v8SCVaHOFpz\nAsHiev8dC9BLbH8nk3BH1YPxVahg8gIhr4tRI1kBtsDb0WK2PueNsmQluE1fhpod\nRJClYUZ2OgXIaaldvUeFqzCZoLWO1mjnHNB+5Ih4KrbVU1ZLbC8p2pweDuM1uGGy\n3ngfdbk7tCDshiIax5gs7abp/g3Eu6EUN90MeNI0M43OAa+bV8AjVezWvTUFPHSf\ncN9JurMBAgMBAAECggEBAKydjcKjvYjFDLf2V0b88n27LVsIJb84v7Ynp5vHC6kb\nQXadzYq/yQWvNfuSARtWfCczIGejuAkSxwyR6G0tW3xTPljCJVb5byF1xXi6PUv7\n8N9lNzWt0CrVh+C3W5FSGn0TGimZaXhvLBTzBYjkcs5yBFf+zkxWCwkFWkuOD/4G\nF9sCAzdrxbHkn1qpbPBCf4NIJ3ETApD3AMFuZol+GzAz1E6xaCupCqf1+yjWGjhE\nVjPA6MPx/RqPxI/Xn2BsX9nNEfsyxHmffbG9Hnu487ByOZFOdw/5JWsgCuhnX/0I\ncERAhuuXtjya9NuJkMrXGnoXofc7Om79oE0blcXSb60CgYEA5vhlGkaXeduFHJNa\n2ATDXrYGO1vEYR3fmxUKE7VYjGWZBzaUAQBFc+KFlpj6/587Hyldi6xG+PUWrMzS\nnMDSEgZY+3WdyE9DmUOjp2Mf8sPQYRob3T7osL7ttyaMB5Fv+Rap/HuRla/2FAR7\n77nvFsaGmUW+w4YuVWxKjUcVWMsCgYEAzqp6qBdFugCXwZyIasucqI2DKOocnfbR\nRbk0lcpyz2Fl6CqPUc1eJUesoOxZuvShMGpeqWPwiD97lsI6BJ5P7ymalR3XaGBr\nnNineop0a2sxj4cbEEcxOXJfl46+MDmDY9n0kOFzULwm0cP1m0VFjMmTLXGnsCRZ\nSVQFGMATBeMCgYBhF/54Y0B+K3fzoUZJFQeEIwTPoy4UnVhIezm3Oz60FmmUDK9/\nFDweERWTT1AEcU2LNfprIsrbETys+5V16+DjTuPNIY5ojFmgbjy3uwXNKd/JUg5w\nnWd4FWsc2Ql4jP0DOzHOP6vdvxC1LYVkK0eEzYP7nsQosZl8s39LkJw6rQKBgFYh\n8zDvUh4tdRI6XRi1d7tAD3QT7o1feuTmRaZQU/1eiIx0gHsFbsF219nR56vlnPCC\nxKUwg+UlICs7E9cs6/+vhT+0yjw0Q2WBXnvSDKdga614D61/HmLk6jZORbHvpnUN\nN8LSU69IW519YHWwL0Z4FKESB2OAIr5PCDjChKslAoGBAIe5+HFJyOZTt3Urzwzc\n7h8q97z+DXRChzTiBv8KaM3hknmKYc9qoGpOK6FqM8GcotvI55ZGlixJtmy1GMRf\nnk1qENc23oadYBEzAcQA5+0me/QDxk0q0BdkDkaNH2NA6lMY/4TriNde/fSY7Dil\nbDVst9Y7yqL41PYRWM/rhWas\n-----END PRIVATE KEY-----\n"""\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n\n\n# ✅ 安装依赖 pip install rsa，官方文档：https://stuvel.eu/python-rsa-doc/\n\n# ❌ 密钥输出格式不支持 jwk、openssh\n# ❌ 公钥语法标准不支持 spki\n# ❌ 私钥语法标准不支持 pkcs8\n# ❌ 不支持对私钥进行签名、加密\n\nimport rsa\n\n\n(public_key, private_key) = rsa.newkeys(\n    nbits=1024,        # 密钥位数，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n    exponent=65537     # 公钥指数，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n)\n\n# 公钥和私钥输出各种都仅支持 pem 和 der，语法标准都只支持 pkcs1\npublic_key = public_key.save_pkcs1(format="PEM")\nprivate_key = private_key.save_pkcs1(format="PEM")\n\nprint("RSA 公钥（pkcs1、pem）：\\n\\n", public_key.decode("utf-8"))\nprint("RSA 私钥（pkcs1、pem）：\\n\\n", private_key.decode("utf-8"))\n\n"""\nRSA 公钥（pkcs1、pem）：\n\n-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n\nRSA 私钥（pkcs1、pem）：\n\n-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n"""\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n\n\n\n# JavaScript\n\n\n// ✅ Node.js 内置 crypto 模块，无需单独安装\n\n// ❌ 密钥输出格式不支持 openssh\n\nvar crypto = require("crypto");\n\n\nvar { publicKey, privateKey } = crypto.generateKeyPairSync("rsa", {\n    modulusLength: 1024,            // 密钥位数，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n    publicExponent: 65537,          // 公钥指数，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n        publicKeyEncoding: {\n        type: "spki",               // 公钥语法标准，支持 pkcs1、spki\n        format: "pem"               // 公钥输出格式，支持 pem、der、jwk\n    },\n    privateKeyEncoding: {\n        type: "pkcs1",              // 私钥语法标准，支持 pkcs1、pkcs8\n        format: "pem",              // 私钥输出格式，支持 pem、der、jwk\n        // cipher: "aes-256-cbc",   // 可选参数，私钥加密的算法，如 aes-256-cbc、des-ded3-cbc 等，如果私钥加密了，则使用时需要先解密\n        // passphrase: "spiderapi"  // 可选参数，私钥加密的密码\n    }\n});\n\nconsole.log("RSA 公钥（spki、pem）：\\n\\n", publicKey);\nconsole.log("RSA 私钥（pkcs1、pem）：\\n\\n", privateKey);\n\n\n/*\nRSA 公钥（spki、pem）：\n\n-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDki91MwofoyFW+TPdkDLjvww9q\nGjKzgzbEhTUrl5qBwjWQo/yr1nhbTC4i9Qso8XJS8350cwz2ixbkE0QJgdPtL8d2\nlLUIVDxTy8uAFITvYie7rHNanjPyB2ytnm8p85EyYKZnAlq5V3w9hNAM5XxGnffi\ny4PiS7OlhAdVLZM32QIDAQAB\n-----END PUBLIC KEY-----\n\nRSA 私钥（pkcs1、pem）：\n\n-----BEGIN RSA PRIVATE KEY-----\nMIICXQIBAAKBgQDki91MwofoyFW+TPdkDLjvww9qGjKzgzbEhTUrl5qBwjWQo/yr\n1nhbTC4i9Qso8XJS8350cwz2ixbkE0QJgdPtL8d2lLUIVDxTy8uAFITvYie7rHNa\nnjPyB2ytnm8p85EyYKZnAlq5V3w9hNAM5XxGnffiy4PiS7OlhAdVLZM32QIDAQAB\nAoGBAJon0QxOhne4cUVcCt5cSn3Gl2Yc56f30IA7zYJqztfJVHIMeoi5sBL8zn3b\nxTxHp7JV9Sy80biWVsleSV0USgoDCkTZqgJTq7pTeUg+LTRSplPb00sm1/gyS7fU\nvwYtCDA8E/4NaG+gCdHAH4TDUOy2JPXF4L3VOBiDpaB+aB0BAkEA8f1qIOWQv7EY\nQNPdbMx9+/2miR/DoPtyyus1Nb+FTNzcZE0/JP8NLJUh7cBhtvRRi0RzhsOYMwK6\nypCUDZ4Q+QJBAPHHMzOiFlqIedrgZxiGUTZiGovMhBd3OKVYJj8Zr7BbM7TBkf9o\nU3v0LgMhFV7DEt/JXcwlexKmudYufyyo9eECQBwh7OukJJ7UdNBckRpr752TEIBS\njAi0EtVaYNY9zL5x0sFqZZPkfuCW+dnNCs8dOjmpnJCnPpN3lsWj50JqBOkCQQDq\nrh0v6AvkkoYdAyZu8qlPrUfxHHG2yT1NmNN++jLDbrMwp5dMH3qxXWFwHiO9GIJw\nf+ewqUzd3MGTeQxuUA5hAkBkkA65Jwhg5DrL7GFLj7m3phyPED+Uk2pP7GJ5vIFf\nQgM7yYJFHvKg/enuc2w2aAni+V8Z4DfwWeDlhPjcPyhb\n-----END RSA PRIVATE KEY-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n\n\n// ✅ 安装依赖：npm install node-rsa\n\n// ❌ 密钥输出格式不支持 jwk、openssh\n// ❌ 不支持对私钥进行签名、加密\n// ❓ 注意：截止 2024.03，该库中公钥语法标准支持 pkcs8，但实际上不存在这种说法，具有争议，正确应该是 spki，参见：https://github.com/rzcoder/node-rsa/issues/208\n\nvar NodeRSA = require("node-rsa");\n\n\nvar key = new NodeRSA({\n    b: 1024,  // 密钥位数，默认 2048，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n    e: 65537  // 公钥指数，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n});\n\n// 生成密钥，传入参数格式：语法标准-密钥类型-输出格式，即 scheme-[key_type]-[output_type]\nvar publicKey = key.exportKey("pkcs1-public-pem");    // 公钥语法标准支持 pkcs1、pkcs8，输出格式支持 pem、der\nvar privateKey = key.exportKey("pkcs8-private-pem");  // 私钥语法标准支持 pkcs1、pkcs8，输出格式支持 pem、der\n\nconsole.log("RSA 公钥（pkcs1、pem）：\\n\\n", publicKey);\nconsole.log("RSA 私钥（pkcs8、pem）：\\n\\n", privateKey);\n\n\n/*\nRSA 公钥（pkcs1、pem）：\n\n -----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALBIxnoOWWhdvAzaicfo5UB2DbSEa2u9LPQl0DrZSnQduRPs/EHh0EqC\nQlBBJndqa0QuWAp5In/Q4Sjc2lcF7oB8MEzz1P+D/2M2vy1EunXD8XbMBDbyNAvg\nk6yldcT3jEP1yhZjH9JnvgC9JsBFSjC9pUsZbhFDZwY6XLvw9oF7AgMBAAE=\n-----END RSA PUBLIC KEY-----\n\nRSA 私钥（pkcs8、pem）：\n\n -----BEGIN PRIVATE KEY-----\nMIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBALBIxnoOWWhdvAza\nicfo5UB2DbSEa2u9LPQl0DrZSnQduRPs/EHh0EqCQlBBJndqa0QuWAp5In/Q4Sjc\n2lcF7oB8MEzz1P+D/2M2vy1EunXD8XbMBDbyNAvgk6yldcT3jEP1yhZjH9JnvgC9\nJsBFSjC9pUsZbhFDZwY6XLvw9oF7AgMBAAECgYEAgfs3NZpM/HJZDVU6UIf+OfiS\nBG+7UTas5dzX2/yKNHISHIoaOm3JipbfVJOlTFnQe/Z7/kTxVjNrQhkOeSorf6Ee\nZg64JAMOxCb3aEJ6jABZUCK5DnBkcBv3qoPI6FrwrZNcTDypUGE6zxFfxehetGlQ\nhyJ4xgddFNXg9oxoTKECQQDnpUujoYCSFITC+UDnMXCcV5LXk0wyicySL1+YeP8o\nymz3LYUTyR0p1JoMeXdg2VpQ3BVX4QDNRGv9mS79dI+xAkEAwtFv2U3egkUacdNv\nvkWgMSVZc7YtlPdiW91wyVmAqxqFNBOVDOBXcuHcZ1o8mzPMgJVwSkjldvi73Ko5\ns5C66wJBAMVikEVqRMg1O7t38NoPwsk1xiZzmSYnTW3zeB3QXHxBoQAuhYsKgBM4\n2dtvVU3tZ4wnPPiY/bnrZ6m8cdH/FMECQAuhx6TY4mUyzQ5oym446ASnLz0aboRL\ndQL5KMfM4ULWFYfzd13Kc043sBo3qBC4OgifY5H74j+FQGo/e6x+ArsCQQCtogcc\nuKx8DHSON+lPQQfgD9A8vCtJVC7pyzzthMoUbmiGnv+VzbPkfuPaiamdVZy6j6qM\nvuQJ+AB8c5SoY5rb\n-----END PRIVATE KEY-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\n\n// ✅ 安装依赖：npm install jsencrypt\n\n// ❗ 如果在 Node 环境中使用，会遇到报错 window is not defined，处理方法：\n//    1.在当前 JS 文件顶部添加代码：window = global;\n//    2.在 \\node_modules\\jsencrypt\\bin\\jsencrypt.js 添加代码：window = global;\n// ❌ 不支持对私钥进行签名、加密\n// ❌ 密钥输出格式不支持 der、jwk、openssh，仅支持 pem\n// ❌ 公钥语法标准不支持 pkcs1，仅支持 spki\n// ❌ 私钥语法标准不支持 pkcs8，仅支持 pkcs1\n\nvar JSEncrypt = require(\'jsencrypt\');\n\n\nvar crypt = new JSEncrypt({\n    default_key_size: "1024",          // 密钥位数，默认 1024，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n    default_public_exponent: "010001"  // 公钥指数，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n});\n\nvar publicKey = crypt.getPublicKey();    // 公钥语法标准默认 spki，输出格式默认 pem\nvar privateKey = crypt.getPrivateKey();  // 私钥语法标准默认 pkcs1，输出格式默认 pem\n\nconsole.log("RSA 公钥（spki、pem）：\\n\\n", publicKey);\nconsole.log("RSA 私钥（pkcs1、pem）：\\n\\n", privateKey);\n\n\n/*\nRSA 公钥（spki、pem）：\n\n-----BEGIN PUBLIC KEY-----\nMIGeMA0GCSqGSIb3DQEBAQUAA4GMADCBiAKBgGq2tRBEpDRG26JrXmBxxThGbufn\nC2yw0biiXUf3BPzPx65TQ5vgiOoOnGYWl3wIhzlACPVWW4gto+nk2elcwin9flDb\nvxtJCiBvEVqAaGb3ceiMe56xFnYs88PnDImzecguMCFmwhpbRpkLuvpF8fW4I2+M\naa3zON2rB5A2yMAxAgMBAAE=\n-----END PUBLIC KEY-----\nRSA 私钥（pkcs1、pem）：\n\n-----BEGIN RSA PRIVATE KEY-----\nMIICWgIBAAKBgGq2tRBEpDRG26JrXmBxxThGbufnC2yw0biiXUf3BPzPx65TQ5vg\niOoOnGYWl3wIhzlACPVWW4gto+nk2elcwin9flDbvxtJCiBvEVqAaGb3ceiMe56x\nFnYs88PnDImzecguMCFmwhpbRpkLuvpF8fW4I2+Maa3zON2rB5A2yMAxAgMBAAEC\ngYBd5OTrq3nPhYk7H72qnnApU8/BvEkRGYNuMW5iI7b/utK3UAvs22Ocjb6PFNG1\nEMvqU62OMK3Y5E+VPQd/jV5I8C8n2BymrJ2MexCFow9jKneZYX5OLdRitJw+FAxL\n8OnlLHs4nRlKiWJbdZ2Y/OnlYpAmHpStmAs+2loI/AWsAQJBALNOLJYCgZcm8yOO\ncjnt+Q2gbPUWUfRha+x4oZ9jKFVk/xtYQ9GrWysYyi2IBfFkP362OrAdJHdCpjT+\n6DhA/30CQQCYW8p0mRb0WtNmqLF+W7c+8CbPQ4+YeCnADzldNZkRshg/BgOMM41P\nzVMqYFmlhHepIrno0uA6pNqrDi6Sx8nFAkBoviX1i4lATxSBlNjNVmLCvxBnK568\nb5yoCt//R+Fr4Q/VXX5goQUk69pPNsKh/LnKv5ERCDUhJeIJ2060bePRAkAUSv2P\nRCi7iTFpFgT2GI8ysdfpeU0x+KdO7ngsgwwNQFRcaJemX+NtgqKWHVkzY45wl7B9\nY0D8bqK1b+EiKbwlAkBB1wPeHe97FJ1QaleMhjDIWLjZZiX1UZYrDbaUbmLwhzmM\n1pXmXbW1K0VxC9jcKpN7htwYvOmXuYdOsGHdG1MW\n-----END RSA PRIVATE KEY-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n\n# Golang\n\n// ✅ 无需安装依赖，官方文档：https://pkg.go.dev/crypto\n// ❌ 公钥指数不支持自定义，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n// ❌ 密钥输出格式不支持 jwk、openssh\n// ❌ 对私钥进行签名、加密，只支持 pkcs1 标准的私钥，不支持 pkcs8 标准的私钥\n\npackage main\n\nimport (\n    "crypto/rand"\n    "crypto/rsa"\n    "crypto/x509"\n    "encoding/pem"\n    "fmt"\n)\n\nfunc main() {\n    rsaKey, err := rsa.GenerateKey(rand.Reader, 2048)\n    if err != nil {\n        fmt.Println("Generate key failed:", err)\n        return\n    }\n\n    // 私钥输出格式 der，私钥语法标准支持 pkcs1 (MarshalPKCS1PrivateKey)、pkcs8 (MarshalPKCS8PrivateKey)\n    privateKeyDER := x509.MarshalPKCS1PrivateKey(rsaKey)\n  \n    // 可选操作：使用密码加密私钥，注意，EncryptPEMBlock 方法正在被弃用，该方法只能加密 pkcs1 标准的私钥\n    // blockType 参数指定密钥的标头，与私钥语法标准对应：pkcs1 加密对应 "RSA PRIVATE KEY"\n    // alg 参数指定加密算法，参见：https://pkg.go.dev/crypto/x509#PEMCipher\n    password := []byte("spiderapi")\n    encryptedPrivateKeyPEMBlock, err := x509.EncryptPEMBlock(rand.Reader, "RSA PRIVATE KEY", privateKeyDER, password, x509.PEMCipherAES256)\n    if err != nil {\n        fmt.Println("Private key encrypt failed:", err)\n        return\n    }\n    encryptedPrivateKeyPEM := pem.EncodeToMemory(encryptedPrivateKeyPEMBlock)\n  \n    // 将私钥转为 pem 格式\n    // Type 参数指定密钥的标头，与私钥语法标准对应：pkcs1 对应 "RSA PRIVATE KEY"，pkcs8 对应 "PRIVATE KEY"\n    privateKeyPEM := pem.EncodeToMemory(&pem.Block{\n        Type:  "RSA PRIVATE KEY",\n        Bytes: privateKeyDER,\n    })\n  \n    // 公钥输出格式 der，公钥语法标准支持 pkcs1 (MarshalPKCS1PublicKey)、spki (MarshalPKIXPublicKey)\n    publicKeyPEM, err := x509.MarshalPKIXPublicKey(&rsaKey.PublicKey)\n    if err != nil {\n        fmt.Println("Public key encoding failed:", err)\n        return\n    }\n  \n    // 将公钥转为 pem 格式\n    // Type 参数指定密钥的标头，与公钥语法标准对应：pkcs1 对应 "RSA PUBLIC KEY"，spki 对应 "PUBLIC KEY"\n    publicKey := pem.EncodeToMemory(&pem.Block{\n        Type:  "PUBLIC KEY",\n        Bytes: publicKeyPEM,\n    })\n  \n    fmt.Println("RSA 公钥（spki、pem）：\\n\\n", string(publicKey))\n    fmt.Println("RSA 私钥（pkcs1、pem）：\\n\\n", string(privateKeyPEM))\n    fmt.Println("RSA 加密后的私钥（pkcs1、pem、aes-256-cbc）：\\n\\n", string(encryptedPrivateKeyPEM))\n}\n\n/*\nRSA 公钥（spki、pem）：\n\n-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1P94ik8uUca0kq613hw0\ndy0i/dALloDg4I32lkk7eWV/obe2I/qEY2Nz7SmmY8VZeJUfiQuAVuOxFYI7rKPM\n4LvSvkKC5xcWho1319eyZKC1AYlXKHjQPrUXNrDwmM1racGw9NopFg/GyikhaZiT\nvsW7NM3O3HN26irQXFO0C7vypIaZtOIB9YVA9YFpBLNnINczRyekltoZqhL4j/Of\nC+VuXZOxL0wfJOML7axF4Fwt7XSir8BPJMoEc2KVFYxMMd06tfJMRzvHOEckOaob\nZLrZjHM4YzDr32ClpgCazx7QWsBiMo3AqMuNO+LBV/VynsZPymgehIiDRGr7+S0F\nywIDAQAB\n-----END PUBLIC KEY-----\n\nRSA 私钥（pkcs1、pem）：\n\n-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA1P94ik8uUca0kq613hw0dy0i/dALloDg4I32lkk7eWV/obe2\nI/qEY2Nz7SmmY8VZeJUfiQuAVuOxFYI7rKPM4LvSvkKC5xcWho1319eyZKC1AYlX\nKHjQPrUXNrDwmM1racGw9NopFg/GyikhaZiTvsW7NM3O3HN26irQXFO0C7vypIaZ\ntOIB9YVA9YFpBLNnINczRyekltoZqhL4j/OfC+VuXZOxL0wfJOML7axF4Fwt7XSi\nr8BPJMoEc2KVFYxMMd06tfJMRzvHOEckOaobZLrZjHM4YzDr32ClpgCazx7QWsBi\nMo3AqMuNO+LBV/VynsZPymgehIiDRGr7+S0FywIDAQABAoIBAQDSQhYFwkAhLZvX\nKGwTg5gvBPmDv7mQqkxSnxEKLeRt48noI+fDAGtriSNIvFKqLogxxlNI/3eDTmTi\nrJqnw1Jdjkts0U9TO7FaxY/GHADX4OSNTbwiEZDQNgdiT6xRyoX78d3y9uCUDKLZ\nsVxwVtOSALLaX0eSytBaPEVOvrn+0Y06x/jiKhHvw1LCNc+E0lp3myrwW+6f0LCJ\nKD4dc5AWop64psKwDXP2t8bcyK5uhLjZYiSKjSi+7y8kCNmN0LimYjbjt8nvHo1J\ns24BbfE/MwrXhuV2/1ODBezPoOLBm51rzt9syHHnQBh95LPdLPr5N5r5uPvkToDu\nX5eM5ughAoGBAPxvHiyoKjWTc2cYw2exsabp2OOkKHH5BP8VBErEvTzmbzr9mKFR\nPG0ZcxLnSPux9xaoExdNd+NPnVWl5sR3ZLezGLSaeZw5RagTlkQ/YOXZ6b7mWZcE\nhpZNlvSyG3dIP63N4ONwTCpRrjyndv/sSGARrHsp4I1mv+23cQaQfvADAoGBANgB\nvUh8Uekq6SuJ2MmvX63cq5kK6BejWfEk6xFlHOTE49yzorn8yJoy1dBoO5BN1VcZ\nNUPSNt7PP0HR0BAgX5pKun/dAIs9+Y4HJPojeLkkhFgjx0FxQrQ2usIAaqAwZlpC\nrzClr7/8ZO5jeZMdfxcqE43KNrWOWGleyYQnr9yZAoGAcMPCmvhUQrKnrrplMAE0\n9vcnqClA2AkBrmFZFX1le7sEnTmD4SxE7gecXCltdOI/GqPiQ1qb37NE+Wmu+LzN\nBTLAKo2HHb6H21lEmyAkzQjXXivQgaHH7YSjlpOpqVNg/uclOvSDUbRDPV0hz5lh\ni2jZv/spEIGB41M67k/GJLkCgYAzRZZsUjYPJoRaNUoj9WC8oBiLJy+YDMoYly7E\n3j9RffqoNGt3wizLjS17XoJk6lSta+pcwtULZh4ZvXepnEWVFg/WsdqjMn6926xH\nQ4wwRh6z3So6umue4y7JRdgJVfO1kQaMgYeKBpreivYcmW/FS9OAYHND/Rm3SSyE\nFfeEYQKBgAVICBeE9LrMzoPwaTiGcRwEbx13Mo2SgzrKiwSY960Ewlu5t17197e0\nEEqJ1Y+ItIA+4j9XEMu6e1hV56Zy9rNEOyUZSB83tB1TQTzasbTDLfh0vJZmbudF\n6VTo4nST7kLzJYJe4A1SF2gLKasrbBL0Ye22PK2AuwHIWca2e+OS\n-----END RSA PRIVATE KEY-----\n\nRSA 加密后的私钥（pkcs1、pem、aes-256-cbc）：\n\n-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: AES-256-CBC,3a42d48c94f2f06b0354a04de8247917\n\n6rr+ZAQXJXS3zv9gZUbSp+Ft1ngcjshRrlKYcbeXaBPbWwfwE0iwG47aSJIpAvR1\nac2NhCTyq8ATqbjrhdf4dSHGYwpLJZzdQ7X+g3FmvJpLJMglaLhM2ls+IN+ofOS+\nBp9DwCSvdvTQEocHqTImXS98Bb6pr49FdJmQMma8pm2U73fIro8apVTDwQD/iHIB\nnEQ6+ZvUIqp+spEifYle0d1q1ADU/ZavqMt21bDhz56Ccf++6unXk+BhYVGj1WX0\nLYmZS8yRVHWDPk19i8yOCeMfZSS929JhCIsRVWYomxSVdwQP6h2iG4tU2+5mvDo1\nPbr4BrLKjFCO3ixhbjmW+ySNoNB/dNkkNd4eaBvmUoC1A/sNz3rJQR2Kl5r9kOCi\niVzh7hpPHTGmW9GY3PBYsIIE84HwrMpmcHHX/qWg/P5B/qAqOXQb4n8UozwuICdn\nw/i8c/k6YwOndYkIUqJjUg4KmWTdAQkyaCceBi/i4p9XgWZvq7MKQSQw0K9SeBoz\nQ7zUmJjFBtaLN/N3ckyuTeWQOZtGlVjK/rZKFy99RsMum//HX+S8XciUgs2p8A0f\nHMrIpgFg3XQSW5el4ykNdS216hEmMtUWfrGhn5D4UEDIHMRF5j9abR2T2BhKbh8m\nKcagOdBRRdKBH8JU8l3NT+tSYI+DpbMFH7X1QwfZNVlChAZblipOT9PpW4LbuZhv\nnIDU7KjodaV1JrRSOs/+9ferPKxkCXsGj3n5W/9wfbwUnChhhuYXvBVbNd48Os9m\nj5jQFVdcxQNe4UyYa7L3KaEzbp9GwX6MsUbiATH7jqEqfero50oTEznWKh4GQtrZ\nUL5QhESMEb+3X+JC1nu3aFzbvm+Y0dRjj5bi/R4wk1CAMIOWyT/iYSz+Oe9CNsVA\ngKQ5pjY4fwrLjwXVDsm52sQT99V6fVWbUXmg1iNrZ3hbLZ7sGZ0iK6ecz+x4zzMG\nm7/7Lbdb0wwGD+K5RPtDmmR9PvwCbxdfQGy8sLyUnUIB1btLRyTnPTXseuIZyFLu\nBKWTeLWhqya2h7B9iDYxQq1ySKAJaD8n6Rp+plUqJiyaO/RYcJRwun/U/GVuSfct\nYT1BytgfGqM6GL0S+RzFuaG7EYgg8vRuKwHw9rjdaIIz//cL/Y8YCJhJIhmVd7GJ\nNE5f+DXPvhhMf/12CF/rcGy6VVGnhlCHN+6dHWeodcbQVbuMJaznasqTk8NuWV75\nfZ70FmdHlJHHzTmZ/bQe6qp/1IKLYxa5v8lZEG9ER2hQ2uSjOzLt0nRc8K/HX7xA\nFi+8mRxjsOok75QKfJHNyCXL33hxDclnGbqANUp8bE45h1F3RWnQ60QYc6/EVE9Y\nFOKqqOMrTjcIebJN4zYNUDT1OClB6VdyaJLmPtzIYDE07qwWoHdGWVQmrofR/hzL\n5+c3LY2AtxQvIyWJc7BmP6lp46KmoUcc9BLkydi5bp9XDM2OgZGjHN9pkdhqdyNH\n3zkUzf5dimvaPLHHlKtz1MNF7LTkPRJX94ATq1PDhsgX9OX0lvI10lb+MCI483Mq\nIOIIMVT9256lXj+b+q+AhxkhSg4vMLmv28/O8+QZehwcqM1CeA4qzafLGziA/6tl\n-----END RSA PRIVATE KEY-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n\n\n\n# 解析密钥\n\n关于解析 RSA 密钥\n\nPKCS1 RSA 公钥和私钥格式的 ASN.1 规范如下：\n\nRSAPublicKey ::= SEQUENCE {\n    modulus           INTEGER,  -- n\n    publicExponent    INTEGER   -- e\n}\n\nRSAPrivateKey ::= SEQUENCE {\n    version           Version,\n    modulus           INTEGER,  -- n\n    publicExponent    INTEGER,  -- e\n    privateExponent   INTEGER,  -- d\n    prime1            INTEGER,  -- p\n    prime2            INTEGER,  -- q\n    exponent1         INTEGER,  -- d mod (p-1)\n    exponent2         INTEGER,  -- d mod (q-1)\n    coefficient       INTEGER,  -- (inverse of q) mod p\n    otherPrimeInfos   OtherPrimeInfos OPTIONAL\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n为了提高效率，许多流行的加密库都使用基于中国剩余定理（CRT）来优化加速解密和签名，所以 prime1、prime2 等值已预先计算并存储为私钥的一部分，如果给定一对 RSA 密钥，那么我们就可以从中解析出以下信息：\n\n * keySize：密钥的位数，即模数（modulus）的位数\n * modulus：模数 ，一个大素数的乘积，用于生成公钥和私钥，参见前面生成密钥中对模数的解释\n * publicExponent：公钥指数 ，参见前面生成密钥中对公钥指数的解释\n * privateExponent：私钥指数 ，参见前面生成密钥中对私钥指数的解释\n * prime1：RSA 算法中的第一个质数 ，用于生成私钥\n * prime2：RSA 算法中的第二个质数 ，用于生成私钥\n * exponent1：私钥指数模 的模反元素，即\n * exponent2：私钥指数模 的模反元素，即\n * coefficient：模反元素之间的系数，即\n\n----------------------------------------\n\n【实用参考资料】\n\n公钥加密标准 PKCS#1 rfc3447：https://www.rfc-editor.org/rfc/rfc3447\n使用中国剩余定理（CRT）来加速 RSA 算法的计算：https://www.di-mgt.com.au/crt_rsa.html\n维基百科 Using the Chinese remainder algorithm：https://en.wikipedia.org/wiki/RSA_(cryptosystem)#Padding_schemes\n\n\n# Python\n\n\n# ✅ 安装依赖 pip install pycryptodome，官方文档：https://pycryptodome.readthedocs.io/\n\nfrom Crypto.PublicKey import RSA\n\n\n# 注意 """ 之后要紧跟着密钥标头，如果换行可能会因为无法解析导致报错：ValueError: RSA key format is not supported\n# spki 标准 pem 格式的公钥\npublic_key_pem = """-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCl7HWuXcOH9I/Bud7dplYxHOEC\nD82fJv1WJKADhmILCxDLJLVkueBQfwUItPELF3RLhs+3+XNYfGiz7PPPhxV1pey5\njrHT8zw8InrNRwlDeCyx/Q+ETpSpQImvILf0RBHtnOgVpb41uhKF24wGH4q7+faN\nw6cBVKhFn+fuItSGfQIDAQAB\n-----END PUBLIC KEY-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pem = """-----BEGIN RSA PRIVATE KEY-----\nMIICXgIBAAKBgQCl7HWuXcOH9I/Bud7dplYxHOECD82fJv1WJKADhmILCxDLJLVk\nueBQfwUItPELF3RLhs+3+XNYfGiz7PPPhxV1pey5jrHT8zw8InrNRwlDeCyx/Q+E\nTpSpQImvILf0RBHtnOgVpb41uhKF24wGH4q7+faNw6cBVKhFn+fuItSGfQIDAQAB\nAoGBAKSmc1kmfoQJciZh1gDJsTpnV/l9ySQnwrma+pbE4cHnpzCPKtnbgfcfNNWh\nCJljGupfyvzbs1SZkCUL/B1yBR3uAbWw5G0uzJo61wYciufnQA1/lu3JyEyLeSxb\neFOIkuI8Ce0SCPT01+6sR77EA0VtUA+0Ak7OI4EvElFPn0qBAkEA8SvKXG6suLFL\n9TjUH2B1XDwMxQFw7JOOhAyLcbNJMLgqMhHuqvTW/T4oxTQh7LbDMP977ZDnkmdt\nL8S7zAHHsQJBALAgOFkbNNH4FzBQtxyWEu6+D0ZhvhIAIoH0pDBdoIO9vKalRgWy\nvV6YsI3NujjBjz1p7g3Zb/zliA3vH9ieqo0CQQCdlOVmvBIzo/Vjx7wivF4y5DHb\nz/M/QbMPaTr8Eg+yu8MmcD0oi06mriTppgS8rTahH26UbehB6z6Wxc+Hn2ohAkEA\nr2GmOrToyBzvmmEFtiWK/MmtlDxIdMxFkHr39GGHMSiC7r6tF4eBIu2RAePWiCXW\naSVOs+PNrFs0PAvd/mshEQJAYpxilxZI7hJT89Qne6CgPXqqZf0sFX0FeR9AJaj1\ng2c+B9GgZ+Nou4ne4WXjOVUWZuuch7yqn3XoxeQT4/xaCw==\n-----END RSA PRIVATE KEY-----\n"""\n\n# 解析公钥和私钥\npublic_key = RSA.importKey(public_key_pem)\nprivate_key = RSA.importKey(private_key_pem)\n\n# 获取模数（modulus），使用 16 进制字符串表示，从公钥和私钥中均可获取，且值是一样的\nmodulus = hex(public_key.n)[2:]  # 或者 private_key.n\n\n# 计算密钥的位数，即模数（modulus）的位数，16 进制转换为位数时每个字符代表 4 位\nkey_length = len(modulus) * 4\n\n# 获取公钥指数\npublic_exponent = hex(public_key.e)[2:]\n\n# 获取私钥指数\nprivate_exponent = hex(private_key.d)[2:]\n\n# 获取私钥其他参数\nprivate_prime1 = hex(private_key.p)[2:]\nprivate_prime2 = hex(private_key.q)[2:]\nprivate_exponent1 = hex(private_key.d % (private_key.p - 1))[2:]\nprivate_exponent2 = hex(private_key.d % (private_key.q - 1))[2:]\nprivate_coefficient = hex(pow(private_key.q, -1, private_key.p))[2:]\n\nprint("（16 进制）模数: ", modulus)                          # a5ec75ae5dc387f48fc1b9dedda656311ce1020fcd9f26fd5624a00386620b0b10cb24b564b9e0507f0508b4f10b17744b86cfb7f973587c68b3ecf3cf871575a5ecb98eb1d3f33c3c227acd470943782cb1fd0f844e94a94089af20b7f44411ed9ce815a5be35ba1285db8c061f8abbf9f68dc3a70154a8459fe7ee22d4867d\nprint("（16 进制）密钥 & 模数位数: ", key_length)             # 1024\nprint("（16 进制）公钥指数: ", public_exponent)               # 0x10001 (65537)\nprint("（16 进制）私钥指数: ", private_exponent)              # a4a67359267e8409722661d600c9b13a6757f97dc92427c2b99afa96c4e1c1e7a7308f2ad9db81f71f34d5a10899631aea5fcafcdbb3549990250bfc1d72051dee01b5b0e46d2ecc9a3ad7061c8ae7e7400d7f96edc9c84c8b792c5b78538892e23c09ed1208f4f4d7eeac47bec403456d500fb4024ece23812f12514f9f4a81\nprint("（16 进制）私钥 prime1: ", private_prime1)            # f12bca5c6eacb8b14bf538d41f60755c3c0cc50170ec938e840c8b71b34930b82a3211eeaaf4d6fd3e28c53421ecb6c330ff7bed90e792676d2fc4bbcc01c7b1\nprint("（16 进制）私钥 prime2: ", private_prime2)            # b02038591b34d1f8173050b71c9612eebe0f4661be12002281f4a4305da083bdbca6a54605b2bd5e98b08dcdba38c18f3d69ee0dd96ffce5880def1fd89eaa8d\nprint("（16 进制）私钥 exponent1: ", private_exponent1)      # 9d94e566bc1233a3f563c7bc22bc5e32e431dbcff33f41b30f693afc120fb2bbc326703d288b4ea6ae24e9a604bcad36a11f6e946de841eb3e96c5cf879f6a21\nprint("（16 进制）私钥 exponent2: ", private_exponent2)      # af61a63ab4e8c81cef9a6105b6258afcc9ad943c4874cc45907af7f46187312882eebead17878122ed9101e3d68825d669254eb3e3cdac5b343c0bddfe6b2111\nprint("（16 进制）私钥 coefficient: ", private_coefficient)  # 629c62971648ee1253f3d4277ba0a03d7aaa65fd2c157d05791f4025a8f583673e07d1a067e368bb89dee165e339551666eb9c87bcaa9f75e8c5e413e3fc5a0b\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n# ✅ 安装依赖 pip install cryptography，要求 Python 3.7+，官方文档：https:#cryptography.io/\n\nfrom cryptography.hazmat.primitives import serialization\n\n\n# spki 标准 pem 格式的公钥\npublic_key_pem = """\n-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCl7HWuXcOH9I/Bud7dplYxHOEC\nD82fJv1WJKADhmILCxDLJLVkueBQfwUItPELF3RLhs+3+XNYfGiz7PPPhxV1pey5\njrHT8zw8InrNRwlDeCyx/Q+ETpSpQImvILf0RBHtnOgVpb41uhKF24wGH4q7+faN\nw6cBVKhFn+fuItSGfQIDAQAB\n-----END PUBLIC KEY-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pem = """\n-----BEGIN RSA PRIVATE KEY-----\nMIICXgIBAAKBgQCl7HWuXcOH9I/Bud7dplYxHOECD82fJv1WJKADhmILCxDLJLVk\nueBQfwUItPELF3RLhs+3+XNYfGiz7PPPhxV1pey5jrHT8zw8InrNRwlDeCyx/Q+E\nTpSpQImvILf0RBHtnOgVpb41uhKF24wGH4q7+faNw6cBVKhFn+fuItSGfQIDAQAB\nAoGBAKSmc1kmfoQJciZh1gDJsTpnV/l9ySQnwrma+pbE4cHnpzCPKtnbgfcfNNWh\nCJljGupfyvzbs1SZkCUL/B1yBR3uAbWw5G0uzJo61wYciufnQA1/lu3JyEyLeSxb\neFOIkuI8Ce0SCPT01+6sR77EA0VtUA+0Ak7OI4EvElFPn0qBAkEA8SvKXG6suLFL\n9TjUH2B1XDwMxQFw7JOOhAyLcbNJMLgqMhHuqvTW/T4oxTQh7LbDMP977ZDnkmdt\nL8S7zAHHsQJBALAgOFkbNNH4FzBQtxyWEu6+D0ZhvhIAIoH0pDBdoIO9vKalRgWy\nvV6YsI3NujjBjz1p7g3Zb/zliA3vH9ieqo0CQQCdlOVmvBIzo/Vjx7wivF4y5DHb\nz/M/QbMPaTr8Eg+yu8MmcD0oi06mriTppgS8rTahH26UbehB6z6Wxc+Hn2ohAkEA\nr2GmOrToyBzvmmEFtiWK/MmtlDxIdMxFkHr39GGHMSiC7r6tF4eBIu2RAePWiCXW\naSVOs+PNrFs0PAvd/mshEQJAYpxilxZI7hJT89Qne6CgPXqqZf0sFX0FeR9AJaj1\ng2c+B9GgZ+Nou4ne4WXjOVUWZuuch7yqn3XoxeQT4/xaCw==\n-----END RSA PRIVATE KEY-----\n"""\n\n# 解析公钥和私钥\npublic_key = serialization.load_pem_public_key(public_key_pem.encode())\nprivate_key = serialization.load_pem_private_key(private_key_pem.encode(), password=None)\n\npublic_numbers = public_key.public_numbers()\nprivate_numbers = private_key.private_numbers()\n\n# 获取模数（modulus），使用 16 进制字符串表示，从公钥和私钥中均可获取，且值是一样的\nmodulus = hex(public_numbers.n)[2:]  # 或者 private_numbers.public_numbers.n\n\n# 计算密钥的位数，即模数（modulus）的位数，16 进制转换为位数时每个字符代表 4 位\nkey_length = len(modulus) * 4\n\n# 获取公钥指数\npublic_exponent = hex(public_numbers.e)[2:]\n\n# 获取私钥指数\nprivate_exponent = hex(private_numbers.d)[2:]\n\n# 获取私钥其他参数\nprivate_prime1 = hex(private_numbers.p)[2:]\nprivate_prime2 = hex(private_numbers.q)[2:]\nprivate_exponent1 = hex(private_numbers.dmp1)[2:]\nprivate_exponent2 = hex(private_numbers.dmq1)[2:]\nprivate_coefficient = hex(private_numbers.iqmp)[2:]\n\nprint("（16 进制）模数: ", modulus)                          # a5ec75ae5dc387f48fc1b9dedda656311ce1020fcd9f26fd5624a00386620b0b10cb24b564b9e0507f0508b4f10b17744b86cfb7f973587c68b3ecf3cf871575a5ecb98eb1d3f33c3c227acd470943782cb1fd0f844e94a94089af20b7f44411ed9ce815a5be35ba1285db8c061f8abbf9f68dc3a70154a8459fe7ee22d4867d\nprint("（16 进制）密钥 & 模数位数: ", key_length)             # 1024\nprint("（16 进制）公钥指数: ", public_exponent)               # 0x10001 (65537)\nprint("（16 进制）私钥指数: ", private_exponent)              # a4a67359267e8409722661d600c9b13a6757f97dc92427c2b99afa96c4e1c1e7a7308f2ad9db81f71f34d5a10899631aea5fcafcdbb3549990250bfc1d72051dee01b5b0e46d2ecc9a3ad7061c8ae7e7400d7f96edc9c84c8b792c5b78538892e23c09ed1208f4f4d7eeac47bec403456d500fb4024ece23812f12514f9f4a81\nprint("（16 进制）私钥 prime1: ", private_prime1)            # f12bca5c6eacb8b14bf538d41f60755c3c0cc50170ec938e840c8b71b34930b82a3211eeaaf4d6fd3e28c53421ecb6c330ff7bed90e792676d2fc4bbcc01c7b1\nprint("（16 进制）私钥 prime2: ", private_prime2)            # b02038591b34d1f8173050b71c9612eebe0f4661be12002281f4a4305da083bdbca6a54605b2bd5e98b08dcdba38c18f3d69ee0dd96ffce5880def1fd89eaa8d\nprint("（16 进制）私钥 exponent1: ", private_exponent1)      # 9d94e566bc1233a3f563c7bc22bc5e32e431dbcff33f41b30f693afc120fb2bbc326703d288b4ea6ae24e9a604bcad36a11f6e946de841eb3e96c5cf879f6a21\nprint("（16 进制）私钥 exponent2: ", private_exponent2)      # af61a63ab4e8c81cef9a6105b6258afcc9ad943c4874cc45907af7f46187312882eebead17878122ed9101e3d68825d669254eb3e3cdac5b343c0bddfe6b2111\nprint("（16 进制）私钥 coefficient: ", private_coefficient)  # 629c62971648ee1253f3d4277ba0a03d7aaa65fd2c157d05791f4025a8f583673e07d1a067e368bb89dee165e339551666eb9c87bcaa9f75e8c5e413e3fc5a0b\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n\n\n# ✅ 安装依赖 pip install rsa，官方文档：https://stuvel.eu/python-rsa-doc/\n\n# ❌ 不支持解析 spki 语法标准的公钥，只支持 pkcs1\n# ❌ 不支持解析 pkcs8 语法标准的私钥，只支持 pkcs1\n\nimport rsa\n\n\n# pkcs1 标准 pem 格式的公钥\npublic_key_pem = """\n-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pem = """\n-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n"""\n\n# 解析公钥和私钥\npublic_key = rsa.PublicKey.load_pkcs1(public_key_pem.encode(), \'PEM\')\nprivate_key = rsa.PrivateKey.load_pkcs1(private_key_pem.encode(), \'PEM\')\n\n# 获取模数（modulus），使用 16 进制字符串表示，从公钥和私钥中均可获取，且值是一样的\nmodulus = hex(public_key.n)[2:]  # 或者 private_key.n\n\n# 计算密钥的位数，即模数（modulus）的位数，16 进制转换为位数时每个字符代表 4 位\nkey_length = len(modulus) * 4\n\n# 获取公钥指数\npublic_exponent = hex(public_key.e)[2:]\n\n# 获取私钥指数\nprivate_exponent = hex(private_key.d)[2:]\n\n# 获取私钥其他参数\nprivate_prime1 = hex(private_key.p)[2:]\nprivate_prime2 = hex(private_key.q)[2:]\nprivate_exponent1 = hex(private_key.d % (private_key.p - 1))[2:]\nprivate_exponent2 = hex(private_key.d % (private_key.q - 1))[2:]\nprivate_coefficient = hex(pow(private_key.q, -1, private_key.p))[2:]\n\nprint("（16 进制）模数: ", modulus)                          # b2c0fda504952c6abcf527942e00f1468d87ab71cab8e52ec856e3fc148166480416efa7bc958f83a20b999b6dbcaf3aa12540d86469e57c105dab66acbd9b9c21b3e8c8c75b5477224f2572f264236bdd0f2de2c4327a4eaad7e8a637a2941081eb2ef7ae62ad4bbe6c3796de76bd1cef5b0b9c615d041d26f1dc6d1bea112b\nprint("（16 进制）密钥 & 模数位数: ", key_length)             # 1024\nprint("（16 进制）公钥指数: ", public_exponent)               # 0x10001 (65537)\nprint("（16 进制）私钥指数: ", private_exponent)              # ceae569876b404a765d40fef4541d1b7c1ed1c4e761752e6c4bdb2ddc4d7d96b6b4f19cad84215ae1daf4bec6af5bfa60aad084d2bcd458a2d6220cbc19f391521a921498bc2dbde32c84646f9f609717b995b3a05d3e614ae514fd1bbc6e493a90dc50de181beb46f76e006e1c8f2f4009917d0110495259a16156d9d3c401\nprint("（16 进制）私钥 prime1: ", private_prime1)            # b87cc2c8cc4da10aaf45526479f580d21dab0f5150d6baad1e5c6f8fff42a9f71e595038d97288dc061a6c24141bc7d3f8ca0ca2623e2e530dce480f17fdf647c6a9a0fd\nprint("（16 进制）私钥 prime2: ", private_prime2)            # f80b479533e5579a8f53e0ba1928281df7f383e7aeb2a8143fb081ce87ed089bf5a286293d31e5d2acc1979fc84fcf17e422ee131688ed7c14ad8747\nprint("（16 进制）私钥 exponent1: ", private_exponent1)      # 6ff790444bf2855db5b84de41b3ccbdd3a125aae90707245a55a967eff7e17279aecbbca74f695676bf0d7572239261359384f68b25568ca1163f3c9ed56be051be65185\nprint("（16 进制）私钥 exponent2: ", private_exponent2)      # 8ed3a7e761179947156ade072abf35c273e913b60fa12e2962b71737be8b1d9ef8651a4d9ac025af16ecee8b0203faa2ae29f2dea8e635a17222adb7\nprint("（16 进制）私钥 coefficient: ", private_coefficient)  # 6b46e0fb2928b01030eea323b6c551ce627fd50aa3a4c67aedfd137aadbf88d6356eaa39b3c127d47582eacca8f513f60eb7d318d9759c73e9a73d67b15f823a4c57415e\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n\n\n\n# JavaScript\n\n// ✅ 安装依赖：npm install node-forge，官方文档：https://github.com/digitalbazaar/forge\n\n// ❌ 不支持解析私钥的 prime1、prime2、exponent1、exponent2、coefficient 参数\n\nvar forge = require("node-forge");\n\n// spki 标准 pem 格式的公钥\nvar publicKeyPEM = `\n-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCl7HWuXcOH9I/Bud7dplYxHOEC\nD82fJv1WJKADhmILCxDLJLVkueBQfwUItPELF3RLhs+3+XNYfGiz7PPPhxV1pey5\njrHT8zw8InrNRwlDeCyx/Q+ETpSpQImvILf0RBHtnOgVpb41uhKF24wGH4q7+faN\nw6cBVKhFn+fuItSGfQIDAQAB\n-----END PUBLIC KEY-----\n`\n\n// pkcs1 标准 pem 格式的私钥\nvar privateKeyPEM = `\n-----BEGIN RSA PRIVATE KEY-----\nMIICXgIBAAKBgQCl7HWuXcOH9I/Bud7dplYxHOECD82fJv1WJKADhmILCxDLJLVk\nueBQfwUItPELF3RLhs+3+XNYfGiz7PPPhxV1pey5jrHT8zw8InrNRwlDeCyx/Q+E\nTpSpQImvILf0RBHtnOgVpb41uhKF24wGH4q7+faNw6cBVKhFn+fuItSGfQIDAQAB\nAoGBAKSmc1kmfoQJciZh1gDJsTpnV/l9ySQnwrma+pbE4cHnpzCPKtnbgfcfNNWh\nCJljGupfyvzbs1SZkCUL/B1yBR3uAbWw5G0uzJo61wYciufnQA1/lu3JyEyLeSxb\neFOIkuI8Ce0SCPT01+6sR77EA0VtUA+0Ak7OI4EvElFPn0qBAkEA8SvKXG6suLFL\n9TjUH2B1XDwMxQFw7JOOhAyLcbNJMLgqMhHuqvTW/T4oxTQh7LbDMP977ZDnkmdt\nL8S7zAHHsQJBALAgOFkbNNH4FzBQtxyWEu6+D0ZhvhIAIoH0pDBdoIO9vKalRgWy\nvV6YsI3NujjBjz1p7g3Zb/zliA3vH9ieqo0CQQCdlOVmvBIzo/Vjx7wivF4y5DHb\nz/M/QbMPaTr8Eg+yu8MmcD0oi06mriTppgS8rTahH26UbehB6z6Wxc+Hn2ohAkEA\nr2GmOrToyBzvmmEFtiWK/MmtlDxIdMxFkHr39GGHMSiC7r6tF4eBIu2RAePWiCXW\naSVOs+PNrFs0PAvd/mshEQJAYpxilxZI7hJT89Qne6CgPXqqZf0sFX0FeR9AJaj1\ng2c+B9GgZ+Nou4ne4WXjOVUWZuuch7yqn3XoxeQT4/xaCw==\n-----END RSA PRIVATE KEY-----\n`\n\n// 解析公钥和私钥\nvar publicKey = forge.pki.publicKeyFromPem(publicKeyPEM);\nvar privateKey = forge.pki.privateKeyFromPem(privateKeyPEM);\n\n// 获取模数（modulus），使用 16 进制字符串表示，从公钥和私钥中均可获取，且值是一样的\nvar modulus = publicKey.n.toString(16); // 或者 privateKey.n.toString(16);\n\n// 计算密钥的位数，即模数（modulus）的位数，16 进制转换为位数时每个字符代表 4 位\nvar keyLength = modulus.length * 4;\n\n// 获取公钥指数\nvar publicExponent = publicKey.e.toString(16);\n\n// 获取私钥指数\nvar privateExponent = privateKey.d.toString(16);\n\nconsole.log("（16 进制）模数: ", modulus);              // a5ec75ae5dc387f48fc1b9dedda656311ce1020fcd9f26fd5624a00386620b0b10cb24b564b9e0507f0508b4f10b17744b86cfb7f973587c68b3ecf3cf871575a5ecb98eb1d3f33c3c227acd470943782cb1fd0f844e94a94089af20b7f44411ed9ce815a5be35ba1285db8c061f8abbf9f68dc3a70154a8459fe7ee22d4867d\nconsole.log("（16 进制）密钥 & 模数位数: ", keyLength);  // 1024\nconsole.log("（16 进制）公钥指数: ", publicExponent);    // 0x10001 (65537)\nconsole.log("（16 进制）私钥指数: ", privateExponent);   // a4a67359267e8409722661d600c9b13a6757f97dc92427c2b99afa96c4e1c1e7a7308f2ad9db81f71f34d5a10899631aea5fcafcdbb3549990250bfc1d72051dee01b5b0e46d2ecc9a3ad7061c8ae7e7400d7f96edc9c84c8b792c5b78538892e23c09ed1208f4f4d7eeac47bec403456d500fb4024ece23812f12514f9f4a81\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n\n\n\n# Golang\n\npackage main\n\nimport (\n    "crypto/rsa"\n    "crypto/x509"\n    "encoding/pem"\n    "fmt"\n)\n\nfunc main() {\n    // spki 标准 pem 格式的公钥\n    publicKeyPEM := `\n-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCl7HWuXcOH9I/Bud7dplYxHOEC\nD82fJv1WJKADhmILCxDLJLVkueBQfwUItPELF3RLhs+3+XNYfGiz7PPPhxV1pey5\njrHT8zw8InrNRwlDeCyx/Q+ETpSpQImvILf0RBHtnOgVpb41uhKF24wGH4q7+faN\nw6cBVKhFn+fuItSGfQIDAQAB\n-----END PUBLIC KEY-----\n`\n    // pkcs1 标准 pem 格式的私钥\n    privateKeyPEM := `\n-----BEGIN RSA PRIVATE KEY-----\nMIICXgIBAAKBgQCl7HWuXcOH9I/Bud7dplYxHOECD82fJv1WJKADhmILCxDLJLVk\nueBQfwUItPELF3RLhs+3+XNYfGiz7PPPhxV1pey5jrHT8zw8InrNRwlDeCyx/Q+E\nTpSpQImvILf0RBHtnOgVpb41uhKF24wGH4q7+faNw6cBVKhFn+fuItSGfQIDAQAB\nAoGBAKSmc1kmfoQJciZh1gDJsTpnV/l9ySQnwrma+pbE4cHnpzCPKtnbgfcfNNWh\nCJljGupfyvzbs1SZkCUL/B1yBR3uAbWw5G0uzJo61wYciufnQA1/lu3JyEyLeSxb\neFOIkuI8Ce0SCPT01+6sR77EA0VtUA+0Ak7OI4EvElFPn0qBAkEA8SvKXG6suLFL\n9TjUH2B1XDwMxQFw7JOOhAyLcbNJMLgqMhHuqvTW/T4oxTQh7LbDMP977ZDnkmdt\nL8S7zAHHsQJBALAgOFkbNNH4FzBQtxyWEu6+D0ZhvhIAIoH0pDBdoIO9vKalRgWy\nvV6YsI3NujjBjz1p7g3Zb/zliA3vH9ieqo0CQQCdlOVmvBIzo/Vjx7wivF4y5DHb\nz/M/QbMPaTr8Eg+yu8MmcD0oi06mriTppgS8rTahH26UbehB6z6Wxc+Hn2ohAkEA\nr2GmOrToyBzvmmEFtiWK/MmtlDxIdMxFkHr39GGHMSiC7r6tF4eBIu2RAePWiCXW\naSVOs+PNrFs0PAvd/mshEQJAYpxilxZI7hJT89Qne6CgPXqqZf0sFX0FeR9AJaj1\ng2c+B9GgZ+Nou4ne4WXjOVUWZuuch7yqn3XoxeQT4/xaCw==\n-----END RSA PRIVATE KEY-----\n`\n  \n    // 解析公钥和私钥\n    publicKeyBlock, _ := pem.Decode([]byte(publicKeyPEM))\n    if publicKeyBlock == nil {\n        fmt.Println("Failed to decode public key")\n        return\n    }\n    publicKeyInterface, err := x509.ParsePKIXPublicKey(publicKeyBlock.Bytes)\n    if err != nil {\n        fmt.Println("Failed to parse public key:", err)\n        return\n    }\n    publicKey := publicKeyInterface.(*rsa.PublicKey)\n  \n    privateBlock, _ := pem.Decode([]byte(privateKeyPEM))\n    if privateBlock == nil {\n        fmt.Println("Failed to decode private key")\n        return\n    }\n    privateKey, err := x509.ParsePKCS1PrivateKey(privateBlock.Bytes)\n    if err != nil {\n        fmt.Println("Failed to parse private key:", err)\n        return\n    }\n  \n    // 获取模数（modulus），使用 16 进制字符串表示，从公钥和私钥中均可获取，且值是一样的\n    modulus := fmt.Sprintf("%x", publicKey.N) // 或者 privateKey.N\n  \n    // 计算密钥的位数，即模数（modulus）的位数，16 进制转换为位数时每个字符代表 4 位\n    keyLength := fmt.Sprintf("%d", publicKey.N.BitLen())\n  \n    // 获取公钥指数\n    publicExponent := fmt.Sprintf("%x", publicKey.E)\n  \n    // 获取私钥指数\n    privateExponent := fmt.Sprintf("%x", privateKey.D)\n  \n    // 获取私钥其他参数\n    privatePrime1 := fmt.Sprintf("%x", privateKey.Primes[0])\n    privatePrime2 := fmt.Sprintf("%x", privateKey.Primes[1])\n    privateExponent1 := fmt.Sprintf("%x", privateKey.Precomputed.Dp)\n    privateExponent2 := fmt.Sprintf("%x", privateKey.Precomputed.Dq)\n    privateCoefficient := fmt.Sprintf("%x", privateKey.Precomputed.Qinv)\n  \n    fmt.Println("（16 进制）模数: ", modulus)                         // a5ec75ae5dc387f48fc1b9dedda656311ce1020fcd9f26fd5624a00386620b0b10cb24b564b9e0507f0508b4f10b17744b86cfb7f973587c68b3ecf3cf871575a5ecb98eb1d3f33c3c227acd470943782cb1fd0f844e94a94089af20b7f44411ed9ce815a5be35ba1285db8c061f8abbf9f68dc3a70154a8459fe7ee22d4867d\n    fmt.Println("（16 进制）密钥 & 模数位数: ", keyLength)             // 1024\n    fmt.Println("（16 进制）公钥指数: ", publicExponent)              // 0x10001 (65537)\n    fmt.Println("（16 进制）私钥指数: ", privateExponent)             // a4a67359267e8409722661d600c9b13a6757f97dc92427c2b99afa96c4e1c1e7a7308f2ad9db81f71f34d5a10899631aea5fcafcdbb3549990250bfc1d72051dee01b5b0e46d2ecc9a3ad7061c8ae7e7400d7f96edc9c84c8b792c5b78538892e23c09ed1208f4f4d7eeac47bec403456d500fb4024ece23812f12514f9f4a81\n    fmt.Println("（16 进制）私钥 prime1: ", privatePrime1)           // f12bca5c6eacb8b14bf538d41f60755c3c0cc50170ec938e840c8b71b34930b82a3211eeaaf4d6fd3e28c53421ecb6c330ff7bed90e792676d2fc4bbcc01c7b1\n    fmt.Println("（16 进制）私钥 prime2: ", privatePrime2)           // b02038591b34d1f8173050b71c9612eebe0f4661be12002281f4a4305da083bdbca6a54605b2bd5e98b08dcdba38c18f3d69ee0dd96ffce5880def1fd89eaa8d\n    fmt.Println("（16 进制）私钥 exponent1: ", privateExponent1)     // 9d94e566bc1233a3f563c7bc22bc5e32e431dbcff33f41b30f693afc120fb2bbc326703d288b4ea6ae24e9a604bcad36a11f6e946de841eb3e96c5cf879f6a21\n    fmt.Println("（16 进制）私钥 exponent2: ", privateExponent2)     // af61a63ab4e8c81cef9a6105b6258afcc9ad943c4874cc45907af7f46187312882eebead17878122ed9101e3d68825d669254eb3e3cdac5b343c0bddfe6b2111\n    fmt.Println("（16 进制）私钥 coefficient: ", privateCoefficient) // 629c62971648ee1253f3d4277ba0a03d7aaa65fd2c157d05791f4025a8f583673e07d1a067e368bb89dee165e339551666eb9c87bcaa9f75e8c5e413e3fc5a0b\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n\n\n\n# 转换密钥\n\nRSA 的公钥语法标准有：pkcs1、spki，私钥的语法标准有：pkcs1、pkcs8，已知一个语法标准的秘钥，可以将其转换成另一种语法标准的秘钥，同时秘钥最终的格式 pem、der 也是可以相互转换的。\n\n\n# Python\n\n\n# ✅ 安装依赖 pip install pycryptodome，官方文档：https://pycryptodome.readthedocs.io/\n\n# ❌ 密钥输出格式不支持 jwk\n# ❌ 公钥不支持从 spki 标准转为 pkcs1 标准\n\nfrom Crypto.PublicKey import RSA\n\n\ndef pkcs1_to_spki(public_key_pkcs1, output_format="PEM"):\n    # 将 pkcs1 标准的公钥转换为 spki 标准，返回 pem 或者 der 格式的公钥\n    public_key_pkcs1 = RSA.import_key(public_key_pkcs1)\n    public_key_spki = public_key_pkcs1.export_key(format=output_format.upper())\n    return public_key_spki.decode()\n\n\ndef pkcs1_to_pkcs8(private_key_pkcs1, output_format="PEM"):\n    # 将 pkcs1 标准的私钥转换为 pkcs8 标准，返回 pem 或者 der 格式的公钥\n    private_key_pkcs1 = RSA.import_key(private_key_pkcs1)\n    private_key_pkcs8 = private_key_pkcs1.export_key(format=output_format.upper(), pkcs=8)\n    return private_key_pkcs8.decode()\n\n\ndef pkcs8_to_pkcs1(private_key_pkcs8, output_format="PEM"):\n    # 将 pkcs8 标准的私钥转换为 pkcs1 标准，返回 pem 或者 der 格式的公钥\n    private_key_pkcs8 = RSA.import_key(private_key_pkcs8)\n    private_key_pkcs1 = private_key_pkcs8.export_key(format=output_format.upper(), pkcs=1)\n    return private_key_pkcs1.decode()\n\n\n# 注意 """ 之后要紧跟着密钥标头，如果换行可能会因为无法解析导致报错：ValueError: RSA key format is not supported\n# pkcs1 标准 pem 格式的公钥\npublic_key_pkcs1_pem = """-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n"""\n\n# 转换公钥：pkcs1 => spki\npublic_key_spki_pem = pkcs1_to_spki(public_key_pkcs1_pem, output_format="pem")\n\n# 转换私钥：pkcs1 => pkcs8\nprivate_key_pkcs8_pem = pkcs1_to_pkcs8(private_key_pkcs1_pem, output_format="pem")\n\nprint("公钥转换 pkcs1 => spki:\\n\\n", public_key_spki_pem)\nprint("\\n私钥转换 pkcs1 => pkcs8:\\n\\n", private_key_pkcs8_pem)\n\n"""\n公钥转换 pkcs1 => spki:\n\n-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCywP2lBJUsarz1J5QuAPFGjYer\nccq45S7IVuP8FIFmSAQW76e8lY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPo\nyMdbVHciTyVy8mQja90PLeLEMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sL\nnGFdBB0m8dxtG+oRKwIDAQAB\n-----END PUBLIC KEY-----\n\n私钥转换 pkcs1 => pkcs8:\n\n-----BEGIN PRIVATE KEY-----\nMIICegIBADANBgkqhkiG9w0BAQEFAASCAmQwggJgAgEAAoGBALLA/aUElSxqvPUn\nlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4OiC5mbbbyvOqElQNhkaeV8EF2r\nZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q1+imN6KUEIHrLveuYq1Lvmw3\nlt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAECgYAM6uVph2tASnZdQP70VB0bfB7R\nxOdhdS5sS9st3E19lra08ZythCFa4dr0vsavW/pgqtCE0rzUWKLWIgy8GfORUhqS\nFJi8Lb3jLIRkb59glxe5lbOgXT5hSuUU/Ru8bkk6kNxQ3hgb60b3bgBuHI8vQAmR\nfQEQSVJZoWFW2dPEAQJFALh8wsjMTaEKr0VSZHn1gNIdqw9RUNa6rR5cb4//Qqn3\nHllQONlyiNwGGmwkFBvH0/jKDKJiPi5TDc5IDxf99kfGqaD9Aj0A+AtHlTPlV5qP\nU+C6GSgoHffzg+eusqgUP7CBzoftCJv1ooYpPTHl0qzBl5/IT88X5CLuExaI7XwU\nrYdHAkRv95BES/KFXbW4TeQbPMvdOhJarpBwckWlWpZ+/34XJ5rsu8p09pVna/DX\nVyI5JhNZOE9oslVoyhFj88ntVr4FG+ZRhQI9AI7Tp+dhF5lHFWreByq/NcJz6RO2\nD6EuKWK3Fze+ix2e+GUaTZrAJa8W7O6LAgP6oq4p8t6o5jWhciKttwJEa0bg+yko\nsBAw7qMjtsVRzmJ/1QqjpMZ67f0Teq2/iNY1bqo5s8En1HWC6syo9RP2DrfTGNl1\nnHPppz1nsV+COkxXQV4=\n-----END PRIVATE KEY-----\n"""\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n\n\n# ✅ 安装依赖 pip install cryptography，要求 Python 3.7+，官方文档：https://cryptography.io/\n\n# ❌ 密钥输出格式不支持 jwk\n# ❌ 私钥不支持从 pkcs8 标准转为 pkcs1 标准\n\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.serialization import load_pem_public_key, load_pem_private_key\n\n\ndef pkcs1_to_spki(public_key_pkcs1, output_format="PEM"):\n    # 将 pkcs1 标准的公钥转换为 spki 标准，返回 pem 或者 der 格式的公钥\n    if output_format.upper() == "DER":\n        encoding = serialization.Encoding.DER\n    else:\n        encoding = serialization.Encoding.PEM\n    public_key_pkcs1 = load_pem_public_key(public_key_pkcs1.encode())\n    public_key_spki = public_key_pkcs1.public_bytes(\n        encoding=encoding,\n        format=serialization.PublicFormat.SubjectPublicKeyInfo\n    )\n    return public_key_spki.decode()\n\n\ndef spki_to_pkcs1(public_key_spki, output_format="PEM"):\n    # 将 spki 标准的公钥转换为 pkcs1 标准，返回 pem 或者 der 格式的公钥\n    if output_format.upper() == "DER":\n        encoding = serialization.Encoding.DER\n    else:\n        encoding = serialization.Encoding.PEM\n    public_key_spki = load_pem_public_key(public_key_spki.encode())\n    public_key_pkcs1 = public_key_spki.public_bytes(\n        encoding=encoding,\n        format=serialization.PublicFormat.PKCS1\n    )\n    return public_key_pkcs1.decode()\n\n\ndef pkcs1_to_pkcs8(private_key_pkcs1, output_format="PEM"):\n    # 将 pkcs1 标准的私钥转换为 pkcs8 标准，返回 pem 或者 der 格式的公钥\n    if output_format.upper() == "DER":\n        encoding = serialization.Encoding.DER\n    else:\n        encoding = serialization.Encoding.PEM\n    private_key_pkcs1 = load_pem_private_key(private_key_pkcs1.encode(), password=None)  # 可选参数 password，指定私钥的密码\n    private_key_pkcs8 = private_key_pkcs1.private_bytes(\n        encoding=encoding,\n        format=serialization.PrivateFormat.PKCS8,\n        encryption_algorithm=serialization.NoEncryption()  # 可选参数 encryption_algorithm，指定私钥的加密算法\n    )\n    return private_key_pkcs8.decode()\n\n\n# spki 标准 pem 格式的公钥\npublic_key_spki_pem = """-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCl7HWuXcOH9I/Bud7dplYxHOEC\nD82fJv1WJKADhmILCxDLJLVkueBQfwUItPELF3RLhs+3+XNYfGiz7PPPhxV1pey5\njrHT8zw8InrNRwlDeCyx/Q+ETpSpQImvILf0RBHtnOgVpb41uhKF24wGH4q7+faN\nw6cBVKhFn+fuItSGfQIDAQAB\n-----END PUBLIC KEY-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """-----BEGIN RSA PRIVATE KEY-----\nMIICXgIBAAKBgQCl7HWuXcOH9I/Bud7dplYxHOECD82fJv1WJKADhmILCxDLJLVk\nueBQfwUItPELF3RLhs+3+XNYfGiz7PPPhxV1pey5jrHT8zw8InrNRwlDeCyx/Q+E\nTpSpQImvILf0RBHtnOgVpb41uhKF24wGH4q7+faNw6cBVKhFn+fuItSGfQIDAQAB\nAoGBAKSmc1kmfoQJciZh1gDJsTpnV/l9ySQnwrma+pbE4cHnpzCPKtnbgfcfNNWh\nCJljGupfyvzbs1SZkCUL/B1yBR3uAbWw5G0uzJo61wYciufnQA1/lu3JyEyLeSxb\neFOIkuI8Ce0SCPT01+6sR77EA0VtUA+0Ak7OI4EvElFPn0qBAkEA8SvKXG6suLFL\n9TjUH2B1XDwMxQFw7JOOhAyLcbNJMLgqMhHuqvTW/T4oxTQh7LbDMP977ZDnkmdt\nL8S7zAHHsQJBALAgOFkbNNH4FzBQtxyWEu6+D0ZhvhIAIoH0pDBdoIO9vKalRgWy\nvV6YsI3NujjBjz1p7g3Zb/zliA3vH9ieqo0CQQCdlOVmvBIzo/Vjx7wivF4y5DHb\nz/M/QbMPaTr8Eg+yu8MmcD0oi06mriTppgS8rTahH26UbehB6z6Wxc+Hn2ohAkEA\nr2GmOrToyBzvmmEFtiWK/MmtlDxIdMxFkHr39GGHMSiC7r6tF4eBIu2RAePWiCXW\naSVOs+PNrFs0PAvd/mshEQJAYpxilxZI7hJT89Qne6CgPXqqZf0sFX0FeR9AJaj1\ng2c+B9GgZ+Nou4ne4WXjOVUWZuuch7yqn3XoxeQT4/xaCw==\n-----END RSA PRIVATE KEY-----\n"""\n\n# 转换公钥：spki => pkcs1\npublic_key_pkcs1_pem = spki_to_pkcs1(public_key_spki_pem, output_format="pem")\n\n# 转换私钥：pkcs1 => pkcs8\nprivate_key_pkcs8_pem = pkcs1_to_pkcs8(private_key_pkcs1_pem, output_format="pem")\n\nprint("公钥转换 spki => pkcs1:\\n\\n", public_key_pkcs1_pem)\nprint("私钥转换 pkcs1 => pkcs8:\\n\\n", private_key_pkcs8_pem)\n\n"""\n公钥转换 spki => pkcs1:\n\n -----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBAKXsda5dw4f0j8G53t2mVjEc4QIPzZ8m/VYkoAOGYgsLEMsktWS54FB/\nBQi08QsXdEuGz7f5c1h8aLPs88+HFXWl7LmOsdPzPDwies1HCUN4LLH9D4ROlKlA\nia8gt/REEe2c6BWlvjW6EoXbjAYfirv59o3DpwFUqEWf5+4i1IZ9AgMBAAE=\n-----END RSA PUBLIC KEY-----\n\n私钥转换 pkcs1 => pkcs8:\n\n -----BEGIN PRIVATE KEY-----\nMIICeAIBADANBgkqhkiG9w0BAQEFAASCAmIwggJeAgEAAoGBAKXsda5dw4f0j8G5\n3t2mVjEc4QIPzZ8m/VYkoAOGYgsLEMsktWS54FB/BQi08QsXdEuGz7f5c1h8aLPs\n88+HFXWl7LmOsdPzPDwies1HCUN4LLH9D4ROlKlAia8gt/REEe2c6BWlvjW6EoXb\njAYfirv59o3DpwFUqEWf5+4i1IZ9AgMBAAECgYEApKZzWSZ+hAlyJmHWAMmxOmdX\n+X3JJCfCuZr6lsThweenMI8q2duB9x801aEImWMa6l/K/NuzVJmQJQv8HXIFHe4B\ntbDkbS7MmjrXBhyK5+dADX+W7cnITIt5LFt4U4iS4jwJ7RII9PTX7qxHvsQDRW1Q\nD7QCTs4jgS8SUU+fSoECQQDxK8pcbqy4sUv1ONQfYHVcPAzFAXDsk46EDItxs0kw\nuCoyEe6q9Nb9PijFNCHstsMw/3vtkOeSZ20vxLvMAcexAkEAsCA4WRs00fgXMFC3\nHJYS7r4PRmG+EgAigfSkMF2gg728pqVGBbK9Xpiwjc26OMGPPWnuDdlv/OWIDe8f\n2J6qjQJBAJ2U5Wa8EjOj9WPHvCK8XjLkMdvP8z9Bsw9pOvwSD7K7wyZwPSiLTqau\nJOmmBLytNqEfbpRt6EHrPpbFz4efaiECQQCvYaY6tOjIHO+aYQW2JYr8ya2UPEh0\nzEWQevf0YYcxKILuvq0Xh4Ei7ZEB49aIJdZpJU6z482sWzQ8C93+ayERAkBinGKX\nFkjuElPz1Cd7oKA9eqpl/SwVfQV5H0AlqPWDZz4H0aBn42i7id7hZeM5VRZm65yH\nvKqfdejF5BPj/FoL\n-----END PRIVATE KEY-----\n"""\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n\n\n\n# JavaScript\n\n// ✅ Node.js 内置 crypto 模块，无需单独安装\n\nconst crypto = require("crypto");\n\nfunction PKCS1ToSPKI(publicKeyPkcs1, outputFormat="pem") {\n    // 将 pkcs1 标准的公钥转换为 spki 标准，返回 pem 或者 der 格式的公钥\n    const publicKeySpki = crypto.createPublicKey({ key: publicKeyPkcs1, type: "pkcs1" });\n    return publicKeySpki.export({ type: "spki", format: outputFormat.toLowerCase() });\n}\n\nfunction SPKIToPKCS1(publicKeySpki, outputFormat="pem") {\n    // 将 spki 标准的公钥转换为 pkcs1 标准，返回 pem 或者 der 格式的公钥\n    const publicKeyPkcs1 = crypto.createPublicKey({ key: publicKeySpki, type: "spki" });\n    return publicKeyPkcs1.export({ type: "pkcs1", format: outputFormat.toLowerCase() });\n}\n\nfunction PKCS1ToPKCS8(privateKeyPkcs1, outputFormat="pem") {\n    // 将 pkcs1 标准的私钥转换为 pkcs8 标准，返回 pem 或者 der 格式的公钥\n    const privateKeyPkcs8 = crypto.createPrivateKey({ key: privateKeyPkcs1, type: "pkcs1" });\n    return privateKeyPkcs8.export({ type: "pkcs8", format: outputFormat.toLowerCase() });\n}\n\nfunction PKCS8ToPKCS1(privateKeyPkcs8, outputFormat="pem") {\n    // 将 pkcs8 标准的私钥转换为 pkcs1 标准，返回 pem 或者 der 格式的公钥\n    const privateKeyPkcs1 = crypto.createPrivateKey({ key: privateKeyPkcs8, type: "pkcs8" });\n    return privateKeyPkcs1.export({ type: "pkcs1", format: outputFormat.toLowerCase() });\n}\n\n\n// pkcs1 标准 pem 格式的公钥\nconst publicKeyPkcs1Pem = `\n-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n`\n\n// pkcs1 标准 pem 格式的私钥\nconst privateKeyPkcs1Pem = `\n-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n`\n\n\n// 转换公钥：pkcs1 => spki\nvar publicKeySpkiPem = PKCS1ToSPKI(publicKeyPkcs1Pem, "pem")\n\n// 转换私钥：pkcs1 => pkcs8\nvar privateKeyPkcs8Pem = PKCS1ToPKCS8(privateKeyPkcs1Pem, "pem")\n\nconsole.log("公钥转换 pkcs1 => spki:\\n\\n", publicKeySpkiPem)\nconsole.log("私钥转换 pkcs1 => pkcs8:\\n\\n", privateKeyPkcs8Pem)\n\n\n/*\n公钥转换 pkcs1 => spki:\n\n -----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCywP2lBJUsarz1J5QuAPFGjYer\nccq45S7IVuP8FIFmSAQW76e8lY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPo\nyMdbVHciTyVy8mQja90PLeLEMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sL\nnGFdBB0m8dxtG+oRKwIDAQAB\n-----END PUBLIC KEY-----\n\n私钥转换 pkcs1 => pkcs8:\n\n -----BEGIN PRIVATE KEY-----\nMIICegIBADANBgkqhkiG9w0BAQEFAASCAmQwggJgAgEAAoGBALLA/aUElSxqvPUn\nlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4OiC5mbbbyvOqElQNhkaeV8EF2r\nZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q1+imN6KUEIHrLveuYq1Lvmw3\nlt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAECgYAM6uVph2tASnZdQP70VB0bfB7R\nxOdhdS5sS9st3E19lra08ZythCFa4dr0vsavW/pgqtCE0rzUWKLWIgy8GfORUhqS\nFJi8Lb3jLIRkb59glxe5lbOgXT5hSuUU/Ru8bkk6kNxQ3hgb60b3bgBuHI8vQAmR\nfQEQSVJZoWFW2dPEAQJFALh8wsjMTaEKr0VSZHn1gNIdqw9RUNa6rR5cb4//Qqn3\nHllQONlyiNwGGmwkFBvH0/jKDKJiPi5TDc5IDxf99kfGqaD9Aj0A+AtHlTPlV5qP\nU+C6GSgoHffzg+eusqgUP7CBzoftCJv1ooYpPTHl0qzBl5/IT88X5CLuExaI7XwU\nrYdHAkRv95BES/KFXbW4TeQbPMvdOhJarpBwckWlWpZ+/34XJ5rsu8p09pVna/DX\nVyI5JhNZOE9oslVoyhFj88ntVr4FG+ZRhQI9AI7Tp+dhF5lHFWreByq/NcJz6RO2\nD6EuKWK3Fze+ix2e+GUaTZrAJa8W7O6LAgP6oq4p8t6o5jWhciKttwJEa0bg+yko\nsBAw7qMjtsVRzmJ/1QqjpMZ67f0Teq2/iNY1bqo5s8En1HWC6syo9RP2DrfTGNl1\nnHPppz1nsV+COkxXQV4=\n-----END PRIVATE KEY-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n\n\n\n# Golang\n\n// ✅ 无需安装依赖，官方文档：https://pkg.go.dev/crypto\n\npackage main\n\nimport (\n    "crypto/rsa"\n    "crypto/x509"\n    "encoding/pem"\n    "errors"\n    "fmt"\n    "strings"\n)\n\n// PKCS1ToSPKI 将 pkcs1 标准的公钥转换为 spki 标准，返回 pem 或者 der 格式的公钥\nfunc PKCS1ToSPKI(publicKeyPkcs1, outputFormat string) ([]byte, error) {\n    block, _ := pem.Decode([]byte(publicKeyPkcs1))\n    if block == nil {\n        return nil, errors.New("failed to decode PEM block containing public key")\n    }\n    publicKey, err := x509.ParsePKCS1PublicKey(block.Bytes)\n    if err != nil {\n        return nil, err\n    }\n  \n    publicKeySpkiBytes, err := x509.MarshalPKIXPublicKey(publicKey)\n    if err != nil {\n        return nil, err\n    }\n  \n    if strings.ToUpper(outputFormat) == "DER" {\n        return publicKeySpkiBytes, nil\n    }\n  \n    publicKeySpki := &pem.Block{\n        Type:  "PUBLIC KEY",\n        Bytes: publicKeySpkiBytes,\n    }\n    return pem.EncodeToMemory(publicKeySpki), nil\n}\n\n// SPKIToPKCS1 将 SPKI 格式的公钥转换为 PKCS1 格式\nfunc SPKIToPKCS1(publicKeySpki, outputFormat string) ([]byte, error) {\n    block, _ := pem.Decode([]byte(publicKeySpki))\n    if block == nil {\n        return nil, errors.New("failed to decode PEM block containing public key")\n    }\n    publicKey, err := x509.ParsePKIXPublicKey(block.Bytes)\n    if err != nil {\n        return nil, err\n    }\n  \n    rsaPublicKey, ok := publicKey.(*rsa.PublicKey)\n    if !ok {\n        return nil, errors.New("not an RSA public key")\n    }\n    publicKeyPkcs1Bytes := x509.MarshalPKCS1PublicKey(rsaPublicKey)\n  \n    if strings.ToUpper(outputFormat) == "DER" {\n        return publicKeyPkcs1Bytes, nil\n    }\n  \n    publicKeyPkcs1 := &pem.Block{\n        Type:  "RSA PUBLIC KEY",\n        Bytes: publicKeyPkcs1Bytes,\n    }\n    return pem.EncodeToMemory(publicKeyPkcs1), nil\n}\n\n// PKCS1ToPKCS8 将 pkcs1 标准的私钥转换为 pkcs8 标准，返回 pem 或者 der 格式的公钥\nfunc PKCS1ToPKCS8(privateKeyPkcs1, outputFormat string) ([]byte, error) {\n    block, _ := pem.Decode([]byte(privateKeyPkcs1))\n    if block == nil {\n        return nil, errors.New("failed to decode PEM block containing public key")\n    }\n    privateKey, err := x509.ParsePKCS1PrivateKey(block.Bytes)\n    if err != nil {\n        return nil, err\n    }\n  \n    privateKeyPkcs8Bytes, err := x509.MarshalPKCS8PrivateKey(privateKey)\n    if err != nil {\n        return nil, err\n    }\n  \n    if strings.ToUpper(outputFormat) == "DER" {\n        return privateKeyPkcs8Bytes, nil\n    }\n  \n    privateKeyPkcs8 := &pem.Block{\n        Type:  "PRIVATE KEY",\n        Bytes: privateKeyPkcs8Bytes,\n    }\n    return pem.EncodeToMemory(privateKeyPkcs8), nil\n}\n\n// PKCS8ToPKCS1 将 pkcs8 标准的私钥转换为 pkcs1 标准，返回 pem 或者 der 格式的公钥\nfunc PKCS8ToPKCS1(privateKeyPkcs8, outputFormat string) ([]byte, error) {\n    block, _ := pem.Decode([]byte(privateKeyPkcs8))\n    if block == nil {\n        return nil, errors.New("failed to decode PEM block containing public key")\n    }\n    privateKey, err := x509.ParsePKCS8PrivateKey(block.Bytes)\n    if err != nil {\n        return nil, err\n    }\n  \n    rsaPrivateKey, ok := privateKey.(*rsa.PrivateKey)\n    if !ok {\n        return nil, errors.New("not an RSA public key")\n    }\n    privateKeyPkcs1Bytes := x509.MarshalPKCS1PrivateKey(rsaPrivateKey)\n  \n    if strings.ToUpper(outputFormat) == "DER" {\n        return privateKeyPkcs1Bytes, nil\n    }\n  \n    privateKeyPkcs1 := &pem.Block{\n        Type:  "RSA PRIVATE KEY",\n        Bytes: privateKeyPkcs1Bytes,\n    }\n    return pem.EncodeToMemory(privateKeyPkcs1), nil\n}\n\nfunc main() {\n    // pkcs1 标准 pem 格式的公钥\n\t  publicKeyPkcs1Pem := `\n-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n`\n\n    // pkcs1 标准 pem 格式的私钥\n    privateKeyPkcs1Pem := `\n-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n`\n    // 转换公钥：pkcs1 => spki\n    publicKeySpkiPem, err := PKCS1ToSPKI(publicKeyPkcs1Pem, "pem")\n    if err != nil {\n        fmt.Println("Error converting public key PKCS1 to SPKI:", err)\n        return\n    }\n  \n    // 转换私钥：pkcs1 => pkcs8\n    privateKeyPkcs8Pem, err := PKCS1ToPKCS8(privateKeyPkcs1Pem, "pem")\n    if err != nil {\n        fmt.Println("Error converting private key PKCS1 to PKCS8:", err)\n        return\n    }\n  \n    fmt.Println("公钥转换 pkcs1 => spki:\\n\\n", string(publicKeySpkiPem))\n    fmt.Println("私钥转换 pkcs1 => pkcs8:\\n\\n", string(privateKeyPkcs8Pem))\n}\n\n/*\n公钥转换 pkcs1 => spki:\n\n -----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCywP2lBJUsarz1J5QuAPFGjYer\nccq45S7IVuP8FIFmSAQW76e8lY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPo\nyMdbVHciTyVy8mQja90PLeLEMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sL\nnGFdBB0m8dxtG+oRKwIDAQAB\n-----END PUBLIC KEY-----\n\n私钥转换 pkcs1 => pkcs8:\n\n -----BEGIN PRIVATE KEY-----\nMIICegIBADANBgkqhkiG9w0BAQEFAASCAmQwggJgAgEAAoGBALLA/aUElSxqvPUn\nlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4OiC5mbbbyvOqElQNhkaeV8EF2r\nZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q1+imN6KUEIHrLveuYq1Lvmw3\nlt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAECgYAM6uVph2tASnZdQP70VB0bfB7R\nxOdhdS5sS9st3E19lra08ZythCFa4dr0vsavW/pgqtCE0rzUWKLWIgy8GfORUhqS\nFJi8Lb3jLIRkb59glxe5lbOgXT5hSuUU/Ru8bkk6kNxQ3hgb60b3bgBuHI8vQAmR\nfQEQSVJZoWFW2dPEAQJFALh8wsjMTaEKr0VSZHn1gNIdqw9RUNa6rR5cb4//Qqn3\nHllQONlyiNwGGmwkFBvH0/jKDKJiPi5TDc5IDxf99kfGqaD9Aj0A+AtHlTPlV5qP\nU+C6GSgoHffzg+eusqgUP7CBzoftCJv1ooYpPTHl0qzBl5/IT88X5CLuExaI7XwU\nrYdHAkRv95BES/KFXbW4TeQbPMvdOhJarpBwckWlWpZ+/34XJ5rsu8p09pVna/DX\nVyI5JhNZOE9oslVoyhFj88ntVr4FG+ZRhQI9AI7Tp+dhF5lHFWreByq/NcJz6RO2\nD6EuKWK3Fze+ix2e+GUaTZrAJa8W7O6LAgP6oq4p8t6o5jWhciKttwJEa0bg+yko\nsBAw7qMjtsVRzmJ/1QqjpMZ67f0Teq2/iNY1bqo5s8En1HWC6syo9RP2DrfTGNl1\nnHPppz1nsV+COkxXQV4=\n-----END PRIVATE KEY-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n\n\n\n# 加密解密\n\n关于加密解密\n\n在 RSA 加密解密操作中，我们需要注意的是填充方式（padding），最常见的分为以下四种：\n\n * RSA_NO_PADDING: 不使用填充方案；\n * RSA_PKCS1_PADDING: 最常见，使用 PKCS#1 v1.5 填充方案；\n * RSA_PKCS1_OAEP_PADDING: OAEP (Optimal asymmetric encryption padding)，最优非对称加密填充，在 PKCS#1 v2 中标准化；\n * RSA_PKCS1_PSS_PADDING: PSS (Probabilistic signature scheme)，概率签名方案，在 PKCS#1 v2.1 中标准化。\n\n----------------------------------------\n\n【实用参考资料】\n\nPadding 维基百科：https://en.wikipedia.org/wiki/Padding_(cryptography)\nRSA Padding 维基百科：https://en.wikipedia.org/wiki/RSA_(cryptosystem)#Padding\n聊聊密码学中的Padding：https://cloud.tencent.com/developer/article/1499219\nPSS (Probabilistic signature scheme)：https://en.wikipedia.org/wiki/Probabilistic_signature_scheme\nOAEP (Optimal asymmetric encryption padding)：https://en.wikipedia.org/wiki/Optimal_asymmetric_encryption_padding\n\n\n# Python\n\n\n# ✅ 安装依赖 pip install cryptography，要求 Python 3.7+，官方文档：https://cryptography.io/\n\n# ❌ padding 填充方式只支持 RSA_PKCS1_PADDING、RSA_PKCS1_OAEP_PADDING，不支持 RSA_NO_PADDING、RSA_PKCS1_PSS_PADDING\n\n\nimport base64\nfrom cryptography.hazmat.primitives import serialization, hashes\nfrom cryptography.hazmat.primitives.asymmetric import padding\n\n\ndef set_padding(padding_scheme):\n    if padding_scheme == "RSA_PKCS1_OAEP_PADDING":\n        return padding.OAEP(\n            mgf=padding.MGF1(algorithm=hashes.SHA256()),\n            algorithm=hashes.SHA256(),\n            label=None\n        )\n    elif padding_scheme == "RSA_PKCS1_PADDING":\n        return padding.PKCS1v15()\n    else:\n        raise ValueError("Unsupported padding scheme")\n\n\n# pkcs1 标准 pem 格式的公钥\npublic_key_pkcs1_pem = """\n-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """\n-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n"""\n\npublic_key = serialization.load_pem_public_key(public_key_pkcs1_pem.encode())\nprivate_key = serialization.load_pem_private_key(private_key_pkcs1_pem.encode(), password=None)\n\ndata = "spiderapi.cn - 虫术"\npadding_type = set_padding("RSA_PKCS1_PADDING")\nresultEncrypted = public_key.encrypt(data.encode(), padding_type)\nresultDecrypted = private_key.decrypt(resultEncrypted, padding_type).decode()\n\nprint("RSA_PKCS1_PADDING 加密结果: ", base64.b64encode(resultEncrypted).decode())\nprint("RSA_PKCS1_PADDING 解密结果: ", resultDecrypted)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n\n\n# ✅ 安装依赖 pip install pycryptodome，官方文档：https://pycryptodome.readthedocs.io/\n\n# ❌ padding 填充方式只支持 RSA_PKCS1_PADDING、RSA_PKCS1_OAEP_PADDING，不支持 RSA_NO_PADDING、RSA_PKCS1_PSS_PADDING\n\n\nimport base64\nfrom Crypto.PublicKey import RSA\nfrom Crypto.Cipher import PKCS1_v1_5  # 即 RSA_PKCS1_PADDING\nfrom Crypto.Cipher import PKCS1_OAEP  # 即 RSA_PKCS1_OAEP_PADDING\n\n\ndef rsa_decrypt(ciphertext):\n    cipher = PKCS1_v1_5.new(private_key)\n    decrypted = cipher.decrypt(ciphertext, None).decode()\n    return decrypted\n\n\ndef rsa_encrypt(plaintext):\n    cipher = PKCS1_v1_5.new(public_key)\n    encrypted = cipher.encrypt(plaintext.encode())\n    return encrypted\n\n\n# 注意 """ 之后要紧跟着密钥标头，如果换行可能会因为无法解析导致报错：ValueError: RSA key format is not supported\n# pkcs1 标准 pem 格式的公钥\npublic_key_pkcs1_pem = """-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n"""\n\npublic_key = RSA.import_key(public_key_pkcs1_pem)\nprivate_key = RSA.import_key(private_key_pkcs1_pem)\n\ndata = "spiderapi.cn - 虫术"\nresultEncrypted = rsa_encrypt(data)\nresultDecrypted = rsa_decrypt(resultEncrypted)\n\nprint("RSA_PKCS1_PADDING 加密结果: ", base64.b64encode(resultEncrypted).decode())\nprint("RSA_PKCS1_PADDING 解密结果: ", resultDecrypted)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n# ✅ 安装依赖 pip install rsa，官方文档：https://stuvel.eu/python-rsa-doc/\n\n# ❌ padding 填充方式只支持 RSA_PKCS1_PADDING\n# ❌ 不支持使用 spki 语法标准的公钥和 pkcs8 语法标准的私钥\n\n\nimport rsa\nimport base64\n\n\n# pkcs1 标准 pem 格式的公钥\npublic_key_pkcs1_pem = """\n-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """\n-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n"""\n\npublic_key = rsa.PublicKey.load_pkcs1(public_key_pkcs1_pem.encode(), "PEM")\nprivate_key = rsa.PrivateKey.load_pkcs1(private_key_pkcs1_pem.encode(), "PEM")\n\ndata = "spiderapi.cn - 虫术"\nresultEncrypted = rsa.encrypt(data.encode(), public_key)\nresultDecrypted = rsa.decrypt(resultEncrypted, private_key)\n\nprint("RSA_PKCS1_PADDING 加密结果: ", base64.b64encode(resultEncrypted).decode())\nprint("RSA_PKCS1_PADDING 解密结果: ", resultDecrypted.decode())\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n\n# ✅ 安装依赖 pip install pycryptodome，官方文档：https://pycryptodome.readthedocs.io/\n\n# ❌ padding 填充方式只支持 RSA_PKCS1_PADDING、RSA_PKCS1_OAEP_PADDING，不支持 RSA_NO_PADDING、RSA_PKCS1_PSS_PADDING\n# 本例由雕虫小技二群粉丝提供，ID：曹晶 Eric Cao🇨🇳\n\n\nimport base64\nfrom Crypto.PublicKey import RSA\nfrom Crypto.Cipher import PKCS1_v1_5  # 即 RSA_PKCS1_PADDING\nfrom Crypto.Cipher import PKCS1_OAEP  # 即 RSA_PKCS1_OAEP_PADDING\n\n\n# 一次 RSA 加密对明文长度是有限制，实际上，RSA 算法本身要求加密内容也就是明文长度 M 必须 0 < M < N（模数）\n# 如果要加密一个长度大于模数 N 的明文块，就需要对明文进行分块以满足要求\n# RSA_PKCS1_PADDING，每次加密的明文必须比 RSA 密钥的模长至少少 11 个字节\n# RSA_PKCS1_OAEP_PADDING，每次加密的明文必须比 RSA 密钥的模长至少少 42 个字节\n# NO_PADDING，每次加密的明文与 RSA 的密钥的模长一样，或更短\n\n\ndef rsa_encrypt(plaintext):\n    plaintext = plaintext.encode(\'utf-8\')\n    chunk_size = public_key.size_in_bytes() - 11  # 设置每个小段的长度,加密时要减去一个长度,PKCS1_PADDING: 至少-11, PKCS1_OAEP_PADDING: 至少-42\n    chunks = [plaintext[i:i + chunk_size] for i in range(0, len(plaintext), chunk_size)]\n    encrypted_chunks = [PKCS1_v1_5.new(public_key).encrypt(chunk) for chunk in chunks]\n    encrypted_data = b\'\'.join(encrypted_chunks)\n    return encrypted_data\n\n\ndef rsa_decrypt(ciphertext):\n    chunk_size = private_key.size_in_bytes()  # 设置每个小段的长度\n    chunks = [ciphertext[i:i + chunk_size] for i in range(0, len(ciphertext), chunk_size)]\n    decrypted_chunks = [PKCS1_v1_5.new(private_key).decrypt(chunk, None) for chunk in chunks]\n    decrypted_data = b\'\'.join(decrypted_chunks)\n    return decrypted_data.decode(\'utf-8\')\n\n\n# 注意 """ 之后要紧跟着密钥标头，如果换行可能会因为无法解析导致报错：ValueError: RSA key format is not supported\n# pkcs1 标准 pem 格式的公钥\npublic_key_pkcs1_pem = """-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n"""\n\npublic_key = RSA.import_key(public_key_pkcs1_pem)\nprivate_key = RSA.import_key(private_key_pkcs1_pem)\n\ndata = "SpiderAPI - 虫术 - 汇总各种爬虫逆向常用 API，涉及各种网络请求库，自动化框架，爬虫框架，HOOK 脚本，ADB 命令等。SpiderAPI - Insect Techniques - Summarize various commonly used reverse APIs for web crawlers, involving various network request libraries, automation frameworks, web crawling frameworks, HOOK scripts, ADB commands, etc."\nresultEncrypted = rsa_encrypt(data)\nresultDecrypted = rsa_decrypt(resultEncrypted)\n\nprint("原文长度: ", len(data))\nprint("RSA_PKCS1_OAEP_PADDING 加密结果: %s" % base64.b64encode(resultEncrypted).decode())\nprint("RSA_PKCS1_OAEP_PADDING 解密结果: %s" % resultDecrypted)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n\n\n\n# JavaScript\n\n\n// ✅ Node.js 内置 crypto 模块，无需单独安装，官方文档：https://nodejs.org/docs/latest/api/crypto.html\n\nvar crypto = require("crypto");\n\n\nfunction rsaEncrypt(data) {\n    var bufferData = Buffer.from(data);\n    var encrypted = crypto.publicEncrypt({\n        key: publicKey,\n        // 支持 RSA_NO_PADDING、RSA_PKCS1_PADDING、RSA_PKCS1_OAEP_PADDING、RSA_PKCS1_PSS_PADDING\n        padding: crypto.constants.RSA_PKCS1_PADDING\n    }, bufferData);\n    return encrypted.toString("base64");\n}\n\nfunction rsaDecrypt(cipherText) {\n    var bufferData = Buffer.from(cipherText, "base64");\n    var decrypted = crypto.privateDecrypt({\n        key: privateKey,\n        // 支持 RSA_NO_PADDING、RSA_PKCS1_PADDING、RSA_PKCS1_OAEP_PADDING、RSA_PKCS1_PSS_PADDING\n        padding: crypto.constants.RSA_PKCS1_PADDING\n    }, bufferData);\n    return decrypted.toString();\n}\n\n// pkcs1 标准 pem 格式的公钥\nvar publicKeyPkcs1Pem = `\n-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n`\n\n// pkcs1 标准 pem 格式的私钥\nvar privateKeyPkcs1Pem = `\n-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n`\n\n// 将 pem 格式的密钥转换为 crypto 可以使用的对象\nvar publicKey = crypto.createPublicKey(publicKeyPkcs1Pem);\nvar privateKey = crypto.createPrivateKey(privateKeyPkcs1Pem);\n\n// RSA 加解密，填充方式使用 RSA_PKCS1_PADDING，其他可选 RSA_NO_PADDING、RSA_PKCS1_OAEP_PADDING、RSA_PKCS1_PSS_PADDING\nvar data = "spiderapi.cn - 虫术";\nvar resultEncrypted = rsaEncrypt(data);\nvar resultDecrypted = rsaDecrypt(resultEncrypted);\n\nconsole.log("RSA_PKCS1_PADDING 加密结果: ", resultEncrypted)\nconsole.log("RSA_PKCS1_PADDING 解密结果: ", resultDecrypted)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n// ✅ 安装依赖：npm install node-rsa，官方文档：https://github.com/rzcoder/node-rsa\n\n// ❓ 注意：截止 2024.03，该库中公钥语法标准支持 pkcs8，但实际上不存在这种说法，具有争议，正确应该是 spki，参见：https://github.com/rzcoder/node-rsa/issues/208\n// ❌  padding 填充方式只支持 RSA_PKCS1_PADDING、RSA_PKCS1_OAEP_PADDING，不支持 RSA_NO_PADDING、RSA_PKCS1_PSS_PADDING\n\nvar NodeRSA = require("node-rsa");\n\n\n// pkcs1 标准 pem 格式的公钥\nvar publicKeyPkcs1Pem = `\n-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n`\n\n// pkcs1 标准 pem 格式的私钥\nvar privateKeyPkcs1Pem = `\n-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n`\n\nvar key = new NodeRSA();\nkey.setOptions({ encryptionScheme: "pkcs1" });  // 设置填充模式，默认 pkcs1_oaep\n\n// 导入密钥，传入参数格式：语法标准-密钥类型-输出格式，即 scheme-[key_type]-[output_type]\nkey.importKey(publicKeyPkcs1Pem, "pkcs1-public-pem");   // 公钥语法标准支持 pkcs1、pkcs8，输出格式支持 pem、der\nkey.importKey(privateKeyPkcs1Pem, "pkcs1-private-pem"); // 私钥语法标准支持 pkcs1、pkcs8，输出格式支持 pem、der\n\n// RSA 加解密\nvar data = "spiderapi.cn - 虫术";\nvar resultEncrypted =  key.encrypt(data, "base64");\nvar resultDecrypted = key.decrypt(resultEncrypted, "utf8");\n\nconsole.log("RSA_PKCS1_PADDING 加密结果: ", resultEncrypted)\nconsole.log("RSA_PKCS1_PADDING 解密结果: ", resultDecrypted)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\n\n// ✅ 安装依赖：npm install jsencrypt，官方文档：https://github.com/travist/jsencrypt\n\n// ❗ 如果在 Node 环境中使用，会遇到报错 window is not defined，处理方法：\n//    1.在当前 JS 文件顶部添加代码：window = global;\n//    2.在 \\node_modules\\jsencrypt\\bin\\jsencrypt.js 添加代码：window = global;\n// ❌ padding 填充方式默认为 RSA_PKCS1_PADDING，不支持其他填充方式\n\n\nvar JSEncrypt = require("jsencrypt");\n\n\n// pkcs1 标准 pem 格式的公钥\nvar publicKeyPkcs1Pem = `\n-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n`\n\n// pkcs1 标准 pem 格式的私钥\nvar privateKeyPkcs1Pem = `\n-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n`\n\nvar encryptor = new JSEncrypt();\nencryptor.setPublicKey(publicKeyPkcs1Pem);\nencryptor.setPrivateKey(privateKeyPkcs1Pem);\n\n// RSA 加解密，填充方式只支持 RSA_PKCS1_PADDING\nvar data = "spiderapi.cn - 虫术";\nvar resultEncrypted = encryptor.encrypt(data);\nvar resultDecrypted = encryptor.decrypt(resultEncrypted);\n\nconsole.log("RSA_PKCS1_PADDING 加密结果: ", resultEncrypted)\nconsole.log("RSA_PKCS1_PADDING 解密结果: ", resultDecrypted)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\n\n\n# Golang\n\n// ✅ 无需安装依赖，官方文档：https://pkg.go.dev/crypto\n\n// ❌ padding 填充方式只支持 RSA_PKCS1_PADDING、RSA_PKCS1_OAEP_PADDING，不支持 RSA_NO_PADDING、RSA_PKCS1_PSS_PADDING\n\n\npackage main\n\nimport (\n    "crypto/rand"\n    "crypto/rsa"\n    "crypto/x509"\n    "encoding/base64"\n    "encoding/pem"\n    "fmt"\n)\n\nfunc main() {\n\t  // pkcs1 标准 pem 格式的公钥\n\t  publicKeyPkcs1Pem := `\n-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBALLA/aUElSxqvPUnlC4A8UaNh6txyrjlLshW4/wUgWZIBBbvp7yVj4Oi\nC5mbbbyvOqElQNhkaeV8EF2rZqy9m5whs+jIx1tUdyJPJXLyZCNr3Q8t4sQyek6q\n1+imN6KUEIHrLveuYq1Lvmw3lt52vRzvWwucYV0EHSbx3G0b6hErAgMBAAE=\n-----END RSA PUBLIC KEY-----\n`\n\n\t  // pkcs1 标准 pem 格式的私钥\n\t  privateKeyPkcs1Pem := `\n-----BEGIN RSA PRIVATE KEY-----\nMIICYAIBAAKBgQCywP2lBJUsarz1J5QuAPFGjYerccq45S7IVuP8FIFmSAQW76e8\nlY+DoguZm228rzqhJUDYZGnlfBBdq2asvZucIbPoyMdbVHciTyVy8mQja90PLeLE\nMnpOqtfopjeilBCB6y73rmKtS75sN5bedr0c71sLnGFdBB0m8dxtG+oRKwIDAQAB\nAoGADOrlaYdrQEp2XUD+9FQdG3we0cTnYXUubEvbLdxNfZa2tPGcrYQhWuHa9L7G\nr1v6YKrQhNK81Fii1iIMvBnzkVIakhSYvC294yyEZG+fYJcXuZWzoF0+YUrlFP0b\nvG5JOpDcUN4YG+tG924AbhyPL0AJkX0BEElSWaFhVtnTxAECRQC4fMLIzE2hCq9F\nUmR59YDSHasPUVDWuq0eXG+P/0Kp9x5ZUDjZcojcBhpsJBQbx9P4ygyiYj4uUw3O\nSA8X/fZHxqmg/QI9APgLR5Uz5Veaj1PguhkoKB3384PnrrKoFD+wgc6H7Qib9aKG\nKT0x5dKswZefyE/PF+Qi7hMWiO18FK2HRwJEb/eQREvyhV21uE3kGzzL3ToSWq6Q\ncHJFpVqWfv9+Fyea7LvKdPaVZ2vw11ciOSYTWThPaLJVaMoRY/PJ7Va+BRvmUYUC\nPQCO06fnYReZRxVq3gcqvzXCc+kTtg+hLilitxc3vosdnvhlGk2awCWvFuzuiwID\n+qKuKfLeqOY1oXIirbcCRGtG4PspKLAQMO6jI7bFUc5if9UKo6TGeu39E3qtv4jW\nNW6qObPBJ9R1gurMqPUT9g630xjZdZxz6ac9Z7FfgjpMV0Fe\n-----END RSA PRIVATE KEY-----\n`\n\n    publicKeyBlock, _ := pem.Decode([]byte(publicKeyPkcs1Pem))\n    if publicKeyBlock == nil {\n        panic("Failed to parse PEM block containing the public key")\n    }\n    publicKey, err := x509.ParsePKCS1PublicKey(publicKeyBlock.Bytes)\n    if err != nil {\n        panic("Failed to parse public key: " + err.Error())\n    }\n  \n    privateKeyBlock, _ := pem.Decode([]byte(privateKeyPkcs1Pem))\n    if privateKeyBlock == nil {\n        panic("Failed to parse PEM block containing the private key")\n    }\n    privateKey, err := x509.ParsePKCS1PrivateKey(privateKeyBlock.Bytes)\n    if err != nil {\n        panic("Failed to parse private key: " + err.Error())\n    }\n  \n    data := "spiderapi.cn - 虫术"\n  \n    // RSA_PKCS1_PADDING\n    resultEncrypted, err := rsa.EncryptPKCS1v15(rand.Reader, publicKey, []byte(data))\n    // RSA_PKCS1_OAEP_PADDING\n    // resultEncrypted, err := rsa.EncryptOAEP(sha256.New(), rand.Reader, publicKey, []byte(data), nil)\n    if err != nil {\n        panic("Failed to encrypt data: " + err.Error())\n    }\n  \n    // RSA_PKCS1_PADDING\n    resultDecrypted, err := rsa.DecryptPKCS1v15(rand.Reader, privateKey, resultEncrypted)\n    // RSA_PKCS1_OAEP_PADDING\n    // resultDecrypted, err := rsa.DecryptOAEP(sha256.New(), rand.Reader, privateKey, resultEncrypted, nil)\n    if err != nil {\n        panic("Failed to decrypt data: " + err.Error())\n    }\n  \n    fmt.Println("RSA_PKCS1_PADDING 加密结果: ", base64.StdEncoding.EncodeToString(resultEncrypted))\n    fmt.Println("RSA_PKCS1_PADDING 解密结果: ", string(resultDecrypted))\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n\n\n\n# 在线工具\n\n * 在线 RSA 加解密\n * 公私钥格式在线转换',normalizedContent:'关于 rsa 非对称加密算法\n\nrsa 加密算法是一种非对称加密算法，是由罗纳德·李维斯特（ron rivest）、阿迪·萨莫尔（adi shamir）和伦纳德·阿德曼（leonard adleman）在 1977 年一起提出的，rsa 就是他们三人姓氏开头字母拼在一起组成的。rsa 公开密钥密码体制的原理是：根据数论，寻求两个大素数比较简单，而将它们的乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。\n\nrsa 维基百科\n\n注意\n\nrsa 加解密涉及到密钥位数、密钥格式、密钥语法标准、填充方式等概念，请务必理解后再进行使用，否则可能在使用代码时发生各种报错，认真阅读文档，可解决 99% 的问题！！！\n\n\n# 生成密钥\n\n关于密钥各个术语的解释\n\n什么是密钥的位数：\n\n\n该位数既不是指公钥的长度，也不是私钥的长度，实际上是指生成的 rsa 密钥对中公钥和私钥所包含的模数（modulus）的位数，给定一个公钥或者私钥，均可从中解析出模数，由于 rsa 密钥对是基于一个大素数乘积生成的，因此长度也决定了其安全性和加密强度，在实际使用中，密钥位数常见的有 512 位、1024 位、2048 位、3072 位和 4096 位。但实际应用中不推荐 512 位，需要注意的是，密钥长度越长，加密的强度也就越强，但同时也会增加程序计算的时间。例如，秘钥长度增加 1 倍，密钥对生成的时间就增加 16 倍，公钥加密操作时长增加 4 倍，私钥解密操作时长增加 8 倍。因此，选择密钥长度时需要综合考虑安全性和效率。\n\n----------------------------------------\n\n什么是模数（modulus）：\n\n\nrsa 密钥的模数是公钥和私钥中的一个重要参数，通常用大素数的乘积表示，在 rsa 加密算法中，模数（modulus）是两个大素数的乘积，通常用 n 表示，在密钥生成过程中，选择两个大素数 p 和 q，然后计算它们的乘积 ，这个 n 就是 rsa 密钥的模数，模数 n 用于 rsa 算法中的加密、解密、签名和验证过程，公钥由模数 n 和公钥指数 e 组成，私钥由模数 n 和私钥指数 d 组成。模数 n 的长度通常决定了 rsa 密钥的安全性。\n\n----------------------------------------\n\n什么是公钥 / 私钥指数：\n\n\n在 rsa 加密算法中，公钥和私钥都包含一个指数，这些指数是用来进行加密和解密操作的，公钥指数通常用 e 表示，私钥指数通常用 d 表示，这两个指数的选择是相互关联的，确保了 rsa 算法的正确性，通常情况下，公钥指数 e 和私钥指数 d 满足以下条件：，其中 是欧拉函数，用于计算与模数 n 互素的正整数个数。这个条件保证了 rsa 加密和解密过程是可逆的，公钥指数 e 通常为 65537（0x10001，5bits），该值是除了 1、3、5、17、257 之外的最小素数，私钥指数 d 可以通过公钥指数 e 和模数 n 计算得到，一种常用的方法是使用扩展的欧几里得算法或模反演算法，这两种方法都可以有效地计算私钥指数 d，根据前面提到的两个指数关系的公式，可以得到：，所以私钥指数 d 应当是一个大整数，并且满足 。一般在各个 rsa 加解密代码里，都不用单独设置这公钥指数，基本上都是默认的 65537（0x10001，5bits）。\n\n----------------------------------------\n\n私钥签名（加密）：\n\n\n私钥签名，也称为私钥加密，私钥通常用于对敏感数据进行解密，如果私钥未经授权的访问者获得，可能会导致数据泄露或伪造签名等安全问题，通过加密私钥，即使未经授权的人获得了密钥文件，也需要正确的解密密码才能访问私钥，从而保护私钥的安全。在生成密钥对时，可以指定加密私钥的算法和密码，在使用私钥时，需要提供正确的解密密码才能解密私钥。\n\n----------------------------------------\n\n密钥输出的格式：\n\n * der：二进制数据，序列化 asn.1 结构；\n * pem：最常见的类型，将 der 数据进行 base64 编码，然后加上以 ----- 包裹的标头，用于标识密钥类型；\n * jwk：json web 密钥，关键数据存储在 json 对象中，是 javascript 对象签名和加密 (jose) 规范的一部分；\n * openssh：openssh 密钥格式，常用于在 openssh 客户端和服务器之间传输密钥，密钥以 ssh-rsa 开头。\n\n----------------------------------------\n\n密钥的语法标准：\n\n * 公钥语法标准：pkcs1 或 spki\n * 私钥语法标准：pkcs1 或 pkcs8\n\n有的库里面（如：js 的 node-rsa 库），公钥语法标准支持 pkcs1 或 pkcs8，没有 spki，事实上这是不太规范的说法，参见 issues。\n\n当密钥输出格式为 pem 时：\n\n * 公钥使用 pkcs1 标准，得到的公钥以 -----begin rsa public key----- 开头；\n * 公钥使用 spki 标准，得到的公钥以 -----begin public key----- 开头；\n * 私钥使用 pkcs1 标准，得到的私钥以 -----begin rsa private key----- 开头；\n * 私钥使用 pkcs8 标准，得到的私钥以 -----begin private key----- 开头。\n * 私钥使用 pkcs1 标准，如果对私钥进行了加密，则得到的私钥以 -----begin rsa private key----- 开头，但内容里包含 proc-type、dek-info 字段；\n * 私钥使用 pkcs8 标准，如果对私钥进行了加密，则得到的私钥以 -----begin encrypted private key----- 开头。\n\n----------------------------------------\n\npkcs 标准科普：\n\n公钥加密标准（public key cryptography standards, pkcs），是由美国 rsa 数据安全公司及其合作伙伴制定的一组公钥密码学标准，其中包括证书申请、证书更新、证书作废表发布、扩展证书内容以及数字签名、数字信封的格式等方面的一系列相关协议。pkcs#1 至 pkcs#15 是不同类型的标准，用于不同的场景，在 rsa 算法中主要会用到 pkcs#1 和 pkcs#8 两种标准：\n\n * pkcs#1：专门针对 rsa 算法的一个标准，用于 rsa 公钥和私钥的具体实现以及加密、签名算法的规定；\n * pkcs#8：通用私钥语法标准，定义了私钥的存储格式，可以用于不同密码学算法的私钥存储。\n\n----------------------------------------\n\nspki 标准科普：\n\n * 公开密钥基础设施（public key infrastructure, pki），又称公开密钥基础架构、公钥基础建设、公钥基础设施、公开密码匙基础建设或公钥基础架构，是一组由硬件、软件、参与者、管理政策与流程组成的基础架构，其目的在于创造、管理、分配、使用、存储以及撤销数字证书；\n * 简单公钥基础设施（simple public-key infrastructure, spki），是克服传统 x.509 pki 复杂性的一种尝试，spki 规范定义了授权证书格式，提供了特权、权利或其他此类属性（称为授权）的描述，并将它们绑定到公钥。\n\n----------------------------------------\n\n【实用参考资料】\n\n公钥证书编码解读：https://zhuanlan.zhihu.com/p/77329250\nrsa密钥长度、明文长度和密文长度：https://cloud.tencent.com/developer/article/1199963\n安全：深入理解数字证书中的 pkcs#1 与 pkcs#8 标准 ：https://cloud.tencent.com/developer/article/2390956\npkcs#1、pkcs#5、pkcs#7、pkcs#8 到底是什么？：https://blog.csdn.net/weixin_45264425/article/details/127096145\n\n\n# python\n\n\n# ✅ 安装依赖 pip install pycryptodome，官方文档：https://pycryptodome.readthedocs.io/\n\n# ❌ 密钥输出格式不支持 jwk\n# ❌ 公钥语法标准不支持 pkcs1，仅支持 spki\n# ❌ 私钥加密：当私钥语法标准为 pkcs1 时，不支持指定算法，默认使用 des-ede3-cbc\n#             当私钥语法标准为 pkcs8 时，protection 可以指定算法，算法名称参考：https://pycryptodome.readthedocs.io/en/latest/src/io/pkcs8.html#encryption-parameters\n\nfrom crypto.publickey import rsa\n\n\nkey = rsa.generate(\n    bits=2048,                           # 密钥位数，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n    e=65537                              # 公钥指数，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n)\n\nprivate_key = key.export_key(\n    format="pem",                        # 私钥输出格式，支持 pem、der、openssh\n    pkcs=8,                              # 私钥语法标准，支持 pkcs1、pkcs8，该参数仅对私钥有效\n    # passphrase="spiderapi",            # 可选参数，私钥加密的密码，如果私钥加密了，则使用时需要先解密，该参数仅对私钥有效\n    # protection="scryptandaes128-gcm",  # 可选参数，私钥加密的算法，该参数仅对私钥，且 pkcs=8 时有效\n)\npublic_key = key.publickey().export_key(\n    format="pem",                        # 公钥输出格式，支持 pem、der、openssh，公钥语法标准，仅支持且默认 spki\n)\n\nprint("rsa 公钥（spki、pem）：\\n\\n", public_key.decode("utf-8"))\nprint("rsa 私钥（pkcs8、pem）：\\n\\n", private_key.decode("utf-8"))\n\n"""\nrsa 公钥（spki、pem）：\n\n-----begin public key-----\nmiibijanbgkqhkig9w0baqefaaocaq8amiibcgkcaqea4mieslylqmhxeh1asixi\nxqdbyg6hmo7feru2csvh14iydwaxmz2gv3pbu+z9gcd+zoreo4pymqpn0koxgg2n\nvrhtzvzjarvnlokmk3wvfyx2ooubabfv/dul30lzhi2qhexiz5etb0xjopz1a9d3\nongahh6ynyocos0ktdbainodyy2lh5txg8jv4yahgmpghlyjp19eboyaqixj89ut\ngttvc/bl6po1uzbsr70zzy2yu79+b7ughsmhtcfdz7xoklk2uwuokryvsd1s/pex\nxiywq1djz4/smaidve58jwpeg9vonb/hzx24l35psddkc52ouaeynqcdvnhjojm9\nhwidaqab\n-----end public key-----\n\nrsa 私钥（pkcs8、pem）：\n\n-----begin private key-----\nmiievaibadanbgkqhkig9w0baqefaascbkywggsiageaaoibaqdgwgrkvgtayfd6\nhucwjgjep1vibqeyjt95g7yky8fxijh3brexnabxc8g75n2aip7oit47g9gyqmfs\nshcadadvgfnlxmkbfwcuisyrfbuvjhaii5saew/924vfqvmelaqf5cjpl60hrem4\n/pud0pc6ebocfpifkgkizqq0ntqi051hjawhm1cbwlxjjocay+actionx0qe5hqq\njepz1s0a1o9z9uxqk7w5luxhvtnljbjtv34htqagwwdnwv1nteiquta7bsgpfi+w\npvl+krfehjcrumlnj9iwcj1v7nypa8sd1widv8dlfbixfk9immolnahrotkdbx2+\nccmgkz2hagmbaaecggeacsta0zi0mx5vagycrp0xcrwclwyvyyowgidmncjsmvmw\nint+relk3y9aoo7fy9ijh970u91ublu+wbgwrk2r2qy4mlnmlbqc+cmfnndxrj6m\njdu4t7p94lppt2spruz0qfodpv+0htz1hx/tpjman+cn82mle13n/eezpryklfuy\ndvhxcvylmamhctnt9039byebf7kieodhlpygkacwcoy8f4fqqedzufshbhdolat+\nbx9botospqnymirzhk/srufji2+x3mvzy5pssxybrobrokvd4v+de+bxuylhdnpc\nrmh8jwsfecfsilmslkrfa+xgag36oxtd8wtf19x9xqkbgqdqmq+b3fiicvlirdlx\npb0od4u2noitzkyjr+qzyx3vpiru+ek1q9esj9kyzbuedftcxakhhvcjz/ierosz\nefcbs2fwwpa3gmeoj4htcnuzbisp6d/g6pwsf4i/lgxtscep7yegoana3vitklqx\nfbweb1gumpzs0jpwkvapfag3kwkbgqd1sbaxtqzqxcavlkgzaowdfa2mafdpnp0b\ntiygcyrahyhdbb4tbfrgsdcydnmpqmo0h4ymqrqfi38r5roossqdctnwmf6e9nux\nqlzu1dbri0vnggbjrtukidueadvrcepchfyyx7yemg1vkcqdoknqficn38r48gq9\nab66m+ilfqkbgbv3m9tcpt6xdcdh5rktjqkq08ul7ujiakb5t1gnv/hnjwthh7mo\nddkgoeniy3e25j13lprxhabux1aznfdyqwecmuyx0auzr+svyvw9el7mqhofa+vf\npqq6bnfnnuofsczykbzl0tszjsabkiznxylwcxvbmfzy4ch8mnu6fgh1aogazg3/\ncr8lg412istrybt3hlcqxt/4fbfkhrnurxkyqvckned8t/umidp8c6hor8+q7rvv\nhsoe/e91ao9ca17tvdzm7qllvad+le3jz3oert2k5vfpwqgmjkcgnreznixdob+n\n/97cuqrth9utzqz2frt1keamh0ygmgjajrtn4c0cgya7n7xm7oi6oh5ug0c2bcnt\nof6cbmkky6irmpyrteozrrno/lua0v89o6etdec/hchzvh66oecz9kw/xvxfyttt\n8sotwxesdwe4a7onom1vqhx7dtkjpqtvzfaxrvhgyyuazsaec2iswkhipwq2mjkd\npbyl7lrjpdv9z7za63nmbq==\n-----end private key-----\n"""\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n\n\n# ✅ 安装依赖 pip install cryptography，要求 python 3.7+，官方文档：https://cryptography.io/\n\n# ❌ 密钥输出格式不支持 jwk\n# ❌ 私钥语法标准不支持 pkcs1\n\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.ciphers import algorithms\n\n\nprivate_key = rsa.generate_private_key(\n    public_exponent=65537,                                 # 公钥指数，推荐 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n    key_size=2048                                          # 密钥位数，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n)\n\n# 从私钥中提取公钥\npublic_key = private_key.public_key()\n\n# 序列化私钥和公钥\npublic_key = public_key.public_bytes(\n    encoding=serialization.encoding.pem,                    # 公钥输出格式，支持 pem、der、openssh\n    format=serialization.publicformat.subjectpublickeyinfo  # 公钥语法标准，支持 pkcs1、spki (subjectpublickeyinfo)\n)\n\n\nprivate_key = private_key.private_bytes(\n    encoding=serialization.encoding.pem,                    # 私钥输出格式，支持 pem、der、openssh\n    format=serialization.privateformat.pkcs8,               # 私钥语法标准，支持 pkcs8\n    encryption_algorithm=serialization.noencryption()       # 私钥不加密\n    # encryption_algorithm=serialization.bestavailableencryption("password".encode())  # 对私钥加密\n)\n\nprint("rsa 公钥（spki、pem）：\\n\\n", public_key.decode("utf-8"))\nprint("rsa 私钥（pkcs8、pem）：\\n\\n", private_key.decode("utf-8"))\n\n\n"""\nrsa 公钥（spki、pem）：\n\n-----begin public key-----\nmiibijanbgkqhkig9w0baqefaaocaq8amiibcgkcaqeaunww+fbw3wgzkuu9tyop\n0uwn0fod5n7vlfhjfn0fukemqlgpqj+4uxnnayma4qxj9uems/n9+dn8kfiwnvjg\nr+ubssgqzuy/onx9e23ycq6l2rjgbdikcrssmmekcajcqub/eglwhzhacwlb4nr/\nhqvqs2x/j5nwr9wd8vwoypicia+lusnzabba29fitj7njbjkjbhnx4aahusqpwfg\ndjofygmpxb1hhaswmac1jtzo5xzqfusiecq21vnws2wvkdqchg7jnbhhst54h3w5\no7qg7iyigseylo2m6f4nxluhfdfddhjsndonzggvm1fai1xs1r01btx0n3dfsbqz\naqidaqab\n-----end public key-----\n\nrsa 私钥（pkcs8、pem）：\n\n-----begin private key-----\nmiievgibadanbgkqhkig9w0baqefaascbkgwggskageaaoibaqc6dbd4uhddybmq\n5t23kg/rrafqu4pk3u+v+gmwfqvsr4xcwa+qp7i7e2driwdhdgp1r4xl833503wp\n8hae+obh5qgxkcpm7l843h0tbfjyrqxzgmzt0gpxfkyayqpwcmjc5v8scvahofpz\nashiev8dc9blbh8nk3bh1ypxvahg8gihr4tri1kbtsdb0wk2puensmqlue1fhpod\nrjclyuz2ogxiaaldvuefqzczolwo1mjnhnb+5ih4krbvu1zlbc8p2pwedum1uggy\n3ngfdbk7tcdshiiax5gs7abp/g3eu6eun90meni0m43oaa+bv8ajvezwvtufphsf\ncn9jurmbagmbaaecggebakydjckjvyjfdlf2v0b88n27lvsijb84v7ynp5vhc6kb\nqxadzyq/yqwvnfusartwfcczigejuaksxwyr6g0tw3xtpljcjvb5byf1xxi6puv7\n8n9lnzwt0crvh+c3w5fsgn0tgimzaxhvlbtzbyjkcs5ybff+zkxwcwkfwkuod/4g\nf9scazdrxbhkn1qpbpbcf4nij3etapd3amfuzol+gzaz1e6xacupcqf1+yjwgjhe\nvjpa6mpx/rqpxi/xn2bsx9nnefsyxhmffbg9hnu487byozfodw/5jwsgcuhnx/0i\ncerahuuxtjya9nujkmrxgnoxofc7om79oe0blcxsb60cgyea5vhlgkaxedufhjna\n2atdxrygo1veyr3fmxuke7vyjgwzbzauaqbfc+kflpj6/587hyldi6xg+puwrmzs\nnmdsegzy+3wdye9dmuojp2mf8spqyrob3t7osl7ttyamb5fv+rap/hurla/2far7\n77nvfsagmuw+w4yuvwxkjucvwmscgyeazqp6qbdfugcxwzyiasucqi2dkoocnfbr\nrbk0lcpyz2fl6cqpuc1ejuesooxzuvshmgpeqwpwid97lsi6bj5p7ymalr3xagbr\nnnineop0a2sxj4cbeecxoxjfl46+mdmdy9n0kofzulwm0cp1m0vfjmmtlxgnscrz\nsvqfgmatbemcgybhf/54y0b+k3fzouzjfqeeiwtpoy4unvhiezm3oz60fmmudk9/\nfdweerwtt1aecu2lnfprisrbetys+5v16+djtupniy5ojfmgbjy3uwxnkd/jug5w\nnwd4fwsc2ql4jp0dozhop6vdvxc1lyvkk0eezyp7nsqoszl8s39lkjw6rqkbgfyh\n8zdvuh4tdri6xri1d7tad3qt7o1feutmrazqu/1eiix0ghsfbsf219nr56vlnpcc\nxkuwg+ulics7e9cs6/+vht+0yjw0q2wbxnvsdkdga614d61/hmlk6jzorbhvpnun\nn8lsu69iw519yhwwl0z4fkesb2oair5pcdjchkslaogbaie5+hfjyoztt3urzwzc\n7h8q97z+dxrchztibv8kam3hknmkyc9qogpok6fqm8gcotvi55zglixjtmy1gmrf\nnk1qenc23oadybezacqa5+0me/qdxk0q0bdkdkanh2na6lmy/4trinde/fsy7dil\nbdvst9y7yql41pyrwm/rhwas\n-----end private key-----\n"""\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n\n\n# ✅ 安装依赖 pip install rsa，官方文档：https://stuvel.eu/python-rsa-doc/\n\n# ❌ 密钥输出格式不支持 jwk、openssh\n# ❌ 公钥语法标准不支持 spki\n# ❌ 私钥语法标准不支持 pkcs8\n# ❌ 不支持对私钥进行签名、加密\n\nimport rsa\n\n\n(public_key, private_key) = rsa.newkeys(\n    nbits=1024,        # 密钥位数，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n    exponent=65537     # 公钥指数，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n)\n\n# 公钥和私钥输出各种都仅支持 pem 和 der，语法标准都只支持 pkcs1\npublic_key = public_key.save_pkcs1(format="pem")\nprivate_key = private_key.save_pkcs1(format="pem")\n\nprint("rsa 公钥（pkcs1、pem）：\\n\\n", public_key.decode("utf-8"))\nprint("rsa 私钥（pkcs1、pem）：\\n\\n", private_key.decode("utf-8"))\n\n"""\nrsa 公钥（pkcs1、pem）：\n\n-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n\nrsa 私钥（pkcs1、pem）：\n\n-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n"""\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n\n\n\n# javascript\n\n\n// ✅ node.js 内置 crypto 模块，无需单独安装\n\n// ❌ 密钥输出格式不支持 openssh\n\nvar crypto = require("crypto");\n\n\nvar { publickey, privatekey } = crypto.generatekeypairsync("rsa", {\n    moduluslength: 1024,            // 密钥位数，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n    publicexponent: 65537,          // 公钥指数，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n        publickeyencoding: {\n        type: "spki",               // 公钥语法标准，支持 pkcs1、spki\n        format: "pem"               // 公钥输出格式，支持 pem、der、jwk\n    },\n    privatekeyencoding: {\n        type: "pkcs1",              // 私钥语法标准，支持 pkcs1、pkcs8\n        format: "pem",              // 私钥输出格式，支持 pem、der、jwk\n        // cipher: "aes-256-cbc",   // 可选参数，私钥加密的算法，如 aes-256-cbc、des-ded3-cbc 等，如果私钥加密了，则使用时需要先解密\n        // passphrase: "spiderapi"  // 可选参数，私钥加密的密码\n    }\n});\n\nconsole.log("rsa 公钥（spki、pem）：\\n\\n", publickey);\nconsole.log("rsa 私钥（pkcs1、pem）：\\n\\n", privatekey);\n\n\n/*\nrsa 公钥（spki、pem）：\n\n-----begin public key-----\nmigfma0gcsqgsib3dqebaquaa4gnadcbiqkbgqdki91mwofoyfw+tpdkdljvww9q\ngjkzgzbehturl5qbwjwqo/yr1nhbtc4i9qso8xjs8350cwz2ixbke0qjgdptl8d2\nlluivdxty8uafitvyie7rhnanjpyb2ytnm8p85eyykznalq5v3w9hnam5xxgnffi\ny4pis7olhadvlzm32qidaqab\n-----end public key-----\n\nrsa 私钥（pkcs1、pem）：\n\n-----begin rsa private key-----\nmiicxqibaakbgqdki91mwofoyfw+tpdkdljvww9qgjkzgzbehturl5qbwjwqo/yr\n1nhbtc4i9qso8xjs8350cwz2ixbke0qjgdptl8d2lluivdxty8uafitvyie7rhna\nnjpyb2ytnm8p85eyykznalq5v3w9hnam5xxgnffiy4pis7olhadvlzm32qidaqab\naogbajon0qxohne4cuvcct5csn3gl2yc56f30ia7zyjqztfjvhimeoi5sbl8zn3b\nxtxhp7jv9sy80biwvslesv0usgodcktzqgjtq7pteug+ltrsplpb00sm1/gys7fu\nvwytcda8e/4nag+gcdhah4tduoy2jpxf4l3vobidpab+ab0bakea8f1qiowqv7ey\nqnpdbmx9+/2mir/doptyyus1nb+ftnzcze0/jp8nljuh7cbhtvrri0rzhsoymwk6\nypcudz4q+qjbaphhmzoiflqiedrgzxigutzigovmhbd3okvyjj8zr7bbm7tbkf9o\nu3v0lgmhfv7det/jxcwlexkmudyufyyo9eecqbwh7oukjj7udnbckrpr752teibs\njai0etvayny9zl5x0sfqzzpkfucw+dnncs8dojmpnjcnppn3lswj50jqbokcqqdq\nrh0v6avkkoydayzu8qlprufxhhg2yt1nmnn++jldbrmwp5dmh3qxxwfwhio9gijw\nf+ewquzd3mgteqxuua5hakbkka65jwhg5drl7gflj7m3phyped+uk2pp7gj5viff\nqgm7yyjfhvkg/enuc2w2aani+v8z4dfwwedlhpjcpyhb\n-----end rsa private key-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n\n\n// ✅ 安装依赖：npm install node-rsa\n\n// ❌ 密钥输出格式不支持 jwk、openssh\n// ❌ 不支持对私钥进行签名、加密\n// ❓ 注意：截止 2024.03，该库中公钥语法标准支持 pkcs8，但实际上不存在这种说法，具有争议，正确应该是 spki，参见：https://github.com/rzcoder/node-rsa/issues/208\n\nvar nodersa = require("node-rsa");\n\n\nvar key = new nodersa({\n    b: 1024,  // 密钥位数，默认 2048，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n    e: 65537  // 公钥指数，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n});\n\n// 生成密钥，传入参数格式：语法标准-密钥类型-输出格式，即 scheme-[key_type]-[output_type]\nvar publickey = key.exportkey("pkcs1-public-pem");    // 公钥语法标准支持 pkcs1、pkcs8，输出格式支持 pem、der\nvar privatekey = key.exportkey("pkcs8-private-pem");  // 私钥语法标准支持 pkcs1、pkcs8，输出格式支持 pem、der\n\nconsole.log("rsa 公钥（pkcs1、pem）：\\n\\n", publickey);\nconsole.log("rsa 私钥（pkcs8、pem）：\\n\\n", privatekey);\n\n\n/*\nrsa 公钥（pkcs1、pem）：\n\n -----begin rsa public key-----\nmigjaogbalbixnoowwhdvazaicfo5ub2dbsea2u9lpql0drzsnqdurps/ehh0eqc\nqlbbjndqa0quwap5in/q4sjc2lcf7ob8mezz1p+d/2m2vy1eunxd8xbmbdbynavg\nk6yldct3jep1yhzjh9jnvgc9jsbfsjc9puszbhfdzwy6xlvw9of7agmbaae=\n-----end rsa public key-----\n\nrsa 私钥（pkcs8、pem）：\n\n -----begin private key-----\nmiiceaibadanbgkqhkig9w0baqefaascamiwggjeageaaogbalbixnoowwhdvaza\nicfo5ub2dbsea2u9lpql0drzsnqdurps/ehh0eqcqlbbjndqa0quwap5in/q4sjc\n2lcf7ob8mezz1p+d/2m2vy1eunxd8xbmbdbynavgk6yldct3jep1yhzjh9jnvgc9\njsbfsjc9puszbhfdzwy6xlvw9of7agmbaaecgyeagfs3nzpm/hjzdvu6uif+ofis\nbg+7utas5dzx2/yknhishioaom3jipbfvjoltfnqe/z7/ktxvjnrqhkoesorf6ee\nzg64jamoxcb3aej6jabzuck5dnbkcbv3qopi6frwrznctdypuge6zxffxehetglq\nhyj4xgddfnxg9oxotkecqqdnpuujoycsfitc+udnmxccv5lxk0wyicysl1+yep8o\nymz3lyutyr0p1jomexdg2vpq3bvx4qdnrgv9ms79di+xakeawtfv2u3egkuacdnv\nvkwgmsvzc7ytlpdiw91wyvmaqxqfnbovdobxcuhcz1o8mzpmgjvwskjldvi73ko5\ns5c66wjbamvikevqrmg1o7t38nopwsk1xizzmsyntw3zeb3qxhxboqauhyskgbm4\n2dtvvu3tz4wnppiy/bnrz6m8cdh/fmecqauhx6ty4muyzq5oym446asnlz0aborl\ndql5kmfm4ulwfyfzd13kc043sbo3qbc4ogify5h74j+fqgo/e6x+arscqqctogcc\nukx8dhson+lpqqfgd9a8vctjvc7pyzzthmoubmignv+vzbpkfupaiamdvzy6j6qm\nvuqj+ab8c5soy5rb\n-----end private key-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\n\n// ✅ 安装依赖：npm install jsencrypt\n\n// ❗ 如果在 node 环境中使用，会遇到报错 window is not defined，处理方法：\n//    1.在当前 js 文件顶部添加代码：window = global;\n//    2.在 \\node_modules\\jsencrypt\\bin\\jsencrypt.js 添加代码：window = global;\n// ❌ 不支持对私钥进行签名、加密\n// ❌ 密钥输出格式不支持 der、jwk、openssh，仅支持 pem\n// ❌ 公钥语法标准不支持 pkcs1，仅支持 spki\n// ❌ 私钥语法标准不支持 pkcs8，仅支持 pkcs1\n\nvar jsencrypt = require(\'jsencrypt\');\n\n\nvar crypt = new jsencrypt({\n    default_key_size: "1024",          // 密钥位数，默认 1024，即模数（modulus）的位数，常见的有 512 位、1024 位、2048 位、3072 位和 4096 位\n    default_public_exponent: "010001"  // 公钥指数，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n});\n\nvar publickey = crypt.getpublickey();    // 公钥语法标准默认 spki，输出格式默认 pem\nvar privatekey = crypt.getprivatekey();  // 私钥语法标准默认 pkcs1，输出格式默认 pem\n\nconsole.log("rsa 公钥（spki、pem）：\\n\\n", publickey);\nconsole.log("rsa 私钥（pkcs1、pem）：\\n\\n", privatekey);\n\n\n/*\nrsa 公钥（spki、pem）：\n\n-----begin public key-----\nmigema0gcsqgsib3dqebaquaa4gmadcbiakbggq2trbepdrg26jrxmbxxthgbufn\nc2yw0biixuf3bpzpx65tq5vgiooongywl3wihzlacpvww4gto+nk2elcwin9fldb\nvxtjcibvevqaagb3ceime56xfnys88pndimzecgumcfmwhpbrpkluvpf8fw4i2+m\naa3zon2rb5a2ymaxagmbaae=\n-----end public key-----\nrsa 私钥（pkcs1、pem）：\n\n-----begin rsa private key-----\nmiicwgibaakbggq2trbepdrg26jrxmbxxthgbufnc2yw0biixuf3bpzpx65tq5vg\niooongywl3wihzlacpvww4gto+nk2elcwin9fldbvxtjcibvevqaagb3ceime56x\nfnys88pndimzecgumcfmwhpbrpkluvpf8fw4i2+maa3zon2rb5a2ymaxagmbaaec\ngybd5otrq3nphyk7h72qnnapu8/bvekrgynumw5ii7b/utk3uavs22ocjb6pfng1\nemvqu62omk3y5e+vpqd/jv5i8c8n2bymrj2mexcfow9jknezyx5oldritjw+faxl\n8onllhs4nrlkiwjbdz2y/onlypamhpstmas+2loi/awsaqjbalnoljycgzcm8yoo\ncjnt+q2gbpuwufrha+x4oz9jkfvk/xtyq9grwysyyi2ibffkp362oradjhdcpjt+\n6dha/30cqqcyw8p0mrb0wtnmqlf+w7c+8cbpq4+yecnadzldnzkrshg/bgomm41p\nzvmqyfmlhhepirno0ua6pnqrdi6sx8nfakbovix1i4latxsblnjnvmlcvxbnk568\nb5yoct//r+fr4q/vxx5goquk69ppnskh/lnkv5ercduhjeij2060beprakausv2p\nrci7itfpfgt2gi8ysdfpeu0x+kdo7ngsgwwnqfrcajemx+ntgqkwhvkzy45wl7b9\ny0d8bqk1b+eikbwlakbb1wpehe97fj1qalemhjdiwljzzix1uzyrdbaubmlwhzmm\n1pxmxbw1k0vxc9jckpn7htwyvomxuydosghdg1mw\n-----end rsa private key-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n\n# golang\n\n// ✅ 无需安装依赖，官方文档：https://pkg.go.dev/crypto\n// ❌ 公钥指数不支持自定义，默认 65537（0x10001），该值是除了 1、3、5、17、257 之外的最小素数\n// ❌ 密钥输出格式不支持 jwk、openssh\n// ❌ 对私钥进行签名、加密，只支持 pkcs1 标准的私钥，不支持 pkcs8 标准的私钥\n\npackage main\n\nimport (\n    "crypto/rand"\n    "crypto/rsa"\n    "crypto/x509"\n    "encoding/pem"\n    "fmt"\n)\n\nfunc main() {\n    rsakey, err := rsa.generatekey(rand.reader, 2048)\n    if err != nil {\n        fmt.println("generate key failed:", err)\n        return\n    }\n\n    // 私钥输出格式 der，私钥语法标准支持 pkcs1 (marshalpkcs1privatekey)、pkcs8 (marshalpkcs8privatekey)\n    privatekeyder := x509.marshalpkcs1privatekey(rsakey)\n  \n    // 可选操作：使用密码加密私钥，注意，encryptpemblock 方法正在被弃用，该方法只能加密 pkcs1 标准的私钥\n    // blocktype 参数指定密钥的标头，与私钥语法标准对应：pkcs1 加密对应 "rsa private key"\n    // alg 参数指定加密算法，参见：https://pkg.go.dev/crypto/x509#pemcipher\n    password := []byte("spiderapi")\n    encryptedprivatekeypemblock, err := x509.encryptpemblock(rand.reader, "rsa private key", privatekeyder, password, x509.pemcipheraes256)\n    if err != nil {\n        fmt.println("private key encrypt failed:", err)\n        return\n    }\n    encryptedprivatekeypem := pem.encodetomemory(encryptedprivatekeypemblock)\n  \n    // 将私钥转为 pem 格式\n    // type 参数指定密钥的标头，与私钥语法标准对应：pkcs1 对应 "rsa private key"，pkcs8 对应 "private key"\n    privatekeypem := pem.encodetomemory(&pem.block{\n        type:  "rsa private key",\n        bytes: privatekeyder,\n    })\n  \n    // 公钥输出格式 der，公钥语法标准支持 pkcs1 (marshalpkcs1publickey)、spki (marshalpkixpublickey)\n    publickeypem, err := x509.marshalpkixpublickey(&rsakey.publickey)\n    if err != nil {\n        fmt.println("public key encoding failed:", err)\n        return\n    }\n  \n    // 将公钥转为 pem 格式\n    // type 参数指定密钥的标头，与公钥语法标准对应：pkcs1 对应 "rsa public key"，spki 对应 "public key"\n    publickey := pem.encodetomemory(&pem.block{\n        type:  "public key",\n        bytes: publickeypem,\n    })\n  \n    fmt.println("rsa 公钥（spki、pem）：\\n\\n", string(publickey))\n    fmt.println("rsa 私钥（pkcs1、pem）：\\n\\n", string(privatekeypem))\n    fmt.println("rsa 加密后的私钥（pkcs1、pem、aes-256-cbc）：\\n\\n", string(encryptedprivatekeypem))\n}\n\n/*\nrsa 公钥（spki、pem）：\n\n-----begin public key-----\nmiibijanbgkqhkig9w0baqefaaocaq8amiibcgkcaqea1p94ik8uuca0kq613hw0\ndy0i/dallodg4i32lkk7ewv/obe2i/qey2nz7smmy8vzejufiquavuoxfyi7rkpm\n4lvsvkkc5xcwho1319eyzkc1aylxkhjqpruxnrdwmm1racgw9nopfg/gyikhazit\nvsw7nm3o3hn26irqxfo0c7vypiaztoib9yva9yfpblnninczryekltozqhl4j/of\nc+vuxzoxl0wfjoml7axf4fwt7xsir8bpjmoec2kvfyxmmd06tfjmrzvhoeckoaob\nzlrzjhm4yzdr32clpgcazx7qwsbimo3aqmuno+lbv/vynszpymgehiidrgr7+s0f\nywidaqab\n-----end public key-----\n\nrsa 私钥（pkcs1、pem）：\n\n-----begin rsa private key-----\nmiieowibaakcaqea1p94ik8uuca0kq613hw0dy0i/dallodg4i32lkk7ewv/obe2\ni/qey2nz7smmy8vzejufiquavuoxfyi7rkpm4lvsvkkc5xcwho1319eyzkc1aylx\nkhjqpruxnrdwmm1racgw9nopfg/gyikhazitvsw7nm3o3hn26irqxfo0c7vypiaz\ntoib9yva9yfpblnninczryekltozqhl4j/ofc+vuxzoxl0wfjoml7axf4fwt7xsi\nr8bpjmoec2kvfyxmmd06tfjmrzvhoeckoaobzlrzjhm4yzdr32clpgcazx7qwsbi\nmo3aqmuno+lbv/vynszpymgehiidrgr7+s0fywidaqabaoibaqdsqhyfwkahlzvx\nkgwtg5gvbpmdv7mqqkxsnxeklert48noi+fdagtrisnivfkqlogxxlni/3edtmti\nrjqnw1jdjkts0u9to7faxy/ghadx4osntbwiezdqngdit6xryox78d3y9ucudklz\nsvxwvtosallax0esytbapevovrn+0y06x/jikhhvw1lcnc+e0lp3myrww+6f0lcj\nkd4dc5awop64pskwdxp2t8bcyk5uhljzyiskjsi+7y8kcnmn0limyjbjt8nvho1j\ns24bbfe/mwrxhuv2/1odbezpoolbm51rzt9syhhnqbh95lpdlpr5n5r5upvktodu\nx5em5ughaogbapxvhiyokjwtc2cyw2exsabp2ookkhh5bp8vberevtzmbzr9mkfr\npg0zcxlnspux9xaoexdnd+npnvwl5sr3zlezglsaezw5ragtlkq/yoxz6b7mwzce\nhpznlvsyg3dip63n4onwtcprrjyndv/ssgarrhsp4i1mv+23cqaqfvadaogbangb\nvuh8uekq6suj2mmvx63cq5kk6bejwfek6xflhote49yzorn8yjoy1dboo5bn1vcz\nnupsnt7pp0hr0bagx5pkun/dais9+y4hjpojelkkhfgjx0fxqrq2usiaaqawzlpc\nrzclr7/8zo5jezmdfxcqe43knrwowgleyyqnr9yzaogacmpcmvhuqrknrrplmae0\n9vcnqcla2akbrmfzfx1le7sentmd4sxe7gecxcltdoi/gqpiq1qb37ne+wmu+lzn\nbtlako2hhb6h21lemyakzqjxxivqgahh7ysjlpopqvng/uclovsdubrdpv0hz5lh\ni2jzv/speigb41m67k/gjlkcgyazrzzsujypjoranuoj9wc8obiljy+ydmoyly7e\n3j9rffqongt3wizljs17xojk6lsta+pcwtulzh4zvxepnewvfg/wsdqjmn6926xh\nq4wwrh6z3so6umue4y7jrdgjvfo1kqamgyekbpreivycmw/fs9oayhnd/rm3ssye\nffeeyqkbgavicbee9lrmzopwatigcrwebx13mo2sgzrkiwsy960ewlu5t17197e0\neeqj1y+itia+4j9xemu6e1hv56zy9rneoyuzsb83tb1tqtzasbtdlfh0vjzmbudf\n6vto4nst7klzjyje4a1sf2glkasrbbl0ye22pk2auwhiwca2e+os\n-----end rsa private key-----\n\nrsa 加密后的私钥（pkcs1、pem、aes-256-cbc）：\n\n-----begin rsa private key-----\nproc-type: 4,encrypted\ndek-info: aes-256-cbc,3a42d48c94f2f06b0354a04de8247917\n\n6rr+zaqxjxs3zv9gzubsp+ft1ngcjshrrlkycbexabpbwwfwe0iwg47asjipavr1\nac2nhctyq8atqbjrhdf4dshgywpljzzdq7x+g3fmvjpljmglalhm2ls+in+ofos+\nbp9dwcsvdvtqeochqtimxs98bb6pr49fdjmqmma8pm2u73firo8apvtdwqd/ihib\nneq6+zvuiqp+speifyle0d1q1adu/zavqmt21bdhz56ccf++6unxk+bhyvgj1wx0\nlymzs8yrvhwdpk19i8yocemfzss929jhcisrvwyomxsvdwqp6h2ig4tu2+5mvdo1\npbr4brlkjfco3ixhbjmw+ysnonb/dnkknd4eabvmuoc1a/snz3rjqr2kl5r9koci\nivzh7hpphtgmw9gy3pbysiie84hwrmpmchhx/qwg/p5b/qaqoxqb4n8uozwuicdn\nw/i8c/k6ywondykiuqjjug4kmwtdaqkyaccebi/i4p9xgwzvq7mkqsqw0k9seboz\nq7zumjjfbtaln/n3ckyutewqoztglvjk/rzkfy99rsmum//hx+s8xciugs2p8a0f\nhmripgfg3xqsw5el4yknds216hemmtuwfrghn5d4uedihmrf5j9abr2t2bhkbh8m\nkcagodbrrdkbh8ju8l3nt+tsyi+dpbmfh7x1qwfznvlchazblipot9ppw4lbuzhv\nnidu7kjodav1jrrsos/+9ferpkxkcxsgj3n5w/9wfbwunchhhuyxvbvbnd48os9m\nj5jqfvdcxqne4uyya7l3kaezbp9gwx6msubiath7jqeqfero50oteznwkh4gqtrz\nul5qhesmeb+3x+jc1nu3afzbvm+y0drjj5bi/r4wk1camiowyt/iysz+oe9cnsva\ngkq5pjy4fwrljwxvdsm52sqt99v6fvwbuxmg1inrz3hblz7sgz0ik6ecz+x4zzmg\nm7/7lbdb0wwgd+k5rptdmmr9pvwcbxdfqgy8slyunuib1btlrytnptxseuizyflu\nbkwtelwhqya2h7b9idyxqq1yskajad8n6rp+pluqjiyao/rycjrwun/u/gvusfct\nyt1bytgfgqm6gl0s+rzfuag7eygg8vrukwhw9rjdaiiz//cl/y8ycjhjihmvd7gj\nne5f+dxpvhhmf/12cf/rcgy6vvgnhlchn+6dhweodcbqvbumjaznasqtk8nuwv75\nfz70fmdhljhhztmz/bqe6qp/1iklyxa5v8lzeg9er2hq2usjozlt0nrc8k/hx7xa\nfi+8mrxjsook75qkfjhnycxl33hxdclngbqanup8be45h1f3rwnq60qyc6/eve9y\nfokqqomrtjciebjn4zynudt1oclb6vdyajlmptziyde07qwwohdgwvqmrofr/hzl\n5+c3ly2atxqviywjc7bmp6lp46kmoucc9blkydi5bp9xdm2ogzgjhn9pkdhqdynh\n3zkuzf5dimvaplhhlktz1mnf7ltkprjx94atq1pdhsgx9ox0lvi10lb+mci483mq\nioiimvt9256lxj+b+q+ahxkhsg4vmlmv28/o8+qzehwcqm1cea4qzaflgzia/6tl\n-----end rsa private key-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n\n\n\n# 解析密钥\n\n关于解析 rsa 密钥\n\npkcs1 rsa 公钥和私钥格式的 asn.1 规范如下：\n\nrsapublickey ::= sequence {\n    modulus           integer,  -- n\n    publicexponent    integer   -- e\n}\n\nrsaprivatekey ::= sequence {\n    version           version,\n    modulus           integer,  -- n\n    publicexponent    integer,  -- e\n    privateexponent   integer,  -- d\n    prime1            integer,  -- p\n    prime2            integer,  -- q\n    exponent1         integer,  -- d mod (p-1)\n    exponent2         integer,  -- d mod (q-1)\n    coefficient       integer,  -- (inverse of q) mod p\n    otherprimeinfos   otherprimeinfos optional\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n为了提高效率，许多流行的加密库都使用基于中国剩余定理（crt）来优化加速解密和签名，所以 prime1、prime2 等值已预先计算并存储为私钥的一部分，如果给定一对 rsa 密钥，那么我们就可以从中解析出以下信息：\n\n * keysize：密钥的位数，即模数（modulus）的位数\n * modulus：模数 ，一个大素数的乘积，用于生成公钥和私钥，参见前面生成密钥中对模数的解释\n * publicexponent：公钥指数 ，参见前面生成密钥中对公钥指数的解释\n * privateexponent：私钥指数 ，参见前面生成密钥中对私钥指数的解释\n * prime1：rsa 算法中的第一个质数 ，用于生成私钥\n * prime2：rsa 算法中的第二个质数 ，用于生成私钥\n * exponent1：私钥指数模 的模反元素，即\n * exponent2：私钥指数模 的模反元素，即\n * coefficient：模反元素之间的系数，即\n\n----------------------------------------\n\n【实用参考资料】\n\n公钥加密标准 pkcs#1 rfc3447：https://www.rfc-editor.org/rfc/rfc3447\n使用中国剩余定理（crt）来加速 rsa 算法的计算：https://www.di-mgt.com.au/crt_rsa.html\n维基百科 using the chinese remainder algorithm：https://en.wikipedia.org/wiki/rsa_(cryptosystem)#padding_schemes\n\n\n# python\n\n\n# ✅ 安装依赖 pip install pycryptodome，官方文档：https://pycryptodome.readthedocs.io/\n\nfrom crypto.publickey import rsa\n\n\n# 注意 """ 之后要紧跟着密钥标头，如果换行可能会因为无法解析导致报错：valueerror: rsa key format is not supported\n# spki 标准 pem 格式的公钥\npublic_key_pem = """-----begin public key-----\nmigfma0gcsqgsib3dqebaquaa4gnadcbiqkbgqcl7hwuxcoh9i/bud7dplyxhoec\nd82fjv1wjkadhmilcxdljlvkuebqfwuitpelf3rlhs+3+xnyfgiz7ppphxv1pey5\njrht8zw8inrnrwldecyx/q+etpspqimvilf0rbhtnogvpb41uhkf24wgh4q7+fan\nw6cbvkhfn+fuitsgfqidaqab\n-----end public key-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pem = """-----begin rsa private key-----\nmiicxgibaakbgqcl7hwuxcoh9i/bud7dplyxhoecd82fjv1wjkadhmilcxdljlvk\nuebqfwuitpelf3rlhs+3+xnyfgiz7ppphxv1pey5jrht8zw8inrnrwldecyx/q+e\ntpspqimvilf0rbhtnogvpb41uhkf24wgh4q7+fanw6cbvkhfn+fuitsgfqidaqab\naogbaksmc1kmfoqjcizh1gdjstpnv/l9ysqnwrma+pbe4chnpzcpktnbgfcfnnwh\ncjljgupfyvzbs1szkcul/b1ybr3uabww5g0uzjo61wyciufnqa1/lu3jyeylesxb\nefoikui8ce0scpt01+6sr77ea0vtua+0ak7oi4evelfpn0qbakea8svkxg6sulfl\n9tjuh2b1xdwmxqfw7joohaylcbnjmlgqmhhuqvtw/t4oxtqh7lbdmp977zdnkmdt\nl8s7zahhsqjbalagofkbnnh4fzbqtxyweu6+d0zhvhiaioh0pdbdoio9vkalrgwy\nvv6ysi3nujjbjz1p7g3zb/zlia3vh9ieqo0cqqcdlovmvbizo/vjx7wivf4y5dhb\nz/m/qbmpatr8eg+yu8mmcd0oi06mritppgs8rtahh26ubehb6z6wxc+hn2ohakea\nr2gmortoybzvmmeftiwk/mmtldxidmxfkhr39gghmsic7r6tf4ebiu2raepwicxw\nasvos+pnrfs0pavd/msheqjaypxilxzi7hjt89qne6cgpxqqzf0sfx0fer9ajaj1\ng2c+b9ggz+nou4ne4wxjovuwzuuch7yqn3xoxeqt4/xacw==\n-----end rsa private key-----\n"""\n\n# 解析公钥和私钥\npublic_key = rsa.importkey(public_key_pem)\nprivate_key = rsa.importkey(private_key_pem)\n\n# 获取模数（modulus），使用 16 进制字符串表示，从公钥和私钥中均可获取，且值是一样的\nmodulus = hex(public_key.n)[2:]  # 或者 private_key.n\n\n# 计算密钥的位数，即模数（modulus）的位数，16 进制转换为位数时每个字符代表 4 位\nkey_length = len(modulus) * 4\n\n# 获取公钥指数\npublic_exponent = hex(public_key.e)[2:]\n\n# 获取私钥指数\nprivate_exponent = hex(private_key.d)[2:]\n\n# 获取私钥其他参数\nprivate_prime1 = hex(private_key.p)[2:]\nprivate_prime2 = hex(private_key.q)[2:]\nprivate_exponent1 = hex(private_key.d % (private_key.p - 1))[2:]\nprivate_exponent2 = hex(private_key.d % (private_key.q - 1))[2:]\nprivate_coefficient = hex(pow(private_key.q, -1, private_key.p))[2:]\n\nprint("（16 进制）模数: ", modulus)                          # a5ec75ae5dc387f48fc1b9dedda656311ce1020fcd9f26fd5624a00386620b0b10cb24b564b9e0507f0508b4f10b17744b86cfb7f973587c68b3ecf3cf871575a5ecb98eb1d3f33c3c227acd470943782cb1fd0f844e94a94089af20b7f44411ed9ce815a5be35ba1285db8c061f8abbf9f68dc3a70154a8459fe7ee22d4867d\nprint("（16 进制）密钥 & 模数位数: ", key_length)             # 1024\nprint("（16 进制）公钥指数: ", public_exponent)               # 0x10001 (65537)\nprint("（16 进制）私钥指数: ", private_exponent)              # a4a67359267e8409722661d600c9b13a6757f97dc92427c2b99afa96c4e1c1e7a7308f2ad9db81f71f34d5a10899631aea5fcafcdbb3549990250bfc1d72051dee01b5b0e46d2ecc9a3ad7061c8ae7e7400d7f96edc9c84c8b792c5b78538892e23c09ed1208f4f4d7eeac47bec403456d500fb4024ece23812f12514f9f4a81\nprint("（16 进制）私钥 prime1: ", private_prime1)            # f12bca5c6eacb8b14bf538d41f60755c3c0cc50170ec938e840c8b71b34930b82a3211eeaaf4d6fd3e28c53421ecb6c330ff7bed90e792676d2fc4bbcc01c7b1\nprint("（16 进制）私钥 prime2: ", private_prime2)            # b02038591b34d1f8173050b71c9612eebe0f4661be12002281f4a4305da083bdbca6a54605b2bd5e98b08dcdba38c18f3d69ee0dd96ffce5880def1fd89eaa8d\nprint("（16 进制）私钥 exponent1: ", private_exponent1)      # 9d94e566bc1233a3f563c7bc22bc5e32e431dbcff33f41b30f693afc120fb2bbc326703d288b4ea6ae24e9a604bcad36a11f6e946de841eb3e96c5cf879f6a21\nprint("（16 进制）私钥 exponent2: ", private_exponent2)      # af61a63ab4e8c81cef9a6105b6258afcc9ad943c4874cc45907af7f46187312882eebead17878122ed9101e3d68825d669254eb3e3cdac5b343c0bddfe6b2111\nprint("（16 进制）私钥 coefficient: ", private_coefficient)  # 629c62971648ee1253f3d4277ba0a03d7aaa65fd2c157d05791f4025a8f583673e07d1a067e368bb89dee165e339551666eb9c87bcaa9f75e8c5e413e3fc5a0b\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n# ✅ 安装依赖 pip install cryptography，要求 python 3.7+，官方文档：https:#cryptography.io/\n\nfrom cryptography.hazmat.primitives import serialization\n\n\n# spki 标准 pem 格式的公钥\npublic_key_pem = """\n-----begin public key-----\nmigfma0gcsqgsib3dqebaquaa4gnadcbiqkbgqcl7hwuxcoh9i/bud7dplyxhoec\nd82fjv1wjkadhmilcxdljlvkuebqfwuitpelf3rlhs+3+xnyfgiz7ppphxv1pey5\njrht8zw8inrnrwldecyx/q+etpspqimvilf0rbhtnogvpb41uhkf24wgh4q7+fan\nw6cbvkhfn+fuitsgfqidaqab\n-----end public key-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pem = """\n-----begin rsa private key-----\nmiicxgibaakbgqcl7hwuxcoh9i/bud7dplyxhoecd82fjv1wjkadhmilcxdljlvk\nuebqfwuitpelf3rlhs+3+xnyfgiz7ppphxv1pey5jrht8zw8inrnrwldecyx/q+e\ntpspqimvilf0rbhtnogvpb41uhkf24wgh4q7+fanw6cbvkhfn+fuitsgfqidaqab\naogbaksmc1kmfoqjcizh1gdjstpnv/l9ysqnwrma+pbe4chnpzcpktnbgfcfnnwh\ncjljgupfyvzbs1szkcul/b1ybr3uabww5g0uzjo61wyciufnqa1/lu3jyeylesxb\nefoikui8ce0scpt01+6sr77ea0vtua+0ak7oi4evelfpn0qbakea8svkxg6sulfl\n9tjuh2b1xdwmxqfw7joohaylcbnjmlgqmhhuqvtw/t4oxtqh7lbdmp977zdnkmdt\nl8s7zahhsqjbalagofkbnnh4fzbqtxyweu6+d0zhvhiaioh0pdbdoio9vkalrgwy\nvv6ysi3nujjbjz1p7g3zb/zlia3vh9ieqo0cqqcdlovmvbizo/vjx7wivf4y5dhb\nz/m/qbmpatr8eg+yu8mmcd0oi06mritppgs8rtahh26ubehb6z6wxc+hn2ohakea\nr2gmortoybzvmmeftiwk/mmtldxidmxfkhr39gghmsic7r6tf4ebiu2raepwicxw\nasvos+pnrfs0pavd/msheqjaypxilxzi7hjt89qne6cgpxqqzf0sfx0fer9ajaj1\ng2c+b9ggz+nou4ne4wxjovuwzuuch7yqn3xoxeqt4/xacw==\n-----end rsa private key-----\n"""\n\n# 解析公钥和私钥\npublic_key = serialization.load_pem_public_key(public_key_pem.encode())\nprivate_key = serialization.load_pem_private_key(private_key_pem.encode(), password=none)\n\npublic_numbers = public_key.public_numbers()\nprivate_numbers = private_key.private_numbers()\n\n# 获取模数（modulus），使用 16 进制字符串表示，从公钥和私钥中均可获取，且值是一样的\nmodulus = hex(public_numbers.n)[2:]  # 或者 private_numbers.public_numbers.n\n\n# 计算密钥的位数，即模数（modulus）的位数，16 进制转换为位数时每个字符代表 4 位\nkey_length = len(modulus) * 4\n\n# 获取公钥指数\npublic_exponent = hex(public_numbers.e)[2:]\n\n# 获取私钥指数\nprivate_exponent = hex(private_numbers.d)[2:]\n\n# 获取私钥其他参数\nprivate_prime1 = hex(private_numbers.p)[2:]\nprivate_prime2 = hex(private_numbers.q)[2:]\nprivate_exponent1 = hex(private_numbers.dmp1)[2:]\nprivate_exponent2 = hex(private_numbers.dmq1)[2:]\nprivate_coefficient = hex(private_numbers.iqmp)[2:]\n\nprint("（16 进制）模数: ", modulus)                          # a5ec75ae5dc387f48fc1b9dedda656311ce1020fcd9f26fd5624a00386620b0b10cb24b564b9e0507f0508b4f10b17744b86cfb7f973587c68b3ecf3cf871575a5ecb98eb1d3f33c3c227acd470943782cb1fd0f844e94a94089af20b7f44411ed9ce815a5be35ba1285db8c061f8abbf9f68dc3a70154a8459fe7ee22d4867d\nprint("（16 进制）密钥 & 模数位数: ", key_length)             # 1024\nprint("（16 进制）公钥指数: ", public_exponent)               # 0x10001 (65537)\nprint("（16 进制）私钥指数: ", private_exponent)              # a4a67359267e8409722661d600c9b13a6757f97dc92427c2b99afa96c4e1c1e7a7308f2ad9db81f71f34d5a10899631aea5fcafcdbb3549990250bfc1d72051dee01b5b0e46d2ecc9a3ad7061c8ae7e7400d7f96edc9c84c8b792c5b78538892e23c09ed1208f4f4d7eeac47bec403456d500fb4024ece23812f12514f9f4a81\nprint("（16 进制）私钥 prime1: ", private_prime1)            # f12bca5c6eacb8b14bf538d41f60755c3c0cc50170ec938e840c8b71b34930b82a3211eeaaf4d6fd3e28c53421ecb6c330ff7bed90e792676d2fc4bbcc01c7b1\nprint("（16 进制）私钥 prime2: ", private_prime2)            # b02038591b34d1f8173050b71c9612eebe0f4661be12002281f4a4305da083bdbca6a54605b2bd5e98b08dcdba38c18f3d69ee0dd96ffce5880def1fd89eaa8d\nprint("（16 进制）私钥 exponent1: ", private_exponent1)      # 9d94e566bc1233a3f563c7bc22bc5e32e431dbcff33f41b30f693afc120fb2bbc326703d288b4ea6ae24e9a604bcad36a11f6e946de841eb3e96c5cf879f6a21\nprint("（16 进制）私钥 exponent2: ", private_exponent2)      # af61a63ab4e8c81cef9a6105b6258afcc9ad943c4874cc45907af7f46187312882eebead17878122ed9101e3d68825d669254eb3e3cdac5b343c0bddfe6b2111\nprint("（16 进制）私钥 coefficient: ", private_coefficient)  # 629c62971648ee1253f3d4277ba0a03d7aaa65fd2c157d05791f4025a8f583673e07d1a067e368bb89dee165e339551666eb9c87bcaa9f75e8c5e413e3fc5a0b\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n\n\n# ✅ 安装依赖 pip install rsa，官方文档：https://stuvel.eu/python-rsa-doc/\n\n# ❌ 不支持解析 spki 语法标准的公钥，只支持 pkcs1\n# ❌ 不支持解析 pkcs8 语法标准的私钥，只支持 pkcs1\n\nimport rsa\n\n\n# pkcs1 标准 pem 格式的公钥\npublic_key_pem = """\n-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pem = """\n-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n"""\n\n# 解析公钥和私钥\npublic_key = rsa.publickey.load_pkcs1(public_key_pem.encode(), \'pem\')\nprivate_key = rsa.privatekey.load_pkcs1(private_key_pem.encode(), \'pem\')\n\n# 获取模数（modulus），使用 16 进制字符串表示，从公钥和私钥中均可获取，且值是一样的\nmodulus = hex(public_key.n)[2:]  # 或者 private_key.n\n\n# 计算密钥的位数，即模数（modulus）的位数，16 进制转换为位数时每个字符代表 4 位\nkey_length = len(modulus) * 4\n\n# 获取公钥指数\npublic_exponent = hex(public_key.e)[2:]\n\n# 获取私钥指数\nprivate_exponent = hex(private_key.d)[2:]\n\n# 获取私钥其他参数\nprivate_prime1 = hex(private_key.p)[2:]\nprivate_prime2 = hex(private_key.q)[2:]\nprivate_exponent1 = hex(private_key.d % (private_key.p - 1))[2:]\nprivate_exponent2 = hex(private_key.d % (private_key.q - 1))[2:]\nprivate_coefficient = hex(pow(private_key.q, -1, private_key.p))[2:]\n\nprint("（16 进制）模数: ", modulus)                          # b2c0fda504952c6abcf527942e00f1468d87ab71cab8e52ec856e3fc148166480416efa7bc958f83a20b999b6dbcaf3aa12540d86469e57c105dab66acbd9b9c21b3e8c8c75b5477224f2572f264236bdd0f2de2c4327a4eaad7e8a637a2941081eb2ef7ae62ad4bbe6c3796de76bd1cef5b0b9c615d041d26f1dc6d1bea112b\nprint("（16 进制）密钥 & 模数位数: ", key_length)             # 1024\nprint("（16 进制）公钥指数: ", public_exponent)               # 0x10001 (65537)\nprint("（16 进制）私钥指数: ", private_exponent)              # ceae569876b404a765d40fef4541d1b7c1ed1c4e761752e6c4bdb2ddc4d7d96b6b4f19cad84215ae1daf4bec6af5bfa60aad084d2bcd458a2d6220cbc19f391521a921498bc2dbde32c84646f9f609717b995b3a05d3e614ae514fd1bbc6e493a90dc50de181beb46f76e006e1c8f2f4009917d0110495259a16156d9d3c401\nprint("（16 进制）私钥 prime1: ", private_prime1)            # b87cc2c8cc4da10aaf45526479f580d21dab0f5150d6baad1e5c6f8fff42a9f71e595038d97288dc061a6c24141bc7d3f8ca0ca2623e2e530dce480f17fdf647c6a9a0fd\nprint("（16 进制）私钥 prime2: ", private_prime2)            # f80b479533e5579a8f53e0ba1928281df7f383e7aeb2a8143fb081ce87ed089bf5a286293d31e5d2acc1979fc84fcf17e422ee131688ed7c14ad8747\nprint("（16 进制）私钥 exponent1: ", private_exponent1)      # 6ff790444bf2855db5b84de41b3ccbdd3a125aae90707245a55a967eff7e17279aecbbca74f695676bf0d7572239261359384f68b25568ca1163f3c9ed56be051be65185\nprint("（16 进制）私钥 exponent2: ", private_exponent2)      # 8ed3a7e761179947156ade072abf35c273e913b60fa12e2962b71737be8b1d9ef8651a4d9ac025af16ecee8b0203faa2ae29f2dea8e635a17222adb7\nprint("（16 进制）私钥 coefficient: ", private_coefficient)  # 6b46e0fb2928b01030eea323b6c551ce627fd50aa3a4c67aedfd137aadbf88d6356eaa39b3c127d47582eacca8f513f60eb7d318d9759c73e9a73d67b15f823a4c57415e\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n\n\n\n# javascript\n\n// ✅ 安装依赖：npm install node-forge，官方文档：https://github.com/digitalbazaar/forge\n\n// ❌ 不支持解析私钥的 prime1、prime2、exponent1、exponent2、coefficient 参数\n\nvar forge = require("node-forge");\n\n// spki 标准 pem 格式的公钥\nvar publickeypem = `\n-----begin public key-----\nmigfma0gcsqgsib3dqebaquaa4gnadcbiqkbgqcl7hwuxcoh9i/bud7dplyxhoec\nd82fjv1wjkadhmilcxdljlvkuebqfwuitpelf3rlhs+3+xnyfgiz7ppphxv1pey5\njrht8zw8inrnrwldecyx/q+etpspqimvilf0rbhtnogvpb41uhkf24wgh4q7+fan\nw6cbvkhfn+fuitsgfqidaqab\n-----end public key-----\n`\n\n// pkcs1 标准 pem 格式的私钥\nvar privatekeypem = `\n-----begin rsa private key-----\nmiicxgibaakbgqcl7hwuxcoh9i/bud7dplyxhoecd82fjv1wjkadhmilcxdljlvk\nuebqfwuitpelf3rlhs+3+xnyfgiz7ppphxv1pey5jrht8zw8inrnrwldecyx/q+e\ntpspqimvilf0rbhtnogvpb41uhkf24wgh4q7+fanw6cbvkhfn+fuitsgfqidaqab\naogbaksmc1kmfoqjcizh1gdjstpnv/l9ysqnwrma+pbe4chnpzcpktnbgfcfnnwh\ncjljgupfyvzbs1szkcul/b1ybr3uabww5g0uzjo61wyciufnqa1/lu3jyeylesxb\nefoikui8ce0scpt01+6sr77ea0vtua+0ak7oi4evelfpn0qbakea8svkxg6sulfl\n9tjuh2b1xdwmxqfw7joohaylcbnjmlgqmhhuqvtw/t4oxtqh7lbdmp977zdnkmdt\nl8s7zahhsqjbalagofkbnnh4fzbqtxyweu6+d0zhvhiaioh0pdbdoio9vkalrgwy\nvv6ysi3nujjbjz1p7g3zb/zlia3vh9ieqo0cqqcdlovmvbizo/vjx7wivf4y5dhb\nz/m/qbmpatr8eg+yu8mmcd0oi06mritppgs8rtahh26ubehb6z6wxc+hn2ohakea\nr2gmortoybzvmmeftiwk/mmtldxidmxfkhr39gghmsic7r6tf4ebiu2raepwicxw\nasvos+pnrfs0pavd/msheqjaypxilxzi7hjt89qne6cgpxqqzf0sfx0fer9ajaj1\ng2c+b9ggz+nou4ne4wxjovuwzuuch7yqn3xoxeqt4/xacw==\n-----end rsa private key-----\n`\n\n// 解析公钥和私钥\nvar publickey = forge.pki.publickeyfrompem(publickeypem);\nvar privatekey = forge.pki.privatekeyfrompem(privatekeypem);\n\n// 获取模数（modulus），使用 16 进制字符串表示，从公钥和私钥中均可获取，且值是一样的\nvar modulus = publickey.n.tostring(16); // 或者 privatekey.n.tostring(16);\n\n// 计算密钥的位数，即模数（modulus）的位数，16 进制转换为位数时每个字符代表 4 位\nvar keylength = modulus.length * 4;\n\n// 获取公钥指数\nvar publicexponent = publickey.e.tostring(16);\n\n// 获取私钥指数\nvar privateexponent = privatekey.d.tostring(16);\n\nconsole.log("（16 进制）模数: ", modulus);              // a5ec75ae5dc387f48fc1b9dedda656311ce1020fcd9f26fd5624a00386620b0b10cb24b564b9e0507f0508b4f10b17744b86cfb7f973587c68b3ecf3cf871575a5ecb98eb1d3f33c3c227acd470943782cb1fd0f844e94a94089af20b7f44411ed9ce815a5be35ba1285db8c061f8abbf9f68dc3a70154a8459fe7ee22d4867d\nconsole.log("（16 进制）密钥 & 模数位数: ", keylength);  // 1024\nconsole.log("（16 进制）公钥指数: ", publicexponent);    // 0x10001 (65537)\nconsole.log("（16 进制）私钥指数: ", privateexponent);   // a4a67359267e8409722661d600c9b13a6757f97dc92427c2b99afa96c4e1c1e7a7308f2ad9db81f71f34d5a10899631aea5fcafcdbb3549990250bfc1d72051dee01b5b0e46d2ecc9a3ad7061c8ae7e7400d7f96edc9c84c8b792c5b78538892e23c09ed1208f4f4d7eeac47bec403456d500fb4024ece23812f12514f9f4a81\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n\n\n\n# golang\n\npackage main\n\nimport (\n    "crypto/rsa"\n    "crypto/x509"\n    "encoding/pem"\n    "fmt"\n)\n\nfunc main() {\n    // spki 标准 pem 格式的公钥\n    publickeypem := `\n-----begin public key-----\nmigfma0gcsqgsib3dqebaquaa4gnadcbiqkbgqcl7hwuxcoh9i/bud7dplyxhoec\nd82fjv1wjkadhmilcxdljlvkuebqfwuitpelf3rlhs+3+xnyfgiz7ppphxv1pey5\njrht8zw8inrnrwldecyx/q+etpspqimvilf0rbhtnogvpb41uhkf24wgh4q7+fan\nw6cbvkhfn+fuitsgfqidaqab\n-----end public key-----\n`\n    // pkcs1 标准 pem 格式的私钥\n    privatekeypem := `\n-----begin rsa private key-----\nmiicxgibaakbgqcl7hwuxcoh9i/bud7dplyxhoecd82fjv1wjkadhmilcxdljlvk\nuebqfwuitpelf3rlhs+3+xnyfgiz7ppphxv1pey5jrht8zw8inrnrwldecyx/q+e\ntpspqimvilf0rbhtnogvpb41uhkf24wgh4q7+fanw6cbvkhfn+fuitsgfqidaqab\naogbaksmc1kmfoqjcizh1gdjstpnv/l9ysqnwrma+pbe4chnpzcpktnbgfcfnnwh\ncjljgupfyvzbs1szkcul/b1ybr3uabww5g0uzjo61wyciufnqa1/lu3jyeylesxb\nefoikui8ce0scpt01+6sr77ea0vtua+0ak7oi4evelfpn0qbakea8svkxg6sulfl\n9tjuh2b1xdwmxqfw7joohaylcbnjmlgqmhhuqvtw/t4oxtqh7lbdmp977zdnkmdt\nl8s7zahhsqjbalagofkbnnh4fzbqtxyweu6+d0zhvhiaioh0pdbdoio9vkalrgwy\nvv6ysi3nujjbjz1p7g3zb/zlia3vh9ieqo0cqqcdlovmvbizo/vjx7wivf4y5dhb\nz/m/qbmpatr8eg+yu8mmcd0oi06mritppgs8rtahh26ubehb6z6wxc+hn2ohakea\nr2gmortoybzvmmeftiwk/mmtldxidmxfkhr39gghmsic7r6tf4ebiu2raepwicxw\nasvos+pnrfs0pavd/msheqjaypxilxzi7hjt89qne6cgpxqqzf0sfx0fer9ajaj1\ng2c+b9ggz+nou4ne4wxjovuwzuuch7yqn3xoxeqt4/xacw==\n-----end rsa private key-----\n`\n  \n    // 解析公钥和私钥\n    publickeyblock, _ := pem.decode([]byte(publickeypem))\n    if publickeyblock == nil {\n        fmt.println("failed to decode public key")\n        return\n    }\n    publickeyinterface, err := x509.parsepkixpublickey(publickeyblock.bytes)\n    if err != nil {\n        fmt.println("failed to parse public key:", err)\n        return\n    }\n    publickey := publickeyinterface.(*rsa.publickey)\n  \n    privateblock, _ := pem.decode([]byte(privatekeypem))\n    if privateblock == nil {\n        fmt.println("failed to decode private key")\n        return\n    }\n    privatekey, err := x509.parsepkcs1privatekey(privateblock.bytes)\n    if err != nil {\n        fmt.println("failed to parse private key:", err)\n        return\n    }\n  \n    // 获取模数（modulus），使用 16 进制字符串表示，从公钥和私钥中均可获取，且值是一样的\n    modulus := fmt.sprintf("%x", publickey.n) // 或者 privatekey.n\n  \n    // 计算密钥的位数，即模数（modulus）的位数，16 进制转换为位数时每个字符代表 4 位\n    keylength := fmt.sprintf("%d", publickey.n.bitlen())\n  \n    // 获取公钥指数\n    publicexponent := fmt.sprintf("%x", publickey.e)\n  \n    // 获取私钥指数\n    privateexponent := fmt.sprintf("%x", privatekey.d)\n  \n    // 获取私钥其他参数\n    privateprime1 := fmt.sprintf("%x", privatekey.primes[0])\n    privateprime2 := fmt.sprintf("%x", privatekey.primes[1])\n    privateexponent1 := fmt.sprintf("%x", privatekey.precomputed.dp)\n    privateexponent2 := fmt.sprintf("%x", privatekey.precomputed.dq)\n    privatecoefficient := fmt.sprintf("%x", privatekey.precomputed.qinv)\n  \n    fmt.println("（16 进制）模数: ", modulus)                         // a5ec75ae5dc387f48fc1b9dedda656311ce1020fcd9f26fd5624a00386620b0b10cb24b564b9e0507f0508b4f10b17744b86cfb7f973587c68b3ecf3cf871575a5ecb98eb1d3f33c3c227acd470943782cb1fd0f844e94a94089af20b7f44411ed9ce815a5be35ba1285db8c061f8abbf9f68dc3a70154a8459fe7ee22d4867d\n    fmt.println("（16 进制）密钥 & 模数位数: ", keylength)             // 1024\n    fmt.println("（16 进制）公钥指数: ", publicexponent)              // 0x10001 (65537)\n    fmt.println("（16 进制）私钥指数: ", privateexponent)             // a4a67359267e8409722661d600c9b13a6757f97dc92427c2b99afa96c4e1c1e7a7308f2ad9db81f71f34d5a10899631aea5fcafcdbb3549990250bfc1d72051dee01b5b0e46d2ecc9a3ad7061c8ae7e7400d7f96edc9c84c8b792c5b78538892e23c09ed1208f4f4d7eeac47bec403456d500fb4024ece23812f12514f9f4a81\n    fmt.println("（16 进制）私钥 prime1: ", privateprime1)           // f12bca5c6eacb8b14bf538d41f60755c3c0cc50170ec938e840c8b71b34930b82a3211eeaaf4d6fd3e28c53421ecb6c330ff7bed90e792676d2fc4bbcc01c7b1\n    fmt.println("（16 进制）私钥 prime2: ", privateprime2)           // b02038591b34d1f8173050b71c9612eebe0f4661be12002281f4a4305da083bdbca6a54605b2bd5e98b08dcdba38c18f3d69ee0dd96ffce5880def1fd89eaa8d\n    fmt.println("（16 进制）私钥 exponent1: ", privateexponent1)     // 9d94e566bc1233a3f563c7bc22bc5e32e431dbcff33f41b30f693afc120fb2bbc326703d288b4ea6ae24e9a604bcad36a11f6e946de841eb3e96c5cf879f6a21\n    fmt.println("（16 进制）私钥 exponent2: ", privateexponent2)     // af61a63ab4e8c81cef9a6105b6258afcc9ad943c4874cc45907af7f46187312882eebead17878122ed9101e3d68825d669254eb3e3cdac5b343c0bddfe6b2111\n    fmt.println("（16 进制）私钥 coefficient: ", privatecoefficient) // 629c62971648ee1253f3d4277ba0a03d7aaa65fd2c157d05791f4025a8f583673e07d1a067e368bb89dee165e339551666eb9c87bcaa9f75e8c5e413e3fc5a0b\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n\n\n\n# 转换密钥\n\nrsa 的公钥语法标准有：pkcs1、spki，私钥的语法标准有：pkcs1、pkcs8，已知一个语法标准的秘钥，可以将其转换成另一种语法标准的秘钥，同时秘钥最终的格式 pem、der 也是可以相互转换的。\n\n\n# python\n\n\n# ✅ 安装依赖 pip install pycryptodome，官方文档：https://pycryptodome.readthedocs.io/\n\n# ❌ 密钥输出格式不支持 jwk\n# ❌ 公钥不支持从 spki 标准转为 pkcs1 标准\n\nfrom crypto.publickey import rsa\n\n\ndef pkcs1_to_spki(public_key_pkcs1, output_format="pem"):\n    # 将 pkcs1 标准的公钥转换为 spki 标准，返回 pem 或者 der 格式的公钥\n    public_key_pkcs1 = rsa.import_key(public_key_pkcs1)\n    public_key_spki = public_key_pkcs1.export_key(format=output_format.upper())\n    return public_key_spki.decode()\n\n\ndef pkcs1_to_pkcs8(private_key_pkcs1, output_format="pem"):\n    # 将 pkcs1 标准的私钥转换为 pkcs8 标准，返回 pem 或者 der 格式的公钥\n    private_key_pkcs1 = rsa.import_key(private_key_pkcs1)\n    private_key_pkcs8 = private_key_pkcs1.export_key(format=output_format.upper(), pkcs=8)\n    return private_key_pkcs8.decode()\n\n\ndef pkcs8_to_pkcs1(private_key_pkcs8, output_format="pem"):\n    # 将 pkcs8 标准的私钥转换为 pkcs1 标准，返回 pem 或者 der 格式的公钥\n    private_key_pkcs8 = rsa.import_key(private_key_pkcs8)\n    private_key_pkcs1 = private_key_pkcs8.export_key(format=output_format.upper(), pkcs=1)\n    return private_key_pkcs1.decode()\n\n\n# 注意 """ 之后要紧跟着密钥标头，如果换行可能会因为无法解析导致报错：valueerror: rsa key format is not supported\n# pkcs1 标准 pem 格式的公钥\npublic_key_pkcs1_pem = """-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n"""\n\n# 转换公钥：pkcs1 => spki\npublic_key_spki_pem = pkcs1_to_spki(public_key_pkcs1_pem, output_format="pem")\n\n# 转换私钥：pkcs1 => pkcs8\nprivate_key_pkcs8_pem = pkcs1_to_pkcs8(private_key_pkcs1_pem, output_format="pem")\n\nprint("公钥转换 pkcs1 => spki:\\n\\n", public_key_spki_pem)\nprint("\\n私钥转换 pkcs1 => pkcs8:\\n\\n", private_key_pkcs8_pem)\n\n"""\n公钥转换 pkcs1 => spki:\n\n-----begin public key-----\nmigfma0gcsqgsib3dqebaquaa4gnadcbiqkbgqcywp2lbjusarz1j5quapfgjyer\nccq45s7ivup8fifmsaqw76e8ly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpo\nymdbvhcityvy8mqja90plelemnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71sl\nngfdbb0m8dxtg+orkwidaqab\n-----end public key-----\n\n私钥转换 pkcs1 => pkcs8:\n\n-----begin private key-----\nmiicegibadanbgkqhkig9w0baqefaascamqwggjgageaaogballa/auelsxqvpun\nlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oic5mbbbyvoqelqnhkaev8ef2r\nzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q1+imn6kueihrlveuyq1lvmw3\nlt52vrzvwwucyv0ehsbx3g0b6heragmbaaecgyam6uvph2tasnzdqp70vb0bfb7r\nxodhds5ss9st3e19lra08zythcfa4dr0vsavw/pgqtce0rzuwklwigy8gforuhqs\nfji8lb3jlirkb59glxe5lbogxt5hsuuu/ru8bkk6knxq3hgb60b3bgbuhi8vqamr\nfqeqsvjzowfw2dpeaqjfalh8wsjmtaekr0vszhn1gnidqw9runa6rr5cb4//qqn3\nhllqonlyinwggmwkfbvh0/jkdkjipi5tdc5idxf99kfgqad9aj0a+athltplv5qp\nu+c6gsgohffzg+eusqgup7cbzoftcjv1ooyppthl0qzbl5/it88x5cluexai7xwu\nrydhakrv95bes/kfxbw4teqbpmvdohjarpbwckwlwpz+/34xj5rsu8p09pvna/dx\nvyi5jhnzoe9oslvoyhfj88ntvr4fg+zrhqi9ai7tp+dhf5lhfwrebyq/ncjz6ro2\nd6eukwk3fze+ix2e+guatzraja8w7o6lagp6oq4p8t6o5jwhcikttwjea0bg+yko\nsbaw7qmjtsvrzmj/1qqjpmz67f0teq2/iny1bqo5s8en1hwc6syo9rp2drftgnl1\nnhpppz1nsv+cokxxqv4=\n-----end private key-----\n"""\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n\n\n# ✅ 安装依赖 pip install cryptography，要求 python 3.7+，官方文档：https://cryptography.io/\n\n# ❌ 密钥输出格式不支持 jwk\n# ❌ 私钥不支持从 pkcs8 标准转为 pkcs1 标准\n\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.serialization import load_pem_public_key, load_pem_private_key\n\n\ndef pkcs1_to_spki(public_key_pkcs1, output_format="pem"):\n    # 将 pkcs1 标准的公钥转换为 spki 标准，返回 pem 或者 der 格式的公钥\n    if output_format.upper() == "der":\n        encoding = serialization.encoding.der\n    else:\n        encoding = serialization.encoding.pem\n    public_key_pkcs1 = load_pem_public_key(public_key_pkcs1.encode())\n    public_key_spki = public_key_pkcs1.public_bytes(\n        encoding=encoding,\n        format=serialization.publicformat.subjectpublickeyinfo\n    )\n    return public_key_spki.decode()\n\n\ndef spki_to_pkcs1(public_key_spki, output_format="pem"):\n    # 将 spki 标准的公钥转换为 pkcs1 标准，返回 pem 或者 der 格式的公钥\n    if output_format.upper() == "der":\n        encoding = serialization.encoding.der\n    else:\n        encoding = serialization.encoding.pem\n    public_key_spki = load_pem_public_key(public_key_spki.encode())\n    public_key_pkcs1 = public_key_spki.public_bytes(\n        encoding=encoding,\n        format=serialization.publicformat.pkcs1\n    )\n    return public_key_pkcs1.decode()\n\n\ndef pkcs1_to_pkcs8(private_key_pkcs1, output_format="pem"):\n    # 将 pkcs1 标准的私钥转换为 pkcs8 标准，返回 pem 或者 der 格式的公钥\n    if output_format.upper() == "der":\n        encoding = serialization.encoding.der\n    else:\n        encoding = serialization.encoding.pem\n    private_key_pkcs1 = load_pem_private_key(private_key_pkcs1.encode(), password=none)  # 可选参数 password，指定私钥的密码\n    private_key_pkcs8 = private_key_pkcs1.private_bytes(\n        encoding=encoding,\n        format=serialization.privateformat.pkcs8,\n        encryption_algorithm=serialization.noencryption()  # 可选参数 encryption_algorithm，指定私钥的加密算法\n    )\n    return private_key_pkcs8.decode()\n\n\n# spki 标准 pem 格式的公钥\npublic_key_spki_pem = """-----begin public key-----\nmigfma0gcsqgsib3dqebaquaa4gnadcbiqkbgqcl7hwuxcoh9i/bud7dplyxhoec\nd82fjv1wjkadhmilcxdljlvkuebqfwuitpelf3rlhs+3+xnyfgiz7ppphxv1pey5\njrht8zw8inrnrwldecyx/q+etpspqimvilf0rbhtnogvpb41uhkf24wgh4q7+fan\nw6cbvkhfn+fuitsgfqidaqab\n-----end public key-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """-----begin rsa private key-----\nmiicxgibaakbgqcl7hwuxcoh9i/bud7dplyxhoecd82fjv1wjkadhmilcxdljlvk\nuebqfwuitpelf3rlhs+3+xnyfgiz7ppphxv1pey5jrht8zw8inrnrwldecyx/q+e\ntpspqimvilf0rbhtnogvpb41uhkf24wgh4q7+fanw6cbvkhfn+fuitsgfqidaqab\naogbaksmc1kmfoqjcizh1gdjstpnv/l9ysqnwrma+pbe4chnpzcpktnbgfcfnnwh\ncjljgupfyvzbs1szkcul/b1ybr3uabww5g0uzjo61wyciufnqa1/lu3jyeylesxb\nefoikui8ce0scpt01+6sr77ea0vtua+0ak7oi4evelfpn0qbakea8svkxg6sulfl\n9tjuh2b1xdwmxqfw7joohaylcbnjmlgqmhhuqvtw/t4oxtqh7lbdmp977zdnkmdt\nl8s7zahhsqjbalagofkbnnh4fzbqtxyweu6+d0zhvhiaioh0pdbdoio9vkalrgwy\nvv6ysi3nujjbjz1p7g3zb/zlia3vh9ieqo0cqqcdlovmvbizo/vjx7wivf4y5dhb\nz/m/qbmpatr8eg+yu8mmcd0oi06mritppgs8rtahh26ubehb6z6wxc+hn2ohakea\nr2gmortoybzvmmeftiwk/mmtldxidmxfkhr39gghmsic7r6tf4ebiu2raepwicxw\nasvos+pnrfs0pavd/msheqjaypxilxzi7hjt89qne6cgpxqqzf0sfx0fer9ajaj1\ng2c+b9ggz+nou4ne4wxjovuwzuuch7yqn3xoxeqt4/xacw==\n-----end rsa private key-----\n"""\n\n# 转换公钥：spki => pkcs1\npublic_key_pkcs1_pem = spki_to_pkcs1(public_key_spki_pem, output_format="pem")\n\n# 转换私钥：pkcs1 => pkcs8\nprivate_key_pkcs8_pem = pkcs1_to_pkcs8(private_key_pkcs1_pem, output_format="pem")\n\nprint("公钥转换 spki => pkcs1:\\n\\n", public_key_pkcs1_pem)\nprint("私钥转换 pkcs1 => pkcs8:\\n\\n", private_key_pkcs8_pem)\n\n"""\n公钥转换 spki => pkcs1:\n\n -----begin rsa public key-----\nmigjaogbakxsda5dw4f0j8g53t2mvjec4qipzz8m/vykoaogygslemsktws54fb/\nbqi08qsxdeugz7f5c1h8alps88+hfxwl7lmosdpzpdwies1hcun4llh9d4rolkla\nia8gt/reee2c6bwlvjw6eoxbjayfirv59o3dpwfuqewf5+4i1iz9agmbaae=\n-----end rsa public key-----\n\n私钥转换 pkcs1 => pkcs8:\n\n -----begin private key-----\nmiiceaibadanbgkqhkig9w0baqefaascamiwggjeageaaogbakxsda5dw4f0j8g5\n3t2mvjec4qipzz8m/vykoaogygslemsktws54fb/bqi08qsxdeugz7f5c1h8alps\n88+hfxwl7lmosdpzpdwies1hcun4llh9d4rolklaia8gt/reee2c6bwlvjw6eoxb\njayfirv59o3dpwfuqewf5+4i1iz9agmbaaecgyeapkzzwsz+halyjmhwammxomdx\n+x3jjcfcuzr6lsthweenmi8q2dub9x801aeimwma6l/k/nuzvjmqjqv8hxifhe4b\ntbdkbs7mmjrxbhyk5+dadx+w7cnitit5lft4u4is4jwj7rii9ptx7qxhvsqdrw1q\nd7qcts4jgs8suu+fsoecqqdxk8pcbqy4suv1onqfyhvcpazfaxdsk46editxs0kw\nucoyee6q9nb9pijfnchstsmw/3vtkoesz20vxlvmacexakeasca4wrs00fgxmfc3\nhjys7r4prmg+egaigfskmf2gg728pqvgbbk9xpiwjc26omgppwnuddlv/owide8f\n2j6qjqjbaj2u5wa8ejoj9wphvck8xjlkmdvp8z9bsw9povwsd7k7wyzwpsiltqau\njommblytnqefbprt6ehrppbfz4efaiecqqcvyay6tojiho+ayqw2jyr8ya2upeh0\nzewqevf0yycxkiluvq0xh4ei7zeb49aijdzpju6z482swzq8c93+ayerakbingkx\nfkjuelpz1cd7oka9eqpl/swvfqv5h0alqpwdzz4h0abn42i7id7hzem5vrzm65yh\nvkqfdejf5bpj/fol\n-----end private key-----\n"""\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n\n\n\n# javascript\n\n// ✅ node.js 内置 crypto 模块，无需单独安装\n\nconst crypto = require("crypto");\n\nfunction pkcs1tospki(publickeypkcs1, outputformat="pem") {\n    // 将 pkcs1 标准的公钥转换为 spki 标准，返回 pem 或者 der 格式的公钥\n    const publickeyspki = crypto.createpublickey({ key: publickeypkcs1, type: "pkcs1" });\n    return publickeyspki.export({ type: "spki", format: outputformat.tolowercase() });\n}\n\nfunction spkitopkcs1(publickeyspki, outputformat="pem") {\n    // 将 spki 标准的公钥转换为 pkcs1 标准，返回 pem 或者 der 格式的公钥\n    const publickeypkcs1 = crypto.createpublickey({ key: publickeyspki, type: "spki" });\n    return publickeypkcs1.export({ type: "pkcs1", format: outputformat.tolowercase() });\n}\n\nfunction pkcs1topkcs8(privatekeypkcs1, outputformat="pem") {\n    // 将 pkcs1 标准的私钥转换为 pkcs8 标准，返回 pem 或者 der 格式的公钥\n    const privatekeypkcs8 = crypto.createprivatekey({ key: privatekeypkcs1, type: "pkcs1" });\n    return privatekeypkcs8.export({ type: "pkcs8", format: outputformat.tolowercase() });\n}\n\nfunction pkcs8topkcs1(privatekeypkcs8, outputformat="pem") {\n    // 将 pkcs8 标准的私钥转换为 pkcs1 标准，返回 pem 或者 der 格式的公钥\n    const privatekeypkcs1 = crypto.createprivatekey({ key: privatekeypkcs8, type: "pkcs8" });\n    return privatekeypkcs1.export({ type: "pkcs1", format: outputformat.tolowercase() });\n}\n\n\n// pkcs1 标准 pem 格式的公钥\nconst publickeypkcs1pem = `\n-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n`\n\n// pkcs1 标准 pem 格式的私钥\nconst privatekeypkcs1pem = `\n-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n`\n\n\n// 转换公钥：pkcs1 => spki\nvar publickeyspkipem = pkcs1tospki(publickeypkcs1pem, "pem")\n\n// 转换私钥：pkcs1 => pkcs8\nvar privatekeypkcs8pem = pkcs1topkcs8(privatekeypkcs1pem, "pem")\n\nconsole.log("公钥转换 pkcs1 => spki:\\n\\n", publickeyspkipem)\nconsole.log("私钥转换 pkcs1 => pkcs8:\\n\\n", privatekeypkcs8pem)\n\n\n/*\n公钥转换 pkcs1 => spki:\n\n -----begin public key-----\nmigfma0gcsqgsib3dqebaquaa4gnadcbiqkbgqcywp2lbjusarz1j5quapfgjyer\nccq45s7ivup8fifmsaqw76e8ly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpo\nymdbvhcityvy8mqja90plelemnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71sl\nngfdbb0m8dxtg+orkwidaqab\n-----end public key-----\n\n私钥转换 pkcs1 => pkcs8:\n\n -----begin private key-----\nmiicegibadanbgkqhkig9w0baqefaascamqwggjgageaaogballa/auelsxqvpun\nlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oic5mbbbyvoqelqnhkaev8ef2r\nzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q1+imn6kueihrlveuyq1lvmw3\nlt52vrzvwwucyv0ehsbx3g0b6heragmbaaecgyam6uvph2tasnzdqp70vb0bfb7r\nxodhds5ss9st3e19lra08zythcfa4dr0vsavw/pgqtce0rzuwklwigy8gforuhqs\nfji8lb3jlirkb59glxe5lbogxt5hsuuu/ru8bkk6knxq3hgb60b3bgbuhi8vqamr\nfqeqsvjzowfw2dpeaqjfalh8wsjmtaekr0vszhn1gnidqw9runa6rr5cb4//qqn3\nhllqonlyinwggmwkfbvh0/jkdkjipi5tdc5idxf99kfgqad9aj0a+athltplv5qp\nu+c6gsgohffzg+eusqgup7cbzoftcjv1ooyppthl0qzbl5/it88x5cluexai7xwu\nrydhakrv95bes/kfxbw4teqbpmvdohjarpbwckwlwpz+/34xj5rsu8p09pvna/dx\nvyi5jhnzoe9oslvoyhfj88ntvr4fg+zrhqi9ai7tp+dhf5lhfwrebyq/ncjz6ro2\nd6eukwk3fze+ix2e+guatzraja8w7o6lagp6oq4p8t6o5jwhcikttwjea0bg+yko\nsbaw7qmjtsvrzmj/1qqjpmz67f0teq2/iny1bqo5s8en1hwc6syo9rp2drftgnl1\nnhpppz1nsv+cokxxqv4=\n-----end private key-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n\n\n\n# golang\n\n// ✅ 无需安装依赖，官方文档：https://pkg.go.dev/crypto\n\npackage main\n\nimport (\n    "crypto/rsa"\n    "crypto/x509"\n    "encoding/pem"\n    "errors"\n    "fmt"\n    "strings"\n)\n\n// pkcs1tospki 将 pkcs1 标准的公钥转换为 spki 标准，返回 pem 或者 der 格式的公钥\nfunc pkcs1tospki(publickeypkcs1, outputformat string) ([]byte, error) {\n    block, _ := pem.decode([]byte(publickeypkcs1))\n    if block == nil {\n        return nil, errors.new("failed to decode pem block containing public key")\n    }\n    publickey, err := x509.parsepkcs1publickey(block.bytes)\n    if err != nil {\n        return nil, err\n    }\n  \n    publickeyspkibytes, err := x509.marshalpkixpublickey(publickey)\n    if err != nil {\n        return nil, err\n    }\n  \n    if strings.toupper(outputformat) == "der" {\n        return publickeyspkibytes, nil\n    }\n  \n    publickeyspki := &pem.block{\n        type:  "public key",\n        bytes: publickeyspkibytes,\n    }\n    return pem.encodetomemory(publickeyspki), nil\n}\n\n// spkitopkcs1 将 spki 格式的公钥转换为 pkcs1 格式\nfunc spkitopkcs1(publickeyspki, outputformat string) ([]byte, error) {\n    block, _ := pem.decode([]byte(publickeyspki))\n    if block == nil {\n        return nil, errors.new("failed to decode pem block containing public key")\n    }\n    publickey, err := x509.parsepkixpublickey(block.bytes)\n    if err != nil {\n        return nil, err\n    }\n  \n    rsapublickey, ok := publickey.(*rsa.publickey)\n    if !ok {\n        return nil, errors.new("not an rsa public key")\n    }\n    publickeypkcs1bytes := x509.marshalpkcs1publickey(rsapublickey)\n  \n    if strings.toupper(outputformat) == "der" {\n        return publickeypkcs1bytes, nil\n    }\n  \n    publickeypkcs1 := &pem.block{\n        type:  "rsa public key",\n        bytes: publickeypkcs1bytes,\n    }\n    return pem.encodetomemory(publickeypkcs1), nil\n}\n\n// pkcs1topkcs8 将 pkcs1 标准的私钥转换为 pkcs8 标准，返回 pem 或者 der 格式的公钥\nfunc pkcs1topkcs8(privatekeypkcs1, outputformat string) ([]byte, error) {\n    block, _ := pem.decode([]byte(privatekeypkcs1))\n    if block == nil {\n        return nil, errors.new("failed to decode pem block containing public key")\n    }\n    privatekey, err := x509.parsepkcs1privatekey(block.bytes)\n    if err != nil {\n        return nil, err\n    }\n  \n    privatekeypkcs8bytes, err := x509.marshalpkcs8privatekey(privatekey)\n    if err != nil {\n        return nil, err\n    }\n  \n    if strings.toupper(outputformat) == "der" {\n        return privatekeypkcs8bytes, nil\n    }\n  \n    privatekeypkcs8 := &pem.block{\n        type:  "private key",\n        bytes: privatekeypkcs8bytes,\n    }\n    return pem.encodetomemory(privatekeypkcs8), nil\n}\n\n// pkcs8topkcs1 将 pkcs8 标准的私钥转换为 pkcs1 标准，返回 pem 或者 der 格式的公钥\nfunc pkcs8topkcs1(privatekeypkcs8, outputformat string) ([]byte, error) {\n    block, _ := pem.decode([]byte(privatekeypkcs8))\n    if block == nil {\n        return nil, errors.new("failed to decode pem block containing public key")\n    }\n    privatekey, err := x509.parsepkcs8privatekey(block.bytes)\n    if err != nil {\n        return nil, err\n    }\n  \n    rsaprivatekey, ok := privatekey.(*rsa.privatekey)\n    if !ok {\n        return nil, errors.new("not an rsa public key")\n    }\n    privatekeypkcs1bytes := x509.marshalpkcs1privatekey(rsaprivatekey)\n  \n    if strings.toupper(outputformat) == "der" {\n        return privatekeypkcs1bytes, nil\n    }\n  \n    privatekeypkcs1 := &pem.block{\n        type:  "rsa private key",\n        bytes: privatekeypkcs1bytes,\n    }\n    return pem.encodetomemory(privatekeypkcs1), nil\n}\n\nfunc main() {\n    // pkcs1 标准 pem 格式的公钥\n\t  publickeypkcs1pem := `\n-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n`\n\n    // pkcs1 标准 pem 格式的私钥\n    privatekeypkcs1pem := `\n-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n`\n    // 转换公钥：pkcs1 => spki\n    publickeyspkipem, err := pkcs1tospki(publickeypkcs1pem, "pem")\n    if err != nil {\n        fmt.println("error converting public key pkcs1 to spki:", err)\n        return\n    }\n  \n    // 转换私钥：pkcs1 => pkcs8\n    privatekeypkcs8pem, err := pkcs1topkcs8(privatekeypkcs1pem, "pem")\n    if err != nil {\n        fmt.println("error converting private key pkcs1 to pkcs8:", err)\n        return\n    }\n  \n    fmt.println("公钥转换 pkcs1 => spki:\\n\\n", string(publickeyspkipem))\n    fmt.println("私钥转换 pkcs1 => pkcs8:\\n\\n", string(privatekeypkcs8pem))\n}\n\n/*\n公钥转换 pkcs1 => spki:\n\n -----begin public key-----\nmigfma0gcsqgsib3dqebaquaa4gnadcbiqkbgqcywp2lbjusarz1j5quapfgjyer\nccq45s7ivup8fifmsaqw76e8ly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpo\nymdbvhcityvy8mqja90plelemnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71sl\nngfdbb0m8dxtg+orkwidaqab\n-----end public key-----\n\n私钥转换 pkcs1 => pkcs8:\n\n -----begin private key-----\nmiicegibadanbgkqhkig9w0baqefaascamqwggjgageaaogballa/auelsxqvpun\nlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oic5mbbbyvoqelqnhkaev8ef2r\nzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q1+imn6kueihrlveuyq1lvmw3\nlt52vrzvwwucyv0ehsbx3g0b6heragmbaaecgyam6uvph2tasnzdqp70vb0bfb7r\nxodhds5ss9st3e19lra08zythcfa4dr0vsavw/pgqtce0rzuwklwigy8gforuhqs\nfji8lb3jlirkb59glxe5lbogxt5hsuuu/ru8bkk6knxq3hgb60b3bgbuhi8vqamr\nfqeqsvjzowfw2dpeaqjfalh8wsjmtaekr0vszhn1gnidqw9runa6rr5cb4//qqn3\nhllqonlyinwggmwkfbvh0/jkdkjipi5tdc5idxf99kfgqad9aj0a+athltplv5qp\nu+c6gsgohffzg+eusqgup7cbzoftcjv1ooyppthl0qzbl5/it88x5cluexai7xwu\nrydhakrv95bes/kfxbw4teqbpmvdohjarpbwckwlwpz+/34xj5rsu8p09pvna/dx\nvyi5jhnzoe9oslvoyhfj88ntvr4fg+zrhqi9ai7tp+dhf5lhfwrebyq/ncjz6ro2\nd6eukwk3fze+ix2e+guatzraja8w7o6lagp6oq4p8t6o5jwhcikttwjea0bg+yko\nsbaw7qmjtsvrzmj/1qqjpmz67f0teq2/iny1bqo5s8en1hwc6syo9rp2drftgnl1\nnhpppz1nsv+cokxxqv4=\n-----end private key-----\n*/\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n\n\n\n# 加密解密\n\n关于加密解密\n\n在 rsa 加密解密操作中，我们需要注意的是填充方式（padding），最常见的分为以下四种：\n\n * rsa_no_padding: 不使用填充方案；\n * rsa_pkcs1_padding: 最常见，使用 pkcs#1 v1.5 填充方案；\n * rsa_pkcs1_oaep_padding: oaep (optimal asymmetric encryption padding)，最优非对称加密填充，在 pkcs#1 v2 中标准化；\n * rsa_pkcs1_pss_padding: pss (probabilistic signature scheme)，概率签名方案，在 pkcs#1 v2.1 中标准化。\n\n----------------------------------------\n\n【实用参考资料】\n\npadding 维基百科：https://en.wikipedia.org/wiki/padding_(cryptography)\nrsa padding 维基百科：https://en.wikipedia.org/wiki/rsa_(cryptosystem)#padding\n聊聊密码学中的padding：https://cloud.tencent.com/developer/article/1499219\npss (probabilistic signature scheme)：https://en.wikipedia.org/wiki/probabilistic_signature_scheme\noaep (optimal asymmetric encryption padding)：https://en.wikipedia.org/wiki/optimal_asymmetric_encryption_padding\n\n\n# python\n\n\n# ✅ 安装依赖 pip install cryptography，要求 python 3.7+，官方文档：https://cryptography.io/\n\n# ❌ padding 填充方式只支持 rsa_pkcs1_padding、rsa_pkcs1_oaep_padding，不支持 rsa_no_padding、rsa_pkcs1_pss_padding\n\n\nimport base64\nfrom cryptography.hazmat.primitives import serialization, hashes\nfrom cryptography.hazmat.primitives.asymmetric import padding\n\n\ndef set_padding(padding_scheme):\n    if padding_scheme == "rsa_pkcs1_oaep_padding":\n        return padding.oaep(\n            mgf=padding.mgf1(algorithm=hashes.sha256()),\n            algorithm=hashes.sha256(),\n            label=none\n        )\n    elif padding_scheme == "rsa_pkcs1_padding":\n        return padding.pkcs1v15()\n    else:\n        raise valueerror("unsupported padding scheme")\n\n\n# pkcs1 标准 pem 格式的公钥\npublic_key_pkcs1_pem = """\n-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """\n-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n"""\n\npublic_key = serialization.load_pem_public_key(public_key_pkcs1_pem.encode())\nprivate_key = serialization.load_pem_private_key(private_key_pkcs1_pem.encode(), password=none)\n\ndata = "spiderapi.cn - 虫术"\npadding_type = set_padding("rsa_pkcs1_padding")\nresultencrypted = public_key.encrypt(data.encode(), padding_type)\nresultdecrypted = private_key.decrypt(resultencrypted, padding_type).decode()\n\nprint("rsa_pkcs1_padding 加密结果: ", base64.b64encode(resultencrypted).decode())\nprint("rsa_pkcs1_padding 解密结果: ", resultdecrypted)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n\n\n# ✅ 安装依赖 pip install pycryptodome，官方文档：https://pycryptodome.readthedocs.io/\n\n# ❌ padding 填充方式只支持 rsa_pkcs1_padding、rsa_pkcs1_oaep_padding，不支持 rsa_no_padding、rsa_pkcs1_pss_padding\n\n\nimport base64\nfrom crypto.publickey import rsa\nfrom crypto.cipher import pkcs1_v1_5  # 即 rsa_pkcs1_padding\nfrom crypto.cipher import pkcs1_oaep  # 即 rsa_pkcs1_oaep_padding\n\n\ndef rsa_decrypt(ciphertext):\n    cipher = pkcs1_v1_5.new(private_key)\n    decrypted = cipher.decrypt(ciphertext, none).decode()\n    return decrypted\n\n\ndef rsa_encrypt(plaintext):\n    cipher = pkcs1_v1_5.new(public_key)\n    encrypted = cipher.encrypt(plaintext.encode())\n    return encrypted\n\n\n# 注意 """ 之后要紧跟着密钥标头，如果换行可能会因为无法解析导致报错：valueerror: rsa key format is not supported\n# pkcs1 标准 pem 格式的公钥\npublic_key_pkcs1_pem = """-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n"""\n\npublic_key = rsa.import_key(public_key_pkcs1_pem)\nprivate_key = rsa.import_key(private_key_pkcs1_pem)\n\ndata = "spiderapi.cn - 虫术"\nresultencrypted = rsa_encrypt(data)\nresultdecrypted = rsa_decrypt(resultencrypted)\n\nprint("rsa_pkcs1_padding 加密结果: ", base64.b64encode(resultencrypted).decode())\nprint("rsa_pkcs1_padding 解密结果: ", resultdecrypted)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n# ✅ 安装依赖 pip install rsa，官方文档：https://stuvel.eu/python-rsa-doc/\n\n# ❌ padding 填充方式只支持 rsa_pkcs1_padding\n# ❌ 不支持使用 spki 语法标准的公钥和 pkcs8 语法标准的私钥\n\n\nimport rsa\nimport base64\n\n\n# pkcs1 标准 pem 格式的公钥\npublic_key_pkcs1_pem = """\n-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """\n-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n"""\n\npublic_key = rsa.publickey.load_pkcs1(public_key_pkcs1_pem.encode(), "pem")\nprivate_key = rsa.privatekey.load_pkcs1(private_key_pkcs1_pem.encode(), "pem")\n\ndata = "spiderapi.cn - 虫术"\nresultencrypted = rsa.encrypt(data.encode(), public_key)\nresultdecrypted = rsa.decrypt(resultencrypted, private_key)\n\nprint("rsa_pkcs1_padding 加密结果: ", base64.b64encode(resultencrypted).decode())\nprint("rsa_pkcs1_padding 解密结果: ", resultdecrypted.decode())\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n\n# ✅ 安装依赖 pip install pycryptodome，官方文档：https://pycryptodome.readthedocs.io/\n\n# ❌ padding 填充方式只支持 rsa_pkcs1_padding、rsa_pkcs1_oaep_padding，不支持 rsa_no_padding、rsa_pkcs1_pss_padding\n# 本例由雕虫小技二群粉丝提供，id：曹晶 eric cao🇨🇳\n\n\nimport base64\nfrom crypto.publickey import rsa\nfrom crypto.cipher import pkcs1_v1_5  # 即 rsa_pkcs1_padding\nfrom crypto.cipher import pkcs1_oaep  # 即 rsa_pkcs1_oaep_padding\n\n\n# 一次 rsa 加密对明文长度是有限制，实际上，rsa 算法本身要求加密内容也就是明文长度 m 必须 0 < m < n（模数）\n# 如果要加密一个长度大于模数 n 的明文块，就需要对明文进行分块以满足要求\n# rsa_pkcs1_padding，每次加密的明文必须比 rsa 密钥的模长至少少 11 个字节\n# rsa_pkcs1_oaep_padding，每次加密的明文必须比 rsa 密钥的模长至少少 42 个字节\n# no_padding，每次加密的明文与 rsa 的密钥的模长一样，或更短\n\n\ndef rsa_encrypt(plaintext):\n    plaintext = plaintext.encode(\'utf-8\')\n    chunk_size = public_key.size_in_bytes() - 11  # 设置每个小段的长度,加密时要减去一个长度,pkcs1_padding: 至少-11, pkcs1_oaep_padding: 至少-42\n    chunks = [plaintext[i:i + chunk_size] for i in range(0, len(plaintext), chunk_size)]\n    encrypted_chunks = [pkcs1_v1_5.new(public_key).encrypt(chunk) for chunk in chunks]\n    encrypted_data = b\'\'.join(encrypted_chunks)\n    return encrypted_data\n\n\ndef rsa_decrypt(ciphertext):\n    chunk_size = private_key.size_in_bytes()  # 设置每个小段的长度\n    chunks = [ciphertext[i:i + chunk_size] for i in range(0, len(ciphertext), chunk_size)]\n    decrypted_chunks = [pkcs1_v1_5.new(private_key).decrypt(chunk, none) for chunk in chunks]\n    decrypted_data = b\'\'.join(decrypted_chunks)\n    return decrypted_data.decode(\'utf-8\')\n\n\n# 注意 """ 之后要紧跟着密钥标头，如果换行可能会因为无法解析导致报错：valueerror: rsa key format is not supported\n# pkcs1 标准 pem 格式的公钥\npublic_key_pkcs1_pem = """-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n"""\n\n# pkcs1 标准 pem 格式的私钥\nprivate_key_pkcs1_pem = """-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n"""\n\npublic_key = rsa.import_key(public_key_pkcs1_pem)\nprivate_key = rsa.import_key(private_key_pkcs1_pem)\n\ndata = "spiderapi - 虫术 - 汇总各种爬虫逆向常用 api，涉及各种网络请求库，自动化框架，爬虫框架，hook 脚本，adb 命令等。spiderapi - insect techniques - summarize various commonly used reverse apis for web crawlers, involving various network request libraries, automation frameworks, web crawling frameworks, hook scripts, adb commands, etc."\nresultencrypted = rsa_encrypt(data)\nresultdecrypted = rsa_decrypt(resultencrypted)\n\nprint("原文长度: ", len(data))\nprint("rsa_pkcs1_oaep_padding 加密结果: %s" % base64.b64encode(resultencrypted).decode())\nprint("rsa_pkcs1_oaep_padding 解密结果: %s" % resultdecrypted)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n\n\n\n# javascript\n\n\n// ✅ node.js 内置 crypto 模块，无需单独安装，官方文档：https://nodejs.org/docs/latest/api/crypto.html\n\nvar crypto = require("crypto");\n\n\nfunction rsaencrypt(data) {\n    var bufferdata = buffer.from(data);\n    var encrypted = crypto.publicencrypt({\n        key: publickey,\n        // 支持 rsa_no_padding、rsa_pkcs1_padding、rsa_pkcs1_oaep_padding、rsa_pkcs1_pss_padding\n        padding: crypto.constants.rsa_pkcs1_padding\n    }, bufferdata);\n    return encrypted.tostring("base64");\n}\n\nfunction rsadecrypt(ciphertext) {\n    var bufferdata = buffer.from(ciphertext, "base64");\n    var decrypted = crypto.privatedecrypt({\n        key: privatekey,\n        // 支持 rsa_no_padding、rsa_pkcs1_padding、rsa_pkcs1_oaep_padding、rsa_pkcs1_pss_padding\n        padding: crypto.constants.rsa_pkcs1_padding\n    }, bufferdata);\n    return decrypted.tostring();\n}\n\n// pkcs1 标准 pem 格式的公钥\nvar publickeypkcs1pem = `\n-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n`\n\n// pkcs1 标准 pem 格式的私钥\nvar privatekeypkcs1pem = `\n-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n`\n\n// 将 pem 格式的密钥转换为 crypto 可以使用的对象\nvar publickey = crypto.createpublickey(publickeypkcs1pem);\nvar privatekey = crypto.createprivatekey(privatekeypkcs1pem);\n\n// rsa 加解密，填充方式使用 rsa_pkcs1_padding，其他可选 rsa_no_padding、rsa_pkcs1_oaep_padding、rsa_pkcs1_pss_padding\nvar data = "spiderapi.cn - 虫术";\nvar resultencrypted = rsaencrypt(data);\nvar resultdecrypted = rsadecrypt(resultencrypted);\n\nconsole.log("rsa_pkcs1_padding 加密结果: ", resultencrypted)\nconsole.log("rsa_pkcs1_padding 解密结果: ", resultdecrypted)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n\n\n// ✅ 安装依赖：npm install node-rsa，官方文档：https://github.com/rzcoder/node-rsa\n\n// ❓ 注意：截止 2024.03，该库中公钥语法标准支持 pkcs8，但实际上不存在这种说法，具有争议，正确应该是 spki，参见：https://github.com/rzcoder/node-rsa/issues/208\n// ❌  padding 填充方式只支持 rsa_pkcs1_padding、rsa_pkcs1_oaep_padding，不支持 rsa_no_padding、rsa_pkcs1_pss_padding\n\nvar nodersa = require("node-rsa");\n\n\n// pkcs1 标准 pem 格式的公钥\nvar publickeypkcs1pem = `\n-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n`\n\n// pkcs1 标准 pem 格式的私钥\nvar privatekeypkcs1pem = `\n-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n`\n\nvar key = new nodersa();\nkey.setoptions({ encryptionscheme: "pkcs1" });  // 设置填充模式，默认 pkcs1_oaep\n\n// 导入密钥，传入参数格式：语法标准-密钥类型-输出格式，即 scheme-[key_type]-[output_type]\nkey.importkey(publickeypkcs1pem, "pkcs1-public-pem");   // 公钥语法标准支持 pkcs1、pkcs8，输出格式支持 pem、der\nkey.importkey(privatekeypkcs1pem, "pkcs1-private-pem"); // 私钥语法标准支持 pkcs1、pkcs8，输出格式支持 pem、der\n\n// rsa 加解密\nvar data = "spiderapi.cn - 虫术";\nvar resultencrypted =  key.encrypt(data, "base64");\nvar resultdecrypted = key.decrypt(resultencrypted, "utf8");\n\nconsole.log("rsa_pkcs1_padding 加密结果: ", resultencrypted)\nconsole.log("rsa_pkcs1_padding 解密结果: ", resultdecrypted)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\n\n// ✅ 安装依赖：npm install jsencrypt，官方文档：https://github.com/travist/jsencrypt\n\n// ❗ 如果在 node 环境中使用，会遇到报错 window is not defined，处理方法：\n//    1.在当前 js 文件顶部添加代码：window = global;\n//    2.在 \\node_modules\\jsencrypt\\bin\\jsencrypt.js 添加代码：window = global;\n// ❌ padding 填充方式默认为 rsa_pkcs1_padding，不支持其他填充方式\n\n\nvar jsencrypt = require("jsencrypt");\n\n\n// pkcs1 标准 pem 格式的公钥\nvar publickeypkcs1pem = `\n-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n`\n\n// pkcs1 标准 pem 格式的私钥\nvar privatekeypkcs1pem = `\n-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n`\n\nvar encryptor = new jsencrypt();\nencryptor.setpublickey(publickeypkcs1pem);\nencryptor.setprivatekey(privatekeypkcs1pem);\n\n// rsa 加解密，填充方式只支持 rsa_pkcs1_padding\nvar data = "spiderapi.cn - 虫术";\nvar resultencrypted = encryptor.encrypt(data);\nvar resultdecrypted = encryptor.decrypt(resultencrypted);\n\nconsole.log("rsa_pkcs1_padding 加密结果: ", resultencrypted)\nconsole.log("rsa_pkcs1_padding 解密结果: ", resultdecrypted)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n\n\n\n# golang\n\n// ✅ 无需安装依赖，官方文档：https://pkg.go.dev/crypto\n\n// ❌ padding 填充方式只支持 rsa_pkcs1_padding、rsa_pkcs1_oaep_padding，不支持 rsa_no_padding、rsa_pkcs1_pss_padding\n\n\npackage main\n\nimport (\n    "crypto/rand"\n    "crypto/rsa"\n    "crypto/x509"\n    "encoding/base64"\n    "encoding/pem"\n    "fmt"\n)\n\nfunc main() {\n\t  // pkcs1 标准 pem 格式的公钥\n\t  publickeypkcs1pem := `\n-----begin rsa public key-----\nmigjaogballa/auelsxqvpunlc4a8uanh6txyrjllshw4/wugwzibbbvp7yvj4oi\nc5mbbbyvoqelqnhkaev8ef2rzqy9m5whs+jix1tudyjpjxlyzcnr3q8t4sqyek6q\n1+imn6kueihrlveuyq1lvmw3lt52vrzvwwucyv0ehsbx3g0b6heragmbaae=\n-----end rsa public key-----\n`\n\n\t  // pkcs1 标准 pem 格式的私钥\n\t  privatekeypkcs1pem := `\n-----begin rsa private key-----\nmiicyaibaakbgqcywp2lbjusarz1j5quapfgjyerccq45s7ivup8fifmsaqw76e8\nly+doguzm228rzqhjudyzgnlfbbdq2asvzucibpoymdbvhcityvy8mqja90plele\nmnpoqtfopjeilbcb6y73rmkts75sn5bedr0c71slngfdbb0m8dxtg+orkwidaqab\naogadorlaydrqep2xud+9fqdg3we0ctnyxuubevbldxnfza2tpgcryqhwuha9l7g\nr1v6ykrqhnk81fii1iimvbnzkviakhsyvc294yyezg+fyjcxuzwzof0+yurlfp0b\nvg5jopdcun4yg+tg924abhypl0ajkx0beelswafhvtntxaecrqc4fmlize2hcq9f\numr59ydshaspuvdwuq0exg+p/0kp9x5zudjzcojcbhpsjbqbx9p4ygyiyj4uuw3o\nsa8x/fzhxqmg/qi9apglr5uz5veaj1pguhkokb3384pnrrkofd+wgc6h7qib9akg\nkt0x5dkswzefye/pf+qi7hmwio18fk2hrwjeb/eqrevyhv21ue3kgzzl3toswq6q\nchjfpvqwfv9+fyea7lvkdpavz2vw11ciosytwthpaljvamory/pj7va+brvmuyuc\npqco06fnyrezrxvq3gcqvzxcc+kttg+hlilitxc3vosdnvhlgk2awcwvfuzuiwid\n+qkukfleqoy1oxiirbccrgtg4pspklaqmo6ji7bfuc5if9uko6tgeu39e3qtv4jw\nnw6qobpbj9r1gurmqput9g630xjzdzxz6ac9z7ffgjpmv0fe\n-----end rsa private key-----\n`\n\n    publickeyblock, _ := pem.decode([]byte(publickeypkcs1pem))\n    if publickeyblock == nil {\n        panic("failed to parse pem block containing the public key")\n    }\n    publickey, err := x509.parsepkcs1publickey(publickeyblock.bytes)\n    if err != nil {\n        panic("failed to parse public key: " + err.error())\n    }\n  \n    privatekeyblock, _ := pem.decode([]byte(privatekeypkcs1pem))\n    if privatekeyblock == nil {\n        panic("failed to parse pem block containing the private key")\n    }\n    privatekey, err := x509.parsepkcs1privatekey(privatekeyblock.bytes)\n    if err != nil {\n        panic("failed to parse private key: " + err.error())\n    }\n  \n    data := "spiderapi.cn - 虫术"\n  \n    // rsa_pkcs1_padding\n    resultencrypted, err := rsa.encryptpkcs1v15(rand.reader, publickey, []byte(data))\n    // rsa_pkcs1_oaep_padding\n    // resultencrypted, err := rsa.encryptoaep(sha256.new(), rand.reader, publickey, []byte(data), nil)\n    if err != nil {\n        panic("failed to encrypt data: " + err.error())\n    }\n  \n    // rsa_pkcs1_padding\n    resultdecrypted, err := rsa.decryptpkcs1v15(rand.reader, privatekey, resultencrypted)\n    // rsa_pkcs1_oaep_padding\n    // resultdecrypted, err := rsa.decryptoaep(sha256.new(), rand.reader, privatekey, resultencrypted, nil)\n    if err != nil {\n        panic("failed to decrypt data: " + err.error())\n    }\n  \n    fmt.println("rsa_pkcs1_padding 加密结果: ", base64.stdencoding.encodetostring(resultencrypted))\n    fmt.println("rsa_pkcs1_padding 解密结果: ", string(resultdecrypted))\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n\n\n\n# 在线工具\n\n * 在线 rsa 加解密\n * 公私钥格式在线转换',charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"3DES",frontmatter:{title:"3DES",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/3des",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/10.3des.html",relativePath:"03.辅助查询/04.加密算法/10.3des.md",key:"v-4cee0f62",path:"/pages/3des/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:18},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:29},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:44},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:55}],headersStr:"Python JavaScript Golang 主要特征",content:"关于\n\n3DES 维基百科\n\n\n# Python\n\n\n# JavaScript\n\n\n# Golang\n\n\n# 主要特征",normalizedContent:"关于\n\n3des 维基百科\n\n\n# python\n\n\n# javascript\n\n\n# golang\n\n\n# 主要特征",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"RC4",frontmatter:{title:"RC4",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/rc4",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/11.rc4.html",relativePath:"03.辅助查询/04.加密算法/11.rc4.md",key:"v-2a02fb2a",path:"/pages/rc4/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:17},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:28},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:43},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:54}],headersStr:"Python JavaScript Golang 主要特征",content:"关于\n\nRC4 维基百科\n\n\n# Python\n\n\n# JavaScript\n\n\n# Golang\n\n\n# 主要特征",normalizedContent:"关于\n\nrc4 维基百科\n\n\n# python\n\n\n# javascript\n\n\n# golang\n\n\n# 主要特征",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"SM",frontmatter:{title:"SM",date:"2024-03-03T11:39:45.000Z",permalink:"/pages/sm",article:!1},regularPath:"/03.%E8%BE%85%E5%8A%A9%E6%9F%A5%E8%AF%A2/04.%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/12.sm.html",relativePath:"03.辅助查询/04.加密算法/12.sm.md",key:"v-5bfaf382",path:"/pages/sm/",headers:[{level:2,title:"Python",slug:"python",normalizedTitle:"python",charIndex:16},{level:2,title:"JavaScript",slug:"javascript",normalizedTitle:"javascript",charIndex:27},{level:2,title:"Golang",slug:"golang",normalizedTitle:"golang",charIndex:42},{level:2,title:"主要特征",slug:"主要特征",normalizedTitle:"主要特征",charIndex:53}],headersStr:"Python JavaScript Golang 主要特征",content:"关于\n\nSM 维基百科\n\n\n# Python\n\n\n# JavaScript\n\n\n# Golang\n\n\n# 主要特征",normalizedContent:"关于\n\nsm 维基百科\n\n\n# python\n\n\n# javascript\n\n\n# golang\n\n\n# 主要特征",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"aiohttp",frontmatter:{title:"aiohttp",date:"2020-05-11T13:54:40.000Z",permalink:"/net/aiohttp",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/03.aiohttp.html",relativePath:"04.网络请求/01.基本请求/01.Python/03.aiohttp.md",key:"v-c4bba97a",path:"/net/aiohttp/",headersStr:null,content:"Python aiohttp\n\naiohttp 是基于 asyncio 实现的异步 HTTP 客户端/服务端，可用于实现异步爬虫。\n\n官方文档",normalizedContent:"python aiohttp\n\naiohttp 是基于 asyncio 实现的异步 http 客户端/服务端，可用于实现异步爬虫。\n\n官方文档",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"urllib",frontmatter:{title:"urllib",date:"2020-05-11T13:54:03.000Z",permalink:"/net/urllib",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/02.urllib.html",relativePath:"04.网络请求/01.基本请求/01.Python/02.urllib.md",key:"v-4e003542",path:"/net/urllib/",headersStr:null,content:"Python urllib\n\nurllib 是 Python 内置的 HTTP 请求库，无需额外安装即可使用。\n\n官方文档\n\n⚠️注意\n\n在 Python 2 中，有 urllib 和 urllib2 两个库来实现 HTTP 请求，而在 Python 3 中，统一为 urllib。",normalizedContent:"python urllib\n\nurllib 是 python 内置的 http 请求库，无需额外安装即可使用。\n\n官方文档\n\n⚠️注意\n\n在 python 2 中，有 urllib 和 urllib2 两个库来实现 http 请求，而在 python 3 中，统一为 urllib。",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"pyhttpx",frontmatter:{title:"pyhttpx",date:"2020-05-11T13:54:56.000Z",permalink:"/net/pyhttpx",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/05.pyhttpx.html",relativePath:"04.网络请求/01.基本请求/01.Python/05.pyhttpx.md",key:"v-70467562",path:"/net/pyhttpx/",headersStr:null,content:"Python pyhttpx\n\npyhttpx 是基于 socket 开发的一个网络库，它支持 tls1.2、tls1.3、http1、http2，支持 ssl 上下文，支持自定义指纹，基本用法和 requests 并没有太大区别。\n\n点击查看 官方文档",normalizedContent:"python pyhttpx\n\npyhttpx 是基于 socket 开发的一个网络库，它支持 tls1.2、tls1.3、http1、http2，支持 ssl 上下文，支持自定义指纹，基本用法和 requests 并没有太大区别。\n\n点击查看 官方文档",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"tls_client",frontmatter:{title:"tls_client",date:"2020-05-11T13:54:56.000Z",permalink:"/net/tls_client",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/06.tls_client.html",relativePath:"04.网络请求/01.基本请求/01.Python/06.tls_client.md",key:"v-3a4bea7f",path:"/net/tls_client/",headersStr:null,content:"Python tls_client\n\nPython tls_client 是一个基于 requests 和 tls-client 的高级 HTTP 库，支持自定义指纹，内置 Chrome、Firefox、Opera、iOS、iPadOS、Android 指纹，基本用法和 requests 并没有太大区别。\n\n点击查看 官方文档",normalizedContent:"python tls_client\n\npython tls_client 是一个基于 requests 和 tls-client 的高级 http 库，支持自定义指纹，内置 chrome、firefox、opera、ios、ipados、android 指纹，基本用法和 requests 并没有太大区别。\n\n点击查看 官方文档",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"curl_cffi",frontmatter:{title:"curl_cffi",date:"2023-09-13T11:36:53.000Z",permalink:"/net/curl_cffi/",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/07.curl_cffi.html",relativePath:"04.网络请求/01.基本请求/01.Python/07.curl_cffi.md",key:"v-5ff500b2",path:"/net/curl_cffi/",headersStr:null,content:"Python curl_cffi\n\ncurl-impersonate 的 Python 绑定，基于 cffi，支持 JA3/TLS 和 http2 指纹模拟。支持 http 2.0，支持 asyncio，并且每个请求都可以换代理。\n\n点击查看 官方文档",normalizedContent:"python curl_cffi\n\ncurl-impersonate 的 python 绑定，基于 cffi，支持 ja3/tls 和 http2 指纹模拟。支持 http 2.0，支持 asyncio，并且每个请求都可以换代理。\n\n点击查看 官方文档",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"httpx",frontmatter:{title:"httpx",date:"2020-05-11T13:54:56.000Z",permalink:"/net/httpx",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/04.httpx.html",relativePath:"04.网络请求/01.基本请求/01.Python/04.httpx.md",key:"v-bdd55902",path:"/net/httpx/",headersStr:null,content:"Python httpx\n\nhttpx 被称为 Python 的下一代 HTTP 客户端，它提供同步和异步 API，并支持 HTTP/1.1 和 HTTP/2。\n\n官方文档\n\n⚠️注意\n\nhttpx 要求 Python 版本 >=3.7。",normalizedContent:"python httpx\n\nhttpx 被称为 python 的下一代 http 客户端，它提供同步和异步 api，并支持 http/1.1 和 http/2。\n\n官方文档\n\n⚠️注意\n\nhttpx 要求 python 版本 >=3.7。",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"requests_go",frontmatter:{title:"requests_go",date:"2023-09-13T11:41:45.000Z",permalink:"/net/requests_go/",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/08.requests_go.html",relativePath:"04.网络请求/01.基本请求/01.Python/08.requests_go.md",key:"v-2c345111",path:"/net/requests_go/",headers:[{level:2,title:"使用 requests-go",slug:"使用-requests-go",normalizedTitle:"使用 requests-go",charIndex:254},{level:2,title:"常见错误",slug:"常见错误",normalizedTitle:"常见错误",charIndex:2127},{level:2,title:"tls_config 指纹信息",slug:"tls-config-指纹信息",normalizedTitle:"tls_config 指纹信息",charIndex:2440},{level:2,title:"ciphers 使用",slug:"ciphers-使用",normalizedTitle:"ciphers 使用",charIndex:3407},{level:2,title:"JA3 指纹随机化",slug:"ja3-指纹随机化",normalizedTitle:"ja3 指纹随机化",charIndex:7029}],headersStr:"使用 requests-go 常见错误 tls_config 指纹信息 ciphers 使用 JA3 指纹随机化",content:'Python requests_go\n\nrequests_go 是一个支持 tls 指纹修改（如ja3）和 http2 的 http 请求库，它基于 requests（python 版） 和 requests（go 版），使用 requests 做为上层请求参数处理库，requests（go版）作为底层进行网络请求。requests_go 使用方法跟 requests 一模一样，与之唯一不同的就是多了一个 tls_config 参数，此参数是用于修改 tls 指纹信息的。\n\n点击查看 官方文档\n\n\n# 使用 requests-go\n\nrequests-go 使用方法跟 requests 一模一样，与之唯一不同的就是多了一个 tls_config 参数，此参数是用于修改tls指纹信息的。\n\ncustom_tls:\n\nimport requests_go\n\nurl = "https://tls.peet.ws/api/all"\nheaders = {\n    "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36"\n}\ntls = requests_go.tls_config.TLSConfig()\ntls.ja3 = "771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,16-18-5-27-0-13-11-43-45-35-51-23-10-65281-17513-21,29-23-24,0"\ntls.pseudo_header_order = [\n    ":method",\n    ":authority",\n    ":scheme",\n    ":path",\n]\ntls.tls_extensions.cert_compression_algo = ["brotli"]\ntls.tls_extensions.supported_signature_algorithms = [\n    "ecdsa_secp256r1_sha256",\n    "rsa_pss_rsae_sha256",\n    "rsa_pkcs1_sha256",\n    "ecdsa_secp384r1_sha384",\n    "rsa_pss_rsae_sha384",\n    "rsa_pkcs1_sha384",\n    "rsa_pss_rsae_sha512",\n    "rsa_pkcs1_sha512"\n]\ntls.tls_extensions.supported_versions = [\n    "GREASE",\n    "1.3",\n    "1.2"\n]\ntls.tls_extensions.psk_key_exchange_modes = [\n    "PskModeDHE"\n]\ntls.tls_extensions.key_share_curves = [\n    "GREASE",\n    "X25519"\n]\ntls.http2_settings.settings = {\n    "HEADER_TABLE_SIZE": 65536,\n    "ENABLE_PUSH": 0,\n    "MAX_CONCURRENT_STREAMS": 1000,\n    "INITIAL_WINDOW_SIZE": 6291456,\n    "MAX_HEADER_LIST_SIZE": 262144\n}\ntls.http2_settings.settings_order = [\n    "HEADER_TABLE_SIZE",\n    "ENABLE_PUSH",\n    "MAX_CONCURRENT_STREAMS",\n    "INITIAL_WINDOW_SIZE",\n    "MAX_HEADER_LIST_SIZE"\n]\ntls.http2_settings.connection_flow = 15663105\nresponse = requests_go.get(url=url, headers=headers, tls_config=tls)\nprint(response.url)\nprint(response.text)\nprint(response.headers)\nprint(response.cookies)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n\n\n\n# 常见错误\n\n 1. 单独设置ja3报404错误的解决方法：默认使用http2，必须搭配pseudo_header_order伪标题顺序去使用，否则会访问失败404，或force_http1强制使用http1（0.3版本会更新）。\n 2. 挂上VPN后报EOF错误的解决方法：默认requests-go跟requests一样会去读取系统环境变量中的代理，默认代理会使用https协议，需手动修改proxies的代理为http协议即可。\n\n兼容requests:\n\nimport requests_go as requests\t# 想要兼容requests改变requests_go的包名为requests即可\n\n\n1\n\n\n\n# tls_config 指纹信息\n\ntls_config指纹信息每项指纹的作用可以参考config.py的源码。\n\n如若不知，可直接使用to_tls_config函数将访问https://tls.peet.ws/api/all后的json结果转换为TLSConfig即可。\n\nimport requests_go as requests\nfrom requests_go import tls_config\n\nurl = "https://tls.peet.ws/api/all"\ntc = {\n    ...\n}   # tc is browser access https://tls.peet.ws/api/all json result\ntls_conf = tls_config.to_tls_config(tc)\nresponse = requests.get(url, tls_config=tls_conf)\nprint(response.text)\n\n# or\n\ntc = {\n\t"Ja3": "771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,0-23-65281-10-11-35-16-5-13-18-51-45-43-27-17513-21,29-23-24,0",\n}\nresponse = requests.get(url, tls_config=tc)  # default tls_config is dict class the convert TLSConfig class\n# response = requests.get(url, tls_config=tls_config.TLSConfig(config=tc))  # default tls_config is dict class the convert TLSConfig class\nprint(response.text)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n注意：不能自行设置content-length，否则会出现未知错误！\n\n\n# ciphers 使用\n\nciphers可以帮助你还原ja3中的CipherSuites部分和charles中的CipherSuites部分，可以快速的查找到自己所需的CipherSuite。\n\nfrom requests_go.tls_config import ciphers\n\nprint(ciphers.cipher_suite_to_decimal("TLS_AES_128_GCM_SHA256"))    # cipher_suite转十进制\n# 输出结果: 4865\nprint(ciphers.decimal_to_cipher_suite(4865))    # 十进制转cipher_suite\n# 输出结果: TLS_AES_128_GCM_SHA256\n\ncipher_suites = """\nTLS_GREASE 0x4a 0x4a\nTLS_AES_128_GCM_SHA256\nTLS_AES_256_GCM_SHA384\nTLS_CHACHA20_POLY1305_SHA256\nTLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\nTLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\nTLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\nTLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\nTLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\nTLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\nTLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\nTLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\nTLS_RSA_WITH_AES_128_GCM_SHA256\nTLS_RSA_WITH_AES_256_GCM_SHA384\nTLS_RSA_WITH_AES_128_CBC_SHA\nTLS_RSA_WITH_AES_256_CBC_SHA\n"""\ndecimals = ciphers.cipher_suites_to_decimals(cipher_suites)  # cipher_suite列表转十进制\nprint(decimals)\n# 输出结果: [4865, 4866, 4867, 49195, 49199, 49196, 49200, 52393, 52392, 49171, 49172, 156, 157, 47, 53]\n\nprint("-".join([str(decimal) for decimal in decimals]))\n# 输出结果: 4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53\nprint(ciphers.decimals_to_cipher_suites("-".join([str(decimal) for decimal in decimals])))   # 十进制字符串转cipher_suite列表\n# 输出结果: [\'TLS_AES_128_GCM_SHA256\', \'TLS_AES_256_GCM_SHA384\', \'TLS_CHACHA20_POLY1305_SHA256\', \'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\', \'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\', \'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\', \'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\', \'TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\', \'TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\', \'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\', \'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\', \'TLS_RSA_WITH_AES_128_GCM_SHA256\', \'TLS_RSA_WITH_AES_256_GCM_SHA384\', \'TLS_RSA_WITH_AES_128_CBC_SHA\', \'TLS_RSA_WITH_AES_256_CBC_SHA\']\nprint("\\n".join([str(decimal) for decimal in decimals]))\n# 输出结果: \n"""\n4865\n4866\n4867\n49195\n49199\n49196\n49200\n52393\n52392\n49171\n49172\n156\n157\n47\n53\n"""\nprint(ciphers.decimals_to_cipher_suites("\\n".join([str(decimal) for decimal in decimals]), split_str="\\n"))   # split_str分割字符串，默认为-\n# 输出结果: [\'TLS_AES_128_GCM_SHA256\', \'TLS_AES_256_GCM_SHA384\', \'TLS_CHACHA20_POLY1305_SHA256\', \'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\', \'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\', \'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\', \'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\', \'TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\', \'TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\', \'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\', \'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\', \'TLS_RSA_WITH_AES_128_GCM_SHA256\', \'TLS_RSA_WITH_AES_256_GCM_SHA384\', \'TLS_RSA_WITH_AES_128_CBC_SHA\', \'TLS_RSA_WITH_AES_256_CBC_SHA\']\n\ncipher_suites = ciphers.decimals_to_cipher_suites(decimals)  # 十进制列表转cipher_suite列表\nprint(cipher_suites)\n# 输出结果: [\'TLS_AES_128_GCM_SHA256\', \'TLS_AES_256_GCM_SHA384\', \'TLS_CHACHA20_POLY1305_SHA256\', \'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\', \'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\', \'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\', \'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\', \'TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\', \'TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256\', \'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA\', \'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA\', \'TLS_RSA_WITH_AES_128_GCM_SHA256\', \'TLS_RSA_WITH_AES_256_GCM_SHA384\', \'TLS_RSA_WITH_AES_128_CBC_SHA\', \'TLS_RSA_WITH_AES_256_CBC_SHA\']\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n\n# JA3 指纹随机化\n\n现在高版本浏览器都会将ja3的指纹随机化，但是其随机化原理仅仅是对extensions部分进行随机化。\n\nimport requests_go\n\nconfig = {\n    ...\n}\ntls_config = requests_go.tls_config.to_tls_config(config)\ntls_config.ja3 = requests_go.tls_config.JA3Random(tls_config.ja3)\nfor i in range(10):\n    print(tls_config.ja3)\n\n# 输出结果:\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,18-13-21-17513-43-11-0-10-45-27-51-5-65281-35-23-16,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,13-23-18-51-10-11-17513-65281-45-43-16-35-0-5-27-21,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,23-16-17513-18-0-43-10-35-21-5-51-65281-13-45-11-27,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,18-51-43-35-27-23-0-21-17513-13-45-5-11-10-65281-16,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,0-11-21-10-65281-35-16-18-51-23-13-17513-45-27-43-5,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,43-65281-17513-13-35-16-0-51-27-18-21-5-11-23-45-10,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,16-27-11-21-10-5-18-0-35-65281-45-51-13-43-23-17513,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,43-23-21-17513-35-27-0-18-11-5-65281-45-10-16-13-51,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,5-45-65281-43-17513-11-0-10-27-21-13-35-16-51-18-23,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,45-23-27-43-18-21-13-5-65281-11-10-16-35-17513-51-0,29-23-24,0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n',normalizedContent:'python requests_go\n\nrequests_go 是一个支持 tls 指纹修改（如ja3）和 http2 的 http 请求库，它基于 requests（python 版） 和 requests（go 版），使用 requests 做为上层请求参数处理库，requests（go版）作为底层进行网络请求。requests_go 使用方法跟 requests 一模一样，与之唯一不同的就是多了一个 tls_config 参数，此参数是用于修改 tls 指纹信息的。\n\n点击查看 官方文档\n\n\n# 使用 requests-go\n\nrequests-go 使用方法跟 requests 一模一样，与之唯一不同的就是多了一个 tls_config 参数，此参数是用于修改tls指纹信息的。\n\ncustom_tls:\n\nimport requests_go\n\nurl = "https://tls.peet.ws/api/all"\nheaders = {\n    "user-agent": "mozilla/5.0 (windows nt 10.0; win64; x64) applewebkit/537.36 (khtml, like gecko) chrome/113.0.0.0 safari/537.36"\n}\ntls = requests_go.tls_config.tlsconfig()\ntls.ja3 = "771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,16-18-5-27-0-13-11-43-45-35-51-23-10-65281-17513-21,29-23-24,0"\ntls.pseudo_header_order = [\n    ":method",\n    ":authority",\n    ":scheme",\n    ":path",\n]\ntls.tls_extensions.cert_compression_algo = ["brotli"]\ntls.tls_extensions.supported_signature_algorithms = [\n    "ecdsa_secp256r1_sha256",\n    "rsa_pss_rsae_sha256",\n    "rsa_pkcs1_sha256",\n    "ecdsa_secp384r1_sha384",\n    "rsa_pss_rsae_sha384",\n    "rsa_pkcs1_sha384",\n    "rsa_pss_rsae_sha512",\n    "rsa_pkcs1_sha512"\n]\ntls.tls_extensions.supported_versions = [\n    "grease",\n    "1.3",\n    "1.2"\n]\ntls.tls_extensions.psk_key_exchange_modes = [\n    "pskmodedhe"\n]\ntls.tls_extensions.key_share_curves = [\n    "grease",\n    "x25519"\n]\ntls.http2_settings.settings = {\n    "header_table_size": 65536,\n    "enable_push": 0,\n    "max_concurrent_streams": 1000,\n    "initial_window_size": 6291456,\n    "max_header_list_size": 262144\n}\ntls.http2_settings.settings_order = [\n    "header_table_size",\n    "enable_push",\n    "max_concurrent_streams",\n    "initial_window_size",\n    "max_header_list_size"\n]\ntls.http2_settings.connection_flow = 15663105\nresponse = requests_go.get(url=url, headers=headers, tls_config=tls)\nprint(response.url)\nprint(response.text)\nprint(response.headers)\nprint(response.cookies)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n\n\n\n# 常见错误\n\n 1. 单独设置ja3报404错误的解决方法：默认使用http2，必须搭配pseudo_header_order伪标题顺序去使用，否则会访问失败404，或force_http1强制使用http1（0.3版本会更新）。\n 2. 挂上vpn后报eof错误的解决方法：默认requests-go跟requests一样会去读取系统环境变量中的代理，默认代理会使用https协议，需手动修改proxies的代理为http协议即可。\n\n兼容requests:\n\nimport requests_go as requests\t# 想要兼容requests改变requests_go的包名为requests即可\n\n\n1\n\n\n\n# tls_config 指纹信息\n\ntls_config指纹信息每项指纹的作用可以参考config.py的源码。\n\n如若不知，可直接使用to_tls_config函数将访问https://tls.peet.ws/api/all后的json结果转换为tlsconfig即可。\n\nimport requests_go as requests\nfrom requests_go import tls_config\n\nurl = "https://tls.peet.ws/api/all"\ntc = {\n    ...\n}   # tc is browser access https://tls.peet.ws/api/all json result\ntls_conf = tls_config.to_tls_config(tc)\nresponse = requests.get(url, tls_config=tls_conf)\nprint(response.text)\n\n# or\n\ntc = {\n\t"ja3": "771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,0-23-65281-10-11-35-16-5-13-18-51-45-43-27-17513-21,29-23-24,0",\n}\nresponse = requests.get(url, tls_config=tc)  # default tls_config is dict class the convert tlsconfig class\n# response = requests.get(url, tls_config=tls_config.tlsconfig(config=tc))  # default tls_config is dict class the convert tlsconfig class\nprint(response.text)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n注意：不能自行设置content-length，否则会出现未知错误！\n\n\n# ciphers 使用\n\nciphers可以帮助你还原ja3中的ciphersuites部分和charles中的ciphersuites部分，可以快速的查找到自己所需的ciphersuite。\n\nfrom requests_go.tls_config import ciphers\n\nprint(ciphers.cipher_suite_to_decimal("tls_aes_128_gcm_sha256"))    # cipher_suite转十进制\n# 输出结果: 4865\nprint(ciphers.decimal_to_cipher_suite(4865))    # 十进制转cipher_suite\n# 输出结果: tls_aes_128_gcm_sha256\n\ncipher_suites = """\ntls_grease 0x4a 0x4a\ntls_aes_128_gcm_sha256\ntls_aes_256_gcm_sha384\ntls_chacha20_poly1305_sha256\ntls_ecdhe_ecdsa_with_aes_128_gcm_sha256\ntls_ecdhe_rsa_with_aes_128_gcm_sha256\ntls_ecdhe_ecdsa_with_aes_256_gcm_sha384\ntls_ecdhe_rsa_with_aes_256_gcm_sha384\ntls_ecdhe_ecdsa_with_chacha20_poly1305_sha256\ntls_ecdhe_rsa_with_chacha20_poly1305_sha256\ntls_ecdhe_rsa_with_aes_128_cbc_sha\ntls_ecdhe_rsa_with_aes_256_cbc_sha\ntls_rsa_with_aes_128_gcm_sha256\ntls_rsa_with_aes_256_gcm_sha384\ntls_rsa_with_aes_128_cbc_sha\ntls_rsa_with_aes_256_cbc_sha\n"""\ndecimals = ciphers.cipher_suites_to_decimals(cipher_suites)  # cipher_suite列表转十进制\nprint(decimals)\n# 输出结果: [4865, 4866, 4867, 49195, 49199, 49196, 49200, 52393, 52392, 49171, 49172, 156, 157, 47, 53]\n\nprint("-".join([str(decimal) for decimal in decimals]))\n# 输出结果: 4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53\nprint(ciphers.decimals_to_cipher_suites("-".join([str(decimal) for decimal in decimals])))   # 十进制字符串转cipher_suite列表\n# 输出结果: [\'tls_aes_128_gcm_sha256\', \'tls_aes_256_gcm_sha384\', \'tls_chacha20_poly1305_sha256\', \'tls_ecdhe_ecdsa_with_aes_128_gcm_sha256\', \'tls_ecdhe_rsa_with_aes_128_gcm_sha256\', \'tls_ecdhe_ecdsa_with_aes_256_gcm_sha384\', \'tls_ecdhe_rsa_with_aes_256_gcm_sha384\', \'tls_ecdhe_ecdsa_with_chacha20_poly1305_sha256\', \'tls_ecdhe_rsa_with_chacha20_poly1305_sha256\', \'tls_ecdhe_rsa_with_aes_128_cbc_sha\', \'tls_ecdhe_rsa_with_aes_256_cbc_sha\', \'tls_rsa_with_aes_128_gcm_sha256\', \'tls_rsa_with_aes_256_gcm_sha384\', \'tls_rsa_with_aes_128_cbc_sha\', \'tls_rsa_with_aes_256_cbc_sha\']\nprint("\\n".join([str(decimal) for decimal in decimals]))\n# 输出结果: \n"""\n4865\n4866\n4867\n49195\n49199\n49196\n49200\n52393\n52392\n49171\n49172\n156\n157\n47\n53\n"""\nprint(ciphers.decimals_to_cipher_suites("\\n".join([str(decimal) for decimal in decimals]), split_str="\\n"))   # split_str分割字符串，默认为-\n# 输出结果: [\'tls_aes_128_gcm_sha256\', \'tls_aes_256_gcm_sha384\', \'tls_chacha20_poly1305_sha256\', \'tls_ecdhe_ecdsa_with_aes_128_gcm_sha256\', \'tls_ecdhe_rsa_with_aes_128_gcm_sha256\', \'tls_ecdhe_ecdsa_with_aes_256_gcm_sha384\', \'tls_ecdhe_rsa_with_aes_256_gcm_sha384\', \'tls_ecdhe_ecdsa_with_chacha20_poly1305_sha256\', \'tls_ecdhe_rsa_with_chacha20_poly1305_sha256\', \'tls_ecdhe_rsa_with_aes_128_cbc_sha\', \'tls_ecdhe_rsa_with_aes_256_cbc_sha\', \'tls_rsa_with_aes_128_gcm_sha256\', \'tls_rsa_with_aes_256_gcm_sha384\', \'tls_rsa_with_aes_128_cbc_sha\', \'tls_rsa_with_aes_256_cbc_sha\']\n\ncipher_suites = ciphers.decimals_to_cipher_suites(decimals)  # 十进制列表转cipher_suite列表\nprint(cipher_suites)\n# 输出结果: [\'tls_aes_128_gcm_sha256\', \'tls_aes_256_gcm_sha384\', \'tls_chacha20_poly1305_sha256\', \'tls_ecdhe_ecdsa_with_aes_128_gcm_sha256\', \'tls_ecdhe_rsa_with_aes_128_gcm_sha256\', \'tls_ecdhe_ecdsa_with_aes_256_gcm_sha384\', \'tls_ecdhe_rsa_with_aes_256_gcm_sha384\', \'tls_ecdhe_ecdsa_with_chacha20_poly1305_sha256\', \'tls_ecdhe_rsa_with_chacha20_poly1305_sha256\', \'tls_ecdhe_rsa_with_aes_128_cbc_sha\', \'tls_ecdhe_rsa_with_aes_256_cbc_sha\', \'tls_rsa_with_aes_128_gcm_sha256\', \'tls_rsa_with_aes_256_gcm_sha384\', \'tls_rsa_with_aes_128_cbc_sha\', \'tls_rsa_with_aes_256_cbc_sha\']\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n\n# ja3 指纹随机化\n\n现在高版本浏览器都会将ja3的指纹随机化，但是其随机化原理仅仅是对extensions部分进行随机化。\n\nimport requests_go\n\nconfig = {\n    ...\n}\ntls_config = requests_go.tls_config.to_tls_config(config)\ntls_config.ja3 = requests_go.tls_config.ja3random(tls_config.ja3)\nfor i in range(10):\n    print(tls_config.ja3)\n\n# 输出结果:\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,18-13-21-17513-43-11-0-10-45-27-51-5-65281-35-23-16,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,13-23-18-51-10-11-17513-65281-45-43-16-35-0-5-27-21,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,23-16-17513-18-0-43-10-35-21-5-51-65281-13-45-11-27,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,18-51-43-35-27-23-0-21-17513-13-45-5-11-10-65281-16,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,0-11-21-10-65281-35-16-18-51-23-13-17513-45-27-43-5,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,43-65281-17513-13-35-16-0-51-27-18-21-5-11-23-45-10,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,16-27-11-21-10-5-18-0-35-65281-45-51-13-43-23-17513,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,43-23-21-17513-35-27-0-18-11-5-65281-45-10-16-13-51,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,5-45-65281-43-17513-11-0-10-27-21-13-35-16-51-18-23,29-23-24,0\n# 771,4865-4866-4867-49195-49199-49196-49200-52393-52392-49171-49172-156-157-47-53,45-23-27-43-18-21-13-5-65281-11-10-16-35-17513-51-0,29-23-24,0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n',charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"requests",frontmatter:{title:"requests",date:"2020-05-11T13:59:38.000Z",permalink:"/net/requests",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/01.requests.html",relativePath:"04.网络请求/01.基本请求/01.Python/01.requests.md",key:"v-693acf7f",path:"/net/requests/",headers:[{level:2,title:"安装 Requests",slug:"安装-requests",normalizedTitle:"安装 requests",charIndex:198},{level:2,title:"快速开始",slug:"快速开始",normalizedTitle:"快速开始",charIndex:353},{level:2,title:"设置代理",slug:"设置代理",normalizedTitle:"设置代理",charIndex:821},{level:2,title:"传递 URL 参数",slug:"传递-url-参数",normalizedTitle:"传递 url 参数",charIndex:1389},{level:2,title:"POST 请求",slug:"post-请求",normalizedTitle:"post 请求",charIndex:90}],headersStr:"安装 Requests 快速开始 设置代理 传递 URL 参数 POST 请求",content:"关于 Python Requests\n\nRequests 是一个优雅而简单的 Python HTTP 库，在 Requests 的帮助下，开发者能够方便快捷地完成诸如发送 GET/POST 请求、处理 Cookies 和文件上传等常见的网络任务。\n\n点击查看 官方文档\n\n⚠️注意\n\nRequests 支持 Python 3.7+，不再支持 Python 2；不支持 Http 2.0。\n\n\n# 安装 Requests\n\n通过 pip 命令安装：\n\npip install requests\n\n\n1\n\n\n通过源码安装：\n\ngit clone git://github.com/kennethreitz/requests.git\ncd requests\npip install .\n\n\n1\n2\n3\n\n\n\n# 快速开始\n\nRequests 支持 GET、POST、PUT、DELETE、HEAD、OPTIONS 等 HTTP 请求。\n\nimport requests\n\nresponse = requests.get('https://httpbin.org/get')\nresponse = requests.delete('https://httpbin.org/delete')\nresponse = requests.head('https://httpbin.org/get')\nresponse = requests.options('https://httpbin.org/get')\nresponse = requests.post('https://httpbin.org/post', data={'key': 'value'})\nresponse = requests.put('https://httpbin.org/put', data={'key': 'value'})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 设置代理\n\n不需要账号密码验证：\n\nimport requests\n\nhost = '127.0.0.1:7890'\nproxies = {\n    'http': f'http://{host}/',\n    'https': f'http://{host}/'\n}\n\nurl = 'https://httpbin.org/get'\nresponse = requests.get(url, proxies=proxies)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n需要账号密码验证：\n\nimport requests\n\nusername = 'username'\npassword = 'password'\nhost = '127.0.0.1:7890'\nproxies = {\n    'http': f'http://{username}:{password}@{host}/',\n    'https': f'http://{username}:{password}@{host}/'\n}\n\nurl = 'https://httpbin.org/get'\nresponse = requests.get(url, proxies=proxies)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 传递 URL 参数\n\nimport requests\n\nparams = {\n    'key1': 'value1',\n    'key2': ['value2', 'value3'],\n}\nurl = 'https://httpbin.org/get'\nresponse = requests.get(url, params=params)\nprint(response.url)\n\n# https://httpbin.org/get?key1=value1&key2=value2&key2=value3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# POST 请求\n\nimport requests\n\n\nresponse = requests.post('https://httpbin.org/post', data={'key': 'value'})\n\n\n1\n2\n3\n4\n",normalizedContent:"关于 python requests\n\nrequests 是一个优雅而简单的 python http 库，在 requests 的帮助下，开发者能够方便快捷地完成诸如发送 get/post 请求、处理 cookies 和文件上传等常见的网络任务。\n\n点击查看 官方文档\n\n⚠️注意\n\nrequests 支持 python 3.7+，不再支持 python 2；不支持 http 2.0。\n\n\n# 安装 requests\n\n通过 pip 命令安装：\n\npip install requests\n\n\n1\n\n\n通过源码安装：\n\ngit clone git://github.com/kennethreitz/requests.git\ncd requests\npip install .\n\n\n1\n2\n3\n\n\n\n# 快速开始\n\nrequests 支持 get、post、put、delete、head、options 等 http 请求。\n\nimport requests\n\nresponse = requests.get('https://httpbin.org/get')\nresponse = requests.delete('https://httpbin.org/delete')\nresponse = requests.head('https://httpbin.org/get')\nresponse = requests.options('https://httpbin.org/get')\nresponse = requests.post('https://httpbin.org/post', data={'key': 'value'})\nresponse = requests.put('https://httpbin.org/put', data={'key': 'value'})\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 设置代理\n\n不需要账号密码验证：\n\nimport requests\n\nhost = '127.0.0.1:7890'\nproxies = {\n    'http': f'http://{host}/',\n    'https': f'http://{host}/'\n}\n\nurl = 'https://httpbin.org/get'\nresponse = requests.get(url, proxies=proxies)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n需要账号密码验证：\n\nimport requests\n\nusername = 'username'\npassword = 'password'\nhost = '127.0.0.1:7890'\nproxies = {\n    'http': f'http://{username}:{password}@{host}/',\n    'https': f'http://{username}:{password}@{host}/'\n}\n\nurl = 'https://httpbin.org/get'\nresponse = requests.get(url, proxies=proxies)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 传递 url 参数\n\nimport requests\n\nparams = {\n    'key1': 'value1',\n    'key2': ['value2', 'value3'],\n}\nurl = 'https://httpbin.org/get'\nresponse = requests.get(url, params=params)\nprint(response.url)\n\n# https://httpbin.org/get?key1=value1&key2=value2&key2=value3\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# post 请求\n\nimport requests\n\n\nresponse = requests.post('https://httpbin.org/post', data={'key': 'value'})\n\n\n1\n2\n3\n4\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"pycurl",frontmatter:{title:"pycurl",date:"2022-03-18T15:02:52.000Z",permalink:"/net/pycurl/",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/09.pycurl.html",relativePath:"04.网络请求/01.基本请求/01.Python/09.pycurl.md",key:"v-5e26df42",path:"/net/pycurl/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"websocket",frontmatter:{title:"websocket",date:"2020-05-14T11:39:45.000Z",permalink:"/net/websocket",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/10.websocket.html",relativePath:"04.网络请求/01.基本请求/01.Python/10.websocket.md",key:"v-0b76e81b",path:"/net/websocket/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"pysocks",frontmatter:{title:"pysocks",date:"2023-09-09T03:31:34.000Z",permalink:"/net/pysocks/",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/01.%E5%9F%BA%E6%9C%AC%E8%AF%B7%E6%B1%82/01.Python/11.pysocks.html",relativePath:"04.网络请求/01.基本请求/01.Python/11.pysocks.md",key:"v-45b0651b",path:"/net/pysocks/",headersStr:null,content:"Python PySocks\n\nPySocks 允许通过 SOCKS 代理服务器发送流量。它是 SocksiPy 的现代分支，具有错误修复和额外功能。\n\n官方文档",normalizedContent:"python pysocks\n\npysocks 允许通过 socks 代理服务器发送流量。它是 socksipy 的现代分支，具有错误修复和额外功能。\n\n官方文档",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"gevent",frontmatter:{title:"gevent",date:"2023-09-13T12:11:08.000Z",permalink:"/pages/gevent/",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/02.%E5%BC%82%E6%AD%A5%E5%8D%8F%E7%A8%8B/02.gevent.html",relativePath:"04.网络请求/02.异步协程/02.gevent.md",key:"v-373a30f5",path:"/pages/gevent/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"vthread",frontmatter:{title:"vthread",date:"2023-09-13T12:21:39.000Z",permalink:"/pages/vthread/",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/03.%E5%A4%9A%E7%BA%BF%E7%A8%8B/02.vthread.html",relativePath:"04.网络请求/03.多线程/02.vthread.md",key:"v-16d17bd8",path:"/pages/vthread/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"threading",frontmatter:{title:"threading",date:"2022-03-18T15:02:52.000Z",permalink:"/pages/threading/",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/03.%E5%A4%9A%E7%BA%BF%E7%A8%8B/01.threading.html",relativePath:"04.网络请求/03.多线程/01.threading.md",key:"v-ba983518",path:"/pages/threading/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"selenium",frontmatter:{title:"selenium",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/selenium",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/01.%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6/01.selenium.html",relativePath:"05.框架接口/01.自动化框架/01.selenium.md",key:"v-1dbe5660",path:"/pages/selenium/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"multiprocessing",frontmatter:{title:"multiprocessing",date:"2022-03-18T15:02:52.000Z",permalink:"/pages/multiprocessing/",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/04.%E5%A4%9A%E8%BF%9B%E7%A8%8B/01.multiprocessing.html",relativePath:"04.网络请求/04.多进程/01.multiprocessing.md",key:"v-4c1c450f",path:"/pages/multiprocessing/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"pyppeteer",frontmatter:{title:"pyppeteer",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/pyppeteer",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/01.%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6/02.pyppeteer.html",relativePath:"05.框架接口/01.自动化框架/02.pyppeteer.md",key:"v-214f1600",path:"/pages/pyppeteer/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"asyncio",frontmatter:{title:"asyncio",date:"2022-03-18T15:02:52.000Z",permalink:"/pages/asyncio/",article:!1},regularPath:"/04.%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/02.%E5%BC%82%E6%AD%A5%E5%8D%8F%E7%A8%8B/01.asyncio.html",relativePath:"04.网络请求/02.异步协程/01.asyncio.md",key:"v-cdd670ce",path:"/pages/asyncio/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"playwright",frontmatter:{title:"playwright",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/playwright",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/01.%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6/03.playwright.html",relativePath:"05.框架接口/01.自动化框架/03.playwright.md",key:"v-3f00fb2e",path:"/pages/playwright/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"splash",frontmatter:{title:"splash",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/splash",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/01.%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6/04.splash.html",relativePath:"05.框架接口/01.自动化框架/04.splash.md",key:"v-8ef4dcd8",path:"/pages/splash/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"appium",frontmatter:{title:"appium",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/appium",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/01.%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6/06.appium.html",relativePath:"05.框架接口/01.自动化框架/06.appium.md",key:"v-6033ca34",path:"/pages/appium/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"airtest",frontmatter:{title:"airtest",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/airtest",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/01.%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6/07.airtest.html",relativePath:"05.框架接口/01.自动化框架/07.airtest.md",key:"v-66c9fcc0",path:"/pages/airtest/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"scrapy",frontmatter:{title:"scrapy",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/scrapy",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/02.%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6/01.scrapy.html",relativePath:"05.框架接口/02.爬虫框架/01.scrapy.md",key:"v-22d57f06",path:"/pages/scrapy/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"feapder",frontmatter:{title:"feapder",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/feapder",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/02.%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6/02.feapder.html",relativePath:"05.框架接口/02.爬虫框架/02.feapder.md",key:"v-7e09ac5c",path:"/pages/feapder/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"pyspider",frontmatter:{title:"pyspider",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/pyspider",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/02.%E7%88%AC%E8%99%AB%E6%A1%86%E6%9E%B6/03.pyspider.html",relativePath:"05.框架接口/02.爬虫框架/03.pyspider.md",key:"v-4fefb886",path:"/pages/pyspider/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"DrissionPage",frontmatter:{title:"DrissionPage",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/DrissionPage",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/01.%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6/05.DrissionPage.html",relativePath:"05.框架接口/01.自动化框架/05.DrissionPage.md",key:"v-2365702c",path:"/pages/DrissionPage/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"FastAPI",frontmatter:{title:"FastAPI",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/FastAPI",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/03.%E6%8E%A5%E5%8F%A3%E7%BC%96%E5%86%99/01.FastAPI.html",relativePath:"05.框架接口/03.接口编写/01.FastAPI.md",key:"v-db203518",path:"/pages/FastAPI/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"express",frontmatter:{title:"express",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/express",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/03.%E6%8E%A5%E5%8F%A3%E7%BC%96%E5%86%99/03.express.html",relativePath:"05.框架接口/03.接口编写/03.express.md",key:"v-78407e8c",path:"/pages/express/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"正则 re",frontmatter:{title:"正则 re",date:"2022-03-18T15:02:52.000Z",permalink:"/pages/re/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/01.%E8%A7%A3%E6%9E%90%E6%8F%90%E5%8F%96/01.%E6%AD%A3%E5%88%99%20re.html",relativePath:"06.数据处理/01.解析提取/01.正则 re.md",key:"v-507b5095",path:"/pages/re/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"lxml",frontmatter:{title:"lxml",date:"2022-03-18T15:02:52.000Z",permalink:"/pages/lxml/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/01.%E8%A7%A3%E6%9E%90%E6%8F%90%E5%8F%96/02.lxml.html",relativePath:"06.数据处理/01.解析提取/02.lxml.md",key:"v-edcc8098",path:"/pages/lxml/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"BeautifulSoup",frontmatter:{title:"BeautifulSoup",date:"2022-03-18T15:02:52.000Z",permalink:"/pages/BeautifulSoup/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/01.%E8%A7%A3%E6%9E%90%E6%8F%90%E5%8F%96/03.BeautifulSoup.html",relativePath:"06.数据处理/01.解析提取/03.BeautifulSoup.md",key:"v-2ed5f6c4",path:"/pages/BeautifulSoup/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"flask",frontmatter:{title:"flask",date:"2020-05-14T11:39:45.000Z",permalink:"/pages/flask",article:!1},regularPath:"/05.%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/03.%E6%8E%A5%E5%8F%A3%E7%BC%96%E5%86%99/02.flask.html",relativePath:"05.框架接口/03.接口编写/02.flask.md",key:"v-7b767870",path:"/pages/flask/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"pyquery",frontmatter:{title:"pyquery",date:"2022-03-18T15:02:52.000Z",permalink:"/pages/pyquery/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/01.%E8%A7%A3%E6%9E%90%E6%8F%90%E5%8F%96/04.pyquery.html",relativePath:"06.数据处理/01.解析提取/04.pyquery.md",key:"v-a54056d8",path:"/pages/pyquery/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"GeneralNewsExtractor",frontmatter:{title:"GeneralNewsExtractor",date:"2023-09-13T15:18:18.000Z",permalink:"/pages/6010ec/"},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/01.%E8%A7%A3%E6%9E%90%E6%8F%90%E5%8F%96/06.GeneralNewsExtractor.html",relativePath:"06.数据处理/01.解析提取/06.GeneralNewsExtractor.md",key:"v-83ed8818",path:"/pages/6010ec/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"wordcloud",frontmatter:{title:"wordcloud",date:"2023-09-13T15:21:51.000Z",permalink:"/pages/wordcloud/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/02.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/01.wordcloud.html",relativePath:"06.数据处理/02.数据分析/01.wordcloud.md",key:"v-3c65f592",path:"/pages/wordcloud/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"selectolax",frontmatter:{title:"selectolax",date:"2022-03-18T15:02:52.000Z",permalink:"/pages/selectolax/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/01.%E8%A7%A3%E6%9E%90%E6%8F%90%E5%8F%96/05.selectolax.html",relativePath:"06.数据处理/01.解析提取/05.selectolax.md",key:"v-4408e1f4",path:"/pages/selectolax/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"newspaper",frontmatter:{title:"newspaper",date:"2023-09-13T15:19:06.000Z",permalink:"/pages/25a157/"},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/01.%E8%A7%A3%E6%9E%90%E6%8F%90%E5%8F%96/07.newspaper.html",relativePath:"06.数据处理/01.解析提取/07.newspaper.md",key:"v-8712a24c",path:"/pages/25a157/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"pandas",frontmatter:{title:"pandas",date:"2023-09-13T15:21:51.000Z",permalink:"/pages/pandas/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/02.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/03.pandas.html",relativePath:"06.数据处理/02.数据分析/03.pandas.md",key:"v-6cbcd1e7",path:"/pages/pandas/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"jieba",frontmatter:{title:"jieba",date:"2023-09-13T15:22:56.000Z",permalink:"/pages/jieba/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/02.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/02.jieba.html",relativePath:"06.数据处理/02.数据分析/02.jieba.md",key:"v-5d3a4341",path:"/pages/jieba/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"NumPy",frontmatter:{title:"NumPy",date:"2023-09-13T15:22:56.000Z",permalink:"/pages/NumPy/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/02.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/04.NumPy.html",relativePath:"06.数据处理/02.数据分析/04.NumPy.md",key:"v-345fa2a9",path:"/pages/NumPy/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"SciPy",frontmatter:{title:"SciPy",date:"2023-09-13T15:22:56.000Z",permalink:"/pages/SciPy/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/02.%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/05.SciPy.html",relativePath:"06.数据处理/02.数据分析/05.SciPy.md",key:"v-392848fe",path:"/pages/SciPy/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"matplotlib",frontmatter:{title:"matplotlib",date:"2023-09-13T15:25:17.000Z",permalink:"/pages/matplotlib/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/03.%E5%88%B6%E8%A1%A8%E7%BB%98%E5%9B%BE/01.matplotlib.html",relativePath:"06.数据处理/03.制表绘图/01.matplotlib.md",key:"v-774a2ddc",path:"/pages/matplotlib/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"seaborn",frontmatter:{title:"seaborn",date:"2023-09-13T15:25:55.000Z",permalink:"/pages/seaborn/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/03.%E5%88%B6%E8%A1%A8%E7%BB%98%E5%9B%BE/04.seaborn.html",relativePath:"06.数据处理/03.制表绘图/04.seaborn.md",key:"v-cee90ec0",path:"/pages/seaborn/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"文件存储",frontmatter:{title:"文件存储",date:"2023-09-13T15:25:55.000Z",permalink:"/pages/file-storage/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/04.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/01.%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8.html",relativePath:"06.数据处理/04.数据存储/01.文件存储.md",key:"v-20b0e7c8",path:"/pages/file-storage/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"plotly",frontmatter:{title:"plotly",date:"2023-09-13T15:25:55.000Z",permalink:"/pages/plotly/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/03.%E5%88%B6%E8%A1%A8%E7%BB%98%E5%9B%BE/03.plotly.html",relativePath:"06.数据处理/03.制表绘图/03.plotly.md",key:"v-3883fc5c",path:"/pages/plotly/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"pyecharts",frontmatter:{title:"pyecharts",date:"2023-09-13T15:25:17.000Z",permalink:"/pages/pyecharts/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/03.%E5%88%B6%E8%A1%A8%E7%BB%98%E5%9B%BE/02.pyecharts.html",relativePath:"06.数据处理/03.制表绘图/02.pyecharts.md",key:"v-475ed81c",path:"/pages/pyecharts/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"MongoDB",frontmatter:{title:"MongoDB",date:"2023-09-13T15:25:55.000Z",permalink:"/pages/MongoDB/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/04.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/03.MongoDB.html",relativePath:"06.数据处理/04.数据存储/03.MongoDB.md",key:"v-6294f18c",path:"/pages/MongoDB/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"MySQL",frontmatter:{title:"MySQL",date:"2023-09-13T15:25:55.000Z",permalink:"/pages/MySQL/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/04.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/02.MySQL.html",relativePath:"06.数据处理/04.数据存储/02.MySQL.md",key:"v-1d5cb25c",path:"/pages/MySQL/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"SQLite",frontmatter:{title:"SQLite",date:"2023-09-13T15:25:55.000Z",permalink:"/pages/SQLite/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/04.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/05.SQLite.html",relativePath:"06.数据处理/04.数据存储/05.SQLite.md",key:"v-bf89294c",path:"/pages/SQLite/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"悟空风控模拟检测丨Coming Soon...",frontmatter:{title:"悟空风控模拟检测丨Coming Soon...",date:"2020-05-12T15:09:57.000Z",permalink:"/pages/goku",article:!1,sidebar:!1},regularPath:"/07.%E6%82%9F%E7%A9%BA%E9%A3%8E%E6%8E%A7/01.%E6%82%9F%E7%A9%BA%E9%A3%8E%E6%8E%A7.html",relativePath:"07.悟空风控/01.悟空风控.md",key:"v-0c8e4bc1",path:"/pages/goku/",headers:[{level:2,title:"原创全网首发风控模拟检测平台，即将到来，敬请期待！",slug:"原创全网首发风控模拟检测平台-即将到来-敬请期待",normalizedTitle:"原创全网首发风控模拟检测平台，即将到来，敬请期待！",charIndex:2}],headersStr:"原创全网首发风控模拟检测平台，即将到来，敬请期待！",content:"# 原创全网首发风控模拟检测平台，即将到来，敬请期待！\n\n",normalizedContent:"# 原创全网首发风控模拟检测平台，即将到来，敬请期待！\n\n",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"SpiderBox QA / Changelog",frontmatter:{title:"SpiderBox QA / Changelog",date:"2025-01-21T23:34:00.000Z",permalink:"/pages/spiderbox-qa-changelog",article:!1},regularPath:"/09.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/01.SpiderBox%20QA.html",relativePath:"09.更新日志/01.SpiderBox QA.md",key:"v-6892eed9",path:"/pages/spiderbox-qa-changelog/",headers:[{level:2,title:"交流群/联系站长",slug:"交流群-联系站长",normalizedTitle:"交流群/联系站长",charIndex:2},{level:2,title:"常见问题",slug:"常见问题",normalizedTitle:"常见问题",charIndex:1014},{level:2,title:"博主收录名单",slug:"博主收录名单",normalizedTitle:"博主收录名单",charIndex:3318},{level:2,title:"更新日志",slug:"更新日志",normalizedTitle:"更新日志",charIndex:16939}],headersStr:"交流群/联系站长 常见问题 博主收录名单 更新日志",content:"# 交流群/联系站长\n\n爬虫逆向QQ交流群/微信交流群/联系站长/商务合作\n\n推荐加入微信交流群，大佬更多，更加活跃！\n\n站长 QQ：2273902448\n\n有事直接说，不要问在不在\n\n站长微信：IT-BOB\n\n备注来意、备注交流群\n\n站长邮箱\n\nadmin@itbob.cn\n\nQQ 交流一群\n\n雕虫小技一群：941013658\n\nQQ 交流二群\n\n雕虫小技二群：614968141\n\n- name: 站长 QQ：2273902448\n  desc: 有事直接说，不要问在不在\n  link: https://static.wukongsec.com/public/images/info/qq_art.webp\n  bgColor: '#FCDBA0'\n  textColor: '#A05F2C'\n- name: 站长微信：IT-BOB\n  desc: 备注来意、备注交流群\n  link: https://static.wukongsec.com/public/images/info/wechat_art.webp\n  bgColor: '#bdbdbd'\n  textColor: '#2A3344'\n- name: 站长邮箱\n  desc: admin@itbob.cn\n  link: mailto:admin@itbob.cn\n  bgColor: '#e59497'\n  textColor: '#682729'\n- name: QQ 交流一群\n  desc: 雕虫小技一群：941013658\n  link: https://static.wukongsec.com/public/images/info/qq_group_spider1.jpg\n  bgColor: '#9d99f0'\n  textColor: '#3932e2'\n- name: QQ 交流二群\n  desc: 雕虫小技二群：614968141\n  link: https://static.wukongsec.com/public/images/info/qq_group_spider2.jpg\n  bgColor: '#82c98d'\n  textColor: '#276831'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 常见问题\n\nSpider 系列 / 站长的网站有哪些？\n\nSpider BOX\n\n虫盒 - 爬虫逆向资源导航站\n\nSpider API\n\n虫术 - 爬虫逆向常用 API\n\nSpider GRC\n\n虫规 - 数据采集合规性建设\n\nWuKong Security\n\n专注数据安全、风控对抗\n\n公众号：虫技\n\n分享攻防知识，挖掘数据价值\n\n站长博客\n\n早期一些逆向、数据分析文章\n\n- name: Spider BOX\n  desc: 虫盒 - 爬虫逆向资源导航站\n#  avatar: https://static.wukongsec.com/spiderbox/images/logo/spiderbox.png\n  link: https://spiderbox.cn/\n  bgColor: '#9d99f0'\n  textColor: '#3932e2'\n- name: Spider API\n  desc: 虫术 - 爬虫逆向常用 API\n#  avatar: https://static.wukongsec.com/spiderbox/images/logo/spiderapi.png\n  link: https://spiderapi.cn/\n  bgColor: '#82c98d'\n  textColor: '#276831'\n- name: Spider GRC\n  desc: 虫规 - 数据采集合规性建设\n#  avatar: https://static.wukongsec.com/spiderbox/images/logo/spidergrc.png\n  link: https://spidergrc.cn/\n  bgColor: '#FCDBA0'\n  textColor: '#A05F2C'\n- name: WuKong Security\n  desc: 专注数据安全、风控对抗\n#  avatar: https://static.wukongsec.com/spiderbox/images/logo/wukongsecurity.jpg\n  link: https://github.com/WuKongSecurity\n  bgColor: '#bdbdbd'\n  textColor: '#2A3344'\n- name: 公众号：虫技\n  desc: 分享攻防知识，挖掘数据价值\n  link: https://static.wukongsec.com/public/images/info/spider_skill_green.png\n  bgColor: '#e59497'\n  textColor: '#682729'\n- name: 站长博客\n  desc: 早期一些逆向、数据分析文章\n  link: https://www.itbob.cn/\n  bgColor: '#be94e5'\n  textColor: '#8529db'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\nSpiderBox 怎么申请收录资源、文章、视频链接？\n\n1️⃣ 添加站长微信：IT-BOB，直接反馈给站长；\n2️⃣ 进入在线反馈页面，点击【我要发言】，选择【SpiderBox 相关】-【申请收录】\n\n\n\n▶️ 如果你是博主，想让自己的文章/视频出现在首页头部的【最新文章】列表里，请选择【博主文章视频链接收录】，留下你的主页，等待站长添加监控即可，支持公众号/bilibili/吾爱破解/看雪论坛/CSDN/博客园等主流平台，也支持博主自己搭建的博客网站。\n▶️ 如果你是普通用户，有好的资源推荐，请选择【爬虫逆向相关资源收录】，留下资源网址/项目地址/软件名称等，等待站长添加收录即可。\n\n----------------------------------------\n\n附：收录基本标准\n\n基本条件：所有内容均为爬虫、反爬虫、逆向、风控、正向防护、人机验证相关领域的。\n\n 1. 只收录基本条件里提到的相关领域，其他领域暂不收录；\n 2. 除赞助商以外，不收录带有明显广告性质的链接、资源；\n 3. 任何涉及到第三方割韭菜培训班的内容，不予收录，行业认可的高质量课程除外；\n 4. 【最新文章】列表显示的博主文章/视频收录需要满足以下条件：\n    * 相关领域的内容需要占比 70% 以上，涉及的领域不能太过杂乱；\n    * 发布的内容不能太基础、文章字数不能太少、视频长度不能太短，例如一篇文章就甩一张成功的截图，其他啥也没有，这种毫无意义的不予收录。\n\nSpiderBox SpiderBox 最新文章/视频链接是实时更新的吗？\n\n不是实时更新的，会在 30 分钟内同步。\n\n通过对各个平台、各个博主的发文频率观察，累计下来每天可能只有个位数的内容产生，因为采集一些平台内容需要使用代理 IP，有一定的成本，所以文章视频的链接并不是实时更新的，大约 5~10 分钟后台会更新一次数据库，GitHub Action 机器人会每隔 5~30 分钟同步一次数据到网站上，也就是说博主发布的最新内容，不出意外的话，会在 30 分钟内同步到网站上。也可以做到 5 分钟，甚至 1 分钟内同步，但是博主内容产出并没有怎么高的频率，完全没有必要浪费资源去反复采集、监控更新，后续的同步频率，可以视情况进行调整。\n\n\n# 博主收录名单\n\nSpiderBox 不会保存文章内容，只对文章标题、链接、作者、发布时间进行缓存\n\n随机批量导出的，排名不分先后，个人精力有限，难免有遗漏，有爬虫、逆向、风控领域相关的公众号可以推荐给站长进行收录\n\n表格里面监控移除时间，表示【交流学习】栏目里收录了的，但取消了对文章监控的推送，这一般是因为有多篇质量不高的文章，比如只放两张截图，啥技术也不说的，比如粉丝、群友多人反馈没啥意义要求取消收录的\n\n微信公众号收录名单\n\n公众号 ID            公众号名称                  收录时间         监控移除时间\ngh_56313daabcfb   逆向有你                   2024.12.08   \ngh_3d394cc6d03a   虫技                     2024.12.08   \ngh_cf2cd6bfe39e   二进制磨剑                  2024.12.08   \ngh_a377081d4221   编角料                    2024.12.08   \ngh_115024bacc7b   小伍哥聊风控                 2024.12.08   \ngh_84c656527267   逆向OneByOne             2024.12.08   \ngh_47b382347c2c   LuckyFuture            2024.12.08   \ngh_385efb80e1a2   菜鸟学Python编程            2024.12.08   2024.01.17\ngh_d348fd15708a   小白逆向之旅                 2024.12.08   \ngh_c4d92cc9b0d9   时光python之旅             2024.12.08   \ngh_497711e793fa   python爬虫与js逆向          2024.12.08   \ngh_b237fabfe467   Pythonlx               2024.12.08   \ngh_d01a80bce240   python爬虫和阿J的逆向         2024.12.08   \ngh_bc164eb4eb54   妄为写代码                  2024.12.08   \ngh_a556e07807f6   咸鱼学Python              2024.12.08   \ngh_63223f7795f5   爬虫术与道                  2024.12.08   \ngh_fdf8c8d2d9a8   矛和盾的故事                 2024.12.08   \ngh_988035dcd8a1   逆向简史                   2024.12.08   \ngh_c637bce93320   js 安卓 iOS逆向            2024.12.08   \ngh_6489a49d398e   爬虫逆向之旅                 2024.12.08   \ngh_4e76add430dc   y小白的笔记                 2024.12.08   \ngh_96fbc717689e   影17                    2024.12.08   \ngh_ab8489df7681   榫卯江湖                   2024.12.08   \ngh_c6b6687c06b6   Coder小Q                2024.12.08   \ngh_5297376f8e94   小鸿爱摸鱼                  2024.12.08   \ngh_2ef7d8a36a80   资源堂                    2024.12.08   \ngh_2873653fd7af   未闻Code                 2024.12.08   \ngh_b0c56f22b958   柳絮的学习杂记                2024.12.08   \ngh_1e9cdae72d92   沐阳科技资源                 2024.12.08   \ngh_25c90dc826ec   Py学习日记                 2024.12.08   \ngh_822bfba8a24c   理想主义的Pythonista        2024.12.08   \ngh_68214466aa2d   Python头等奖              2024.12.08   \ngh_ecfb7c1ab2c3   Spider乾坤               2024.12.08   \ngh_1f8dda29abf5   陈不不and挽风的逆向            2024.12.08   \ngh_c6faa38684cd   jqiu爬虫分析日记             2024.12.08   \ngh_ac5cd11c73dc   python学习爱好者            2024.12.08   \ngh_75f1f3757c88   软件安全与逆向分析              2024.12.08   \ngh_fb242c15300f   吾爱破解论坛                 2024.12.08   \ngh_6266a9c8972e   爬虫逆向小林哥                2024.12.08   \ngh_01fa7b4fd87a   静夜随想                   2024.12.08   \ngh_d7f3741e0b6a   二进制科学                  2024.12.08   \ngh_e417c9dad740   关于代码那点事                2024.12.08   \ngh_b663e477c97a   搞点逆向778                2024.12.08   \ngh_c08b6fb82c4b   秃头的逆向痴想                2024.12.08   \ngh_f8b47f4cefab   学渣搞逆向                  2024.12.08   \ngh_45c14a16fa8c   兔老大Android和iOS逆向       2024.12.08   \ngh_32adddcadde2   ReverseCode            2024.12.08   \ngh_fc6c78a6258d   逆向lin狗                 2024.12.08   \ngh_999f52233e07   移动端Android和iOS开发技术分享   2024.12.08   \ngh_712d30bbf771   ck的学习笔记                2024.12.08   \ngh_31d739e3790e   理想真会玩                  2024.12.08   \ngh_a1a940f17ec3   小道安全                   2024.12.08   \ngh_5a4674891c7f   独步爬虫逆向                 2024.12.08   \ngh_2c45214772d7   coderwhy               2024.12.08   \ngh_d42cfaff9df1   猿人学Python              2024.12.08   \ngh_060e91811143   哆啦安全                   2024.12.08   \ngh_7409f69068a6   逆向与爬虫的故事               2024.12.08   \ngh_596760b42515   随心记事                   2024.12.08   \ngh_90625a2cad3c   逆向study                2024.12.08   \ngh_5c23643f97c5   爬虫兄弟搞搞逆向               2024.12.08   \ngh_70ba5e7f407e   奋飞安全                   2024.12.08   \ngh_543c6301f39a   爬虫spider               2024.12.08   \ngh_d8e965e6d0d5   网虫Spider               2024.12.08   \ngh_7549aad3f188   逆向日记                   2024.12.08   \ngh_3a7447778ff3   菜鸡的逆向日记                2024.12.08   \ngh_2ebb4542401d   爬虫逆向技术分享               2024.12.08   \ngh_8cc3b5d08c10   进击的爬虫                  2024.12.08   \ngh_3150b538dd34   虫术                     2024.12.08   \ngh_5a7594c29646   s0ing                  2024.12.08   \ngh_1e33544a8a79   逆向路漫漫                  2024.12.08   \ngh_6e84ebf77454   移动安全星球                 2024.12.08   \ngh_00be36c213ec   爬虫45度                  2024.12.08   \ngh_90310c90023f   python和逆向              2024.12.08   \ngh_722036c354e6   逆向攻与防                  2024.12.08   \ngh_f89880d79473   菜鸡弟弟的逆向之路              2024.12.08   \ngh_1dae307aa4ab   virjar是渣渣              2024.12.08   \ngh_6ced1cafca19   燕幕自安                   2024.12.08   \ngh_165293133bc5   pang的逆向                2024.12.08   \ngh_1fe6eccfd5b3   夏日技术友人帐                2024.12.08   \ngh_c7d0788ebde0   面向小白的逆向笔记              2024.12.08   \ngh_b46c4f4dc23b   NightTeam              2024.12.08   \ngh_0ff9662604df   平底锅煎蛋                  2024.12.08   \ngh_95c3d3d2063e   python小丑鱼              2024.12.08   \ngh_84afbde963bf   我最菜                    2024.12.08   \ngh_8a34b8979a2a   逆向小友                   2024.12.08   \ngh_01989da4e3dd   爬虫大菜鸡                  2024.12.08   \ngh_0fb3e29ff94c   爬虫逆向技术栈                2024.12.08   \ngh_4cbd1c372f2a   花花学逆向                  2024.12.08   \ngh_f561c4f69250   爬虫逆向笔记                 2024.12.08   \ngh_737846ec76a6   一生向风                   2024.12.08   \ngh_339fd590d9cf   Bug攻防                  2024.12.08   \ngh_86aab598880e   K哥爬虫                   2024.12.08   2025.01.17\ngh_e3bc789ec364   Spade sec              2024.12.09   \ngh_b47cae6218b8   当爬虫遇到逆向                2024.12.09   \ngh_f7eefacb8595   我真的不是蜘蛛                2024.12.09   \ngh_e98a8ed7253b   DrissionPage           2024.12.14   \ngh_4a62837bac85   lsq665                 2024.12.15   \ngh_3f2c705b036c   R逆向                    2024.12.15   \ngh_0f9cbd788793   季东ooo                  2024.12.25   \ngh_6e5158a8d7b9   SpiderLittleWhite      2025.01.01   \ngh_fdc416568214   逆向学习之旅                 2025.01.02   2025.01.17\ngh_c9e9a29ec824   一只野生码农                 2025.01.24   \ngh_64d2c7ba7e9e   秋裤的学习笔记                2025.01.25   \n\n哔哩哔哩博主收录名单\n\n哔哩哔哩 MID           昵称                收录时间         监控移除时间\n308704191          时一十一姐呀            2024.12.08   \n358732858          凛音姫               2024.12.08   \n27577421           安卓反调试frida检测Neo   2024.12.08   \n31025974           r0ysue            2024.12.08   \n534838862          小肩膀-逆向安全培训        2024.12.08   \n434541052          珍惜Any             2024.12.08   \n439348342          和沐阳学逆向            2024.12.08   \n1366032025         西门浪0v0            2024.12.08   \n4670123            零点520666          2024.12.08   \n48179703           B站用户骚神            2024.12.08   \n480809815          风と自由              2024.12.08   \n1796457925         悦来客栈的老板           2024.12.08   \n227452348          陈不不and挽风的逆向       2024.12.08   \n500303             二进制科学             2024.12.08   \n358764286          会飞ヾ的鱼             2024.12.08   \n392040559          白面OVO             2024.12.08   \n3493257935850246   nothing__233      2024.12.08   \n450412693          HD236300          2024.12.08   \n383977952          名字叫阿柒             2024.12.08   \n1533897577         漠染千舟              2024.12.08   \n633101470          波波老师带你学爬虫         2024.12.08   2024.12.12\n3461578481470147   逆向狗都不学            2024.12.08   \n521068039          若水0014            2024.12.08   \n182558639          可乐还是百事好呀          2024.12.08   \n38940666           一燕来去一年冬           2024.12.08   \n392333105          猿人学Python         2024.12.08   \n397037741          ikun的嘴            2024.12.08   \n397155590          QiQi指的是琦琦         2024.12.08   \n362235493          下雨天sana           2024.12.08   \n392204112          冒蓝火的黑骑士           2024.12.09   \n1683992739         带带弟弟学爬虫           2024.12.15   \n419760403          如何追mio酱           2024.12.15   \n1886803835         一只勇敢的小佳           2024.12.15   \n494103250          Alone_666         2024.12.15   \n170999             梨婵                2024.12.15   \n11445958           那个昵称已经有人用过        2024.12.15   \n599967016          -云松               2024.12.15   \n20526000           DrissionPage      2024.12.15   \n164671536          冷月不是程序员           2024.12.15   \n701939513          念初77              2024.12.15   \n101698074          ShriyGo           2024.12.15   \n\nCSDN 博主收录名单\n\nCSDN ID            昵称                收录时间         监控移除时间\nweixin_43411585    十一姐               2024.12.08   \nweixin_43582101    考古学家lx(李玺)        2024.12.08   \nqq523176585        悦来客栈的老板           2024.12.08   \nqq_38474570        鬼手56              2024.12.08   \nweixin_44772112    成功你要成仁啊           2024.12.08   \nqq_26079939        阿J~               2024.12.08   \nqiulin_wu          吴秋霖               2024.12.08   \nweixin_43505430    逆向与爬虫的故事          2024.12.08   \nxmx_000            杨如画.              2024.12.08   \nqq_40979337        zk935960518       2024.12.08   \nqq_43308242        时光亦不回首            2024.12.08   \nw1101662433        王辉辉的猫             2024.12.08   \nqq_44657571        逆向学习之旅            2024.12.08   \nweixin_47115747    `Jay              2024.12.08   \nweixin_44437016    y小白的笔记            2024.12.08   \nu010559109         r0ysue_           2024.12.08   \nm0_52336378        半离岛               2024.12.08   \njia666666          jia666666         2024.12.08   \nqq_36780279        星云牛马              2024.12.08   \npyzzd              BuerCC            2024.12.08   \nweixin_46874932    Sping__           2024.12.08   \nweixin_44691004    A九三               2024.12.08   \nweixin_45307278    Nickname肖知寒       2024.12.08   \nqq_63701832        coleak            2024.12.08   \nweixin_45541986    一位路过的程序员          2024.12.08   \nqq_38851536        白龙~               2024.12.08   \nqq_44749634        写BUG专家            2024.12.08   \njerry3747          逆向三十六计            2024.12.08   \nweixin_38927522    Codeooo           2024.12.08   \nc_kongfei          小道安全              2024.12.08   \nqq_43704986        Mint.Coder        2024.12.08   \nm0_51159233        追风暴的人             2024.12.08   \nbig_god_           活捉一只小菜鸟~          2024.12.08   \nweixin_44862184    挽风逆向              2024.12.08   \nweixin_58584029    西楚傲天              2024.12.08   \nY_morph            I am geekbyte     2024.12.08   \nzjq592767809       渔滒                2024.12.08   \nweixin_44504978    _花爷               2024.12.08   \nQiled              Qiled             2024.12.08   \nqq_46013295        不不不我要摸鱼           2024.12.08   \nqq_41155858        和沐阳学逆向            2024.12.08   \nu010671061         移动安全星球            2024.12.08   \nqq_33403388        十二有bug            2024.12.08   \nu013046615         爬虫小恐龙             2024.12.08   \nqq409732112        公过水蚊              2024.12.08   \nweixin_46672080    逆向新手              2024.12.08   \nqq_38154948        拉灯的小手             2024.12.08   \nu014431237         AnxiangLemon      2024.12.08   \nqq_44657899        _Herbert555       2024.12.08   \nyyz_yinyuanzhang   Mick Schumacher   2024.12.08   \nBennett_           LuoYe丶            2024.12.08   \nqq_21050249        故意~               2024.12.08   \nqq_43572758        看见我书了吗            2024.12.08   \nZuko_chen          始識                2024.12.08   \nNUT_0              NUT_0             2024.12.08   \nweixin_52283613    八月欢喜              2024.12.08   \nhdd706             hdd706            2024.12.08   \nqq_38977435        Amazing__W        2024.12.08   \nqq_49268524        小爬菜               2024.12.08   \nckcookies          ckcookies         2024.12.08   \nweixin_42277380    飞向天空的鹰            2024.12.08   \nA_fanyifan         带带弟弟学爬虫__         2024.12.08   \n2401_84054263      菜鸟逆向              2024.12.08   \nmamenqi_csdn       傲娇的小苹果            2024.12.08   \nw62181310          轩辕丿               2024.12.08   \nm0_46631208        白寸(渴～知)           2024.12.08   \nweixin_39010615    孤独的三毛             2024.12.08   \n2301_78252288      2301_78252288     2024.12.08   \nweixin_52001594    花庭                2024.12.08   \nm0_75266682        老师我太想进步了！         2024.12.08   \ny662225dd          一本杂志              2024.12.08   \nu010226586         我是花臂不花            2024.12.08   \nljc545w            勇敢自由              2024.12.08   \nqq_36551453        码王吴彦祖             2024.12.08   \nqq_44906798        夜无霄               2024.12.08   \nweixin_69490628    汉斯鲁昂              2024.12.08   \nQwertyuiop2016     Python成长路         2024.12.08   \nLeetengteng        别None了            2024.12.08   \nwelggy             onejane           2024.12.08   \nweixin_44791631    扁舟·TF             2024.12.08   \nqq_47459180        Wy01688king       2024.12.08   \nL1416279170        溏心蛋*              2024.12.08   \nweixin_43845191    九月镇灵将             2024.12.08   \nm0_62945506        ~贝母~              2024.12.08   \nm0_38098782        CgfFan            2024.12.08   \nweixin_41259961    猫先森_              2024.12.08   \nlaoyaogegeg        LY㊋               2024.12.08   \nsergiojune         sergiojune        2024.12.08   \nbluedream21str     心之筑               2024.12.08   \nFleehom            Crazy ProMonkey   2024.12.08   \nPython_DJ          Python 键盘上的舞者     2024.12.08   \nweixin_43459158    AJackpot          2024.12.08   \n2401_83253228      比奇堡~              2024.12.08   \nweixin_44236034    Good Iead         2024.12.08   \nqq_15326513        qq_15326513       2024.12.08   \nqq_30135181        Tasfa             2024.12.08   \nqq_39802740        qq_39802740       2024.12.08   \nu014643814         小白白               2024.12.08   \nw2sft              w2sfot            2024.12.08   \nkdl_csdn           K哥爬虫              2024.12.08   \nqq_53444631        狗都不学爬虫_           2024.12.11   \nm0_61226167        不爱逆向的小白           2024.12.11   \nu013046615         爬虫小恐龙             2024.12.11   \n\n吾爱破解论坛收录链接\n * 『脱壳破解区』- web 逆向\n * 『移动安全区』\n\n看雪论坛收录链接\n * 看雪社区 > 移动安全 > Android安全\n * 看雪社区 > 移动安全 > iOS安全\n * 看雪社区 > CTF > WEB安全\n\n先知社区收录链接\n * 社区版块 - 移动安全\n\n\n# 更新日志\n\n * 2024.12.09：SpiderBox 多项更新：\n   * 新增【最新文章/视频】模块，监控各大博主的内容更新；\n   * 新增在线反馈交流系统；\n   * 侧边栏默认最小化显示；\n   * 侧边栏一级分类被点击后不再跳转；\n   * 简化顶栏、搜索栏内容，顶栏右侧显示当前日期时间；\n   * 减少广告赞助商的空间占用；\n   * 【主站推荐】模块调整，显示最常用的链接；\n   * 调整了分类，新增了一些资源收录，去掉了一些失效的资源链接；\n   * 更加详细的更新日志：https://mp.weixin.qq.com/s/ZDeJM7KAbst8er8zLRhdSg。\n * 2023.01.23：WuKongRiskControl 悟空风控系统正式启动，进入开发阶段；\n * 2023.11.13：Spider 系列 ICP 备案、公安备案完成；\n * 2023.08.12：Spider 系列启动，项目初始化完成：spiderbox.cn丨spiderapi.cn丨spidergrc.cn。",normalizedContent:"# 交流群/联系站长\n\n爬虫逆向qq交流群/微信交流群/联系站长/商务合作\n\n推荐加入微信交流群，大佬更多，更加活跃！\n\n站长 qq：2273902448\n\n有事直接说，不要问在不在\n\n站长微信：it-bob\n\n备注来意、备注交流群\n\n站长邮箱\n\nadmin@itbob.cn\n\nqq 交流一群\n\n雕虫小技一群：941013658\n\nqq 交流二群\n\n雕虫小技二群：614968141\n\n- name: 站长 qq：2273902448\n  desc: 有事直接说，不要问在不在\n  link: https://static.wukongsec.com/public/images/info/qq_art.webp\n  bgcolor: '#fcdba0'\n  textcolor: '#a05f2c'\n- name: 站长微信：it-bob\n  desc: 备注来意、备注交流群\n  link: https://static.wukongsec.com/public/images/info/wechat_art.webp\n  bgcolor: '#bdbdbd'\n  textcolor: '#2a3344'\n- name: 站长邮箱\n  desc: admin@itbob.cn\n  link: mailto:admin@itbob.cn\n  bgcolor: '#e59497'\n  textcolor: '#682729'\n- name: qq 交流一群\n  desc: 雕虫小技一群：941013658\n  link: https://static.wukongsec.com/public/images/info/qq_group_spider1.jpg\n  bgcolor: '#9d99f0'\n  textcolor: '#3932e2'\n- name: qq 交流二群\n  desc: 雕虫小技二群：614968141\n  link: https://static.wukongsec.com/public/images/info/qq_group_spider2.jpg\n  bgcolor: '#82c98d'\n  textcolor: '#276831'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 常见问题\n\nspider 系列 / 站长的网站有哪些？\n\nspider box\n\n虫盒 - 爬虫逆向资源导航站\n\nspider api\n\n虫术 - 爬虫逆向常用 api\n\nspider grc\n\n虫规 - 数据采集合规性建设\n\nwukong security\n\n专注数据安全、风控对抗\n\n公众号：虫技\n\n分享攻防知识，挖掘数据价值\n\n站长博客\n\n早期一些逆向、数据分析文章\n\n- name: spider box\n  desc: 虫盒 - 爬虫逆向资源导航站\n#  avatar: https://static.wukongsec.com/spiderbox/images/logo/spiderbox.png\n  link: https://spiderbox.cn/\n  bgcolor: '#9d99f0'\n  textcolor: '#3932e2'\n- name: spider api\n  desc: 虫术 - 爬虫逆向常用 api\n#  avatar: https://static.wukongsec.com/spiderbox/images/logo/spiderapi.png\n  link: https://spiderapi.cn/\n  bgcolor: '#82c98d'\n  textcolor: '#276831'\n- name: spider grc\n  desc: 虫规 - 数据采集合规性建设\n#  avatar: https://static.wukongsec.com/spiderbox/images/logo/spidergrc.png\n  link: https://spidergrc.cn/\n  bgcolor: '#fcdba0'\n  textcolor: '#a05f2c'\n- name: wukong security\n  desc: 专注数据安全、风控对抗\n#  avatar: https://static.wukongsec.com/spiderbox/images/logo/wukongsecurity.jpg\n  link: https://github.com/wukongsecurity\n  bgcolor: '#bdbdbd'\n  textcolor: '#2a3344'\n- name: 公众号：虫技\n  desc: 分享攻防知识，挖掘数据价值\n  link: https://static.wukongsec.com/public/images/info/spider_skill_green.png\n  bgcolor: '#e59497'\n  textcolor: '#682729'\n- name: 站长博客\n  desc: 早期一些逆向、数据分析文章\n  link: https://www.itbob.cn/\n  bgcolor: '#be94e5'\n  textcolor: '#8529db'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\nspiderbox 怎么申请收录资源、文章、视频链接？\n\n1️⃣ 添加站长微信：it-bob，直接反馈给站长；\n2️⃣ 进入在线反馈页面，点击【我要发言】，选择【spiderbox 相关】-【申请收录】\n\n\n\n▶️ 如果你是博主，想让自己的文章/视频出现在首页头部的【最新文章】列表里，请选择【博主文章视频链接收录】，留下你的主页，等待站长添加监控即可，支持公众号/bilibili/吾爱破解/看雪论坛/csdn/博客园等主流平台，也支持博主自己搭建的博客网站。\n▶️ 如果你是普通用户，有好的资源推荐，请选择【爬虫逆向相关资源收录】，留下资源网址/项目地址/软件名称等，等待站长添加收录即可。\n\n----------------------------------------\n\n附：收录基本标准\n\n基本条件：所有内容均为爬虫、反爬虫、逆向、风控、正向防护、人机验证相关领域的。\n\n 1. 只收录基本条件里提到的相关领域，其他领域暂不收录；\n 2. 除赞助商以外，不收录带有明显广告性质的链接、资源；\n 3. 任何涉及到第三方割韭菜培训班的内容，不予收录，行业认可的高质量课程除外；\n 4. 【最新文章】列表显示的博主文章/视频收录需要满足以下条件：\n    * 相关领域的内容需要占比 70% 以上，涉及的领域不能太过杂乱；\n    * 发布的内容不能太基础、文章字数不能太少、视频长度不能太短，例如一篇文章就甩一张成功的截图，其他啥也没有，这种毫无意义的不予收录。\n\nspiderbox spiderbox 最新文章/视频链接是实时更新的吗？\n\n不是实时更新的，会在 30 分钟内同步。\n\n通过对各个平台、各个博主的发文频率观察，累计下来每天可能只有个位数的内容产生，因为采集一些平台内容需要使用代理 ip，有一定的成本，所以文章视频的链接并不是实时更新的，大约 5~10 分钟后台会更新一次数据库，github action 机器人会每隔 5~30 分钟同步一次数据到网站上，也就是说博主发布的最新内容，不出意外的话，会在 30 分钟内同步到网站上。也可以做到 5 分钟，甚至 1 分钟内同步，但是博主内容产出并没有怎么高的频率，完全没有必要浪费资源去反复采集、监控更新，后续的同步频率，可以视情况进行调整。\n\n\n# 博主收录名单\n\nspiderbox 不会保存文章内容，只对文章标题、链接、作者、发布时间进行缓存\n\n随机批量导出的，排名不分先后，个人精力有限，难免有遗漏，有爬虫、逆向、风控领域相关的公众号可以推荐给站长进行收录\n\n表格里面监控移除时间，表示【交流学习】栏目里收录了的，但取消了对文章监控的推送，这一般是因为有多篇质量不高的文章，比如只放两张截图，啥技术也不说的，比如粉丝、群友多人反馈没啥意义要求取消收录的\n\n微信公众号收录名单\n\n公众号 id            公众号名称                  收录时间         监控移除时间\ngh_56313daabcfb   逆向有你                   2024.12.08   \ngh_3d394cc6d03a   虫技                     2024.12.08   \ngh_cf2cd6bfe39e   二进制磨剑                  2024.12.08   \ngh_a377081d4221   编角料                    2024.12.08   \ngh_115024bacc7b   小伍哥聊风控                 2024.12.08   \ngh_84c656527267   逆向onebyone             2024.12.08   \ngh_47b382347c2c   luckyfuture            2024.12.08   \ngh_385efb80e1a2   菜鸟学python编程            2024.12.08   2024.01.17\ngh_d348fd15708a   小白逆向之旅                 2024.12.08   \ngh_c4d92cc9b0d9   时光python之旅             2024.12.08   \ngh_497711e793fa   python爬虫与js逆向          2024.12.08   \ngh_b237fabfe467   pythonlx               2024.12.08   \ngh_d01a80bce240   python爬虫和阿j的逆向         2024.12.08   \ngh_bc164eb4eb54   妄为写代码                  2024.12.08   \ngh_a556e07807f6   咸鱼学python              2024.12.08   \ngh_63223f7795f5   爬虫术与道                  2024.12.08   \ngh_fdf8c8d2d9a8   矛和盾的故事                 2024.12.08   \ngh_988035dcd8a1   逆向简史                   2024.12.08   \ngh_c637bce93320   js 安卓 ios逆向            2024.12.08   \ngh_6489a49d398e   爬虫逆向之旅                 2024.12.08   \ngh_4e76add430dc   y小白的笔记                 2024.12.08   \ngh_96fbc717689e   影17                    2024.12.08   \ngh_ab8489df7681   榫卯江湖                   2024.12.08   \ngh_c6b6687c06b6   coder小q                2024.12.08   \ngh_5297376f8e94   小鸿爱摸鱼                  2024.12.08   \ngh_2ef7d8a36a80   资源堂                    2024.12.08   \ngh_2873653fd7af   未闻code                 2024.12.08   \ngh_b0c56f22b958   柳絮的学习杂记                2024.12.08   \ngh_1e9cdae72d92   沐阳科技资源                 2024.12.08   \ngh_25c90dc826ec   py学习日记                 2024.12.08   \ngh_822bfba8a24c   理想主义的pythonista        2024.12.08   \ngh_68214466aa2d   python头等奖              2024.12.08   \ngh_ecfb7c1ab2c3   spider乾坤               2024.12.08   \ngh_1f8dda29abf5   陈不不and挽风的逆向            2024.12.08   \ngh_c6faa38684cd   jqiu爬虫分析日记             2024.12.08   \ngh_ac5cd11c73dc   python学习爱好者            2024.12.08   \ngh_75f1f3757c88   软件安全与逆向分析              2024.12.08   \ngh_fb242c15300f   吾爱破解论坛                 2024.12.08   \ngh_6266a9c8972e   爬虫逆向小林哥                2024.12.08   \ngh_01fa7b4fd87a   静夜随想                   2024.12.08   \ngh_d7f3741e0b6a   二进制科学                  2024.12.08   \ngh_e417c9dad740   关于代码那点事                2024.12.08   \ngh_b663e477c97a   搞点逆向778                2024.12.08   \ngh_c08b6fb82c4b   秃头的逆向痴想                2024.12.08   \ngh_f8b47f4cefab   学渣搞逆向                  2024.12.08   \ngh_45c14a16fa8c   兔老大android和ios逆向       2024.12.08   \ngh_32adddcadde2   reversecode            2024.12.08   \ngh_fc6c78a6258d   逆向lin狗                 2024.12.08   \ngh_999f52233e07   移动端android和ios开发技术分享   2024.12.08   \ngh_712d30bbf771   ck的学习笔记                2024.12.08   \ngh_31d739e3790e   理想真会玩                  2024.12.08   \ngh_a1a940f17ec3   小道安全                   2024.12.08   \ngh_5a4674891c7f   独步爬虫逆向                 2024.12.08   \ngh_2c45214772d7   coderwhy               2024.12.08   \ngh_d42cfaff9df1   猿人学python              2024.12.08   \ngh_060e91811143   哆啦安全                   2024.12.08   \ngh_7409f69068a6   逆向与爬虫的故事               2024.12.08   \ngh_596760b42515   随心记事                   2024.12.08   \ngh_90625a2cad3c   逆向study                2024.12.08   \ngh_5c23643f97c5   爬虫兄弟搞搞逆向               2024.12.08   \ngh_70ba5e7f407e   奋飞安全                   2024.12.08   \ngh_543c6301f39a   爬虫spider               2024.12.08   \ngh_d8e965e6d0d5   网虫spider               2024.12.08   \ngh_7549aad3f188   逆向日记                   2024.12.08   \ngh_3a7447778ff3   菜鸡的逆向日记                2024.12.08   \ngh_2ebb4542401d   爬虫逆向技术分享               2024.12.08   \ngh_8cc3b5d08c10   进击的爬虫                  2024.12.08   \ngh_3150b538dd34   虫术                     2024.12.08   \ngh_5a7594c29646   s0ing                  2024.12.08   \ngh_1e33544a8a79   逆向路漫漫                  2024.12.08   \ngh_6e84ebf77454   移动安全星球                 2024.12.08   \ngh_00be36c213ec   爬虫45度                  2024.12.08   \ngh_90310c90023f   python和逆向              2024.12.08   \ngh_722036c354e6   逆向攻与防                  2024.12.08   \ngh_f89880d79473   菜鸡弟弟的逆向之路              2024.12.08   \ngh_1dae307aa4ab   virjar是渣渣              2024.12.08   \ngh_6ced1cafca19   燕幕自安                   2024.12.08   \ngh_165293133bc5   pang的逆向                2024.12.08   \ngh_1fe6eccfd5b3   夏日技术友人帐                2024.12.08   \ngh_c7d0788ebde0   面向小白的逆向笔记              2024.12.08   \ngh_b46c4f4dc23b   nightteam              2024.12.08   \ngh_0ff9662604df   平底锅煎蛋                  2024.12.08   \ngh_95c3d3d2063e   python小丑鱼              2024.12.08   \ngh_84afbde963bf   我最菜                    2024.12.08   \ngh_8a34b8979a2a   逆向小友                   2024.12.08   \ngh_01989da4e3dd   爬虫大菜鸡                  2024.12.08   \ngh_0fb3e29ff94c   爬虫逆向技术栈                2024.12.08   \ngh_4cbd1c372f2a   花花学逆向                  2024.12.08   \ngh_f561c4f69250   爬虫逆向笔记                 2024.12.08   \ngh_737846ec76a6   一生向风                   2024.12.08   \ngh_339fd590d9cf   bug攻防                  2024.12.08   \ngh_86aab598880e   k哥爬虫                   2024.12.08   2025.01.17\ngh_e3bc789ec364   spade sec              2024.12.09   \ngh_b47cae6218b8   当爬虫遇到逆向                2024.12.09   \ngh_f7eefacb8595   我真的不是蜘蛛                2024.12.09   \ngh_e98a8ed7253b   drissionpage           2024.12.14   \ngh_4a62837bac85   lsq665                 2024.12.15   \ngh_3f2c705b036c   r逆向                    2024.12.15   \ngh_0f9cbd788793   季东ooo                  2024.12.25   \ngh_6e5158a8d7b9   spiderlittlewhite      2025.01.01   \ngh_fdc416568214   逆向学习之旅                 2025.01.02   2025.01.17\ngh_c9e9a29ec824   一只野生码农                 2025.01.24   \ngh_64d2c7ba7e9e   秋裤的学习笔记                2025.01.25   \n\n哔哩哔哩博主收录名单\n\n哔哩哔哩 mid           昵称                收录时间         监控移除时间\n308704191          时一十一姐呀            2024.12.08   \n358732858          凛音姫               2024.12.08   \n27577421           安卓反调试frida检测neo   2024.12.08   \n31025974           r0ysue            2024.12.08   \n534838862          小肩膀-逆向安全培训        2024.12.08   \n434541052          珍惜any             2024.12.08   \n439348342          和沐阳学逆向            2024.12.08   \n1366032025         西门浪0v0            2024.12.08   \n4670123            零点520666          2024.12.08   \n48179703           b站用户骚神            2024.12.08   \n480809815          风と自由              2024.12.08   \n1796457925         悦来客栈的老板           2024.12.08   \n227452348          陈不不and挽风的逆向       2024.12.08   \n500303             二进制科学             2024.12.08   \n358764286          会飞ヾ的鱼             2024.12.08   \n392040559          白面ovo             2024.12.08   \n3493257935850246   nothing__233      2024.12.08   \n450412693          hd236300          2024.12.08   \n383977952          名字叫阿柒             2024.12.08   \n1533897577         漠染千舟              2024.12.08   \n633101470          波波老师带你学爬虫         2024.12.08   2024.12.12\n3461578481470147   逆向狗都不学            2024.12.08   \n521068039          若水0014            2024.12.08   \n182558639          可乐还是百事好呀          2024.12.08   \n38940666           一燕来去一年冬           2024.12.08   \n392333105          猿人学python         2024.12.08   \n397037741          ikun的嘴            2024.12.08   \n397155590          qiqi指的是琦琦         2024.12.08   \n362235493          下雨天sana           2024.12.08   \n392204112          冒蓝火的黑骑士           2024.12.09   \n1683992739         带带弟弟学爬虫           2024.12.15   \n419760403          如何追mio酱           2024.12.15   \n1886803835         一只勇敢的小佳           2024.12.15   \n494103250          alone_666         2024.12.15   \n170999             梨婵                2024.12.15   \n11445958           那个昵称已经有人用过        2024.12.15   \n599967016          -云松               2024.12.15   \n20526000           drissionpage      2024.12.15   \n164671536          冷月不是程序员           2024.12.15   \n701939513          念初77              2024.12.15   \n101698074          shriygo           2024.12.15   \n\ncsdn 博主收录名单\n\ncsdn id            昵称                收录时间         监控移除时间\nweixin_43411585    十一姐               2024.12.08   \nweixin_43582101    考古学家lx(李玺)        2024.12.08   \nqq523176585        悦来客栈的老板           2024.12.08   \nqq_38474570        鬼手56              2024.12.08   \nweixin_44772112    成功你要成仁啊           2024.12.08   \nqq_26079939        阿j~               2024.12.08   \nqiulin_wu          吴秋霖               2024.12.08   \nweixin_43505430    逆向与爬虫的故事          2024.12.08   \nxmx_000            杨如画.              2024.12.08   \nqq_40979337        zk935960518       2024.12.08   \nqq_43308242        时光亦不回首            2024.12.08   \nw1101662433        王辉辉的猫             2024.12.08   \nqq_44657571        逆向学习之旅            2024.12.08   \nweixin_47115747    `jay              2024.12.08   \nweixin_44437016    y小白的笔记            2024.12.08   \nu010559109         r0ysue_           2024.12.08   \nm0_52336378        半离岛               2024.12.08   \njia666666          jia666666         2024.12.08   \nqq_36780279        星云牛马              2024.12.08   \npyzzd              buercc            2024.12.08   \nweixin_46874932    sping__           2024.12.08   \nweixin_44691004    a九三               2024.12.08   \nweixin_45307278    nickname肖知寒       2024.12.08   \nqq_63701832        coleak            2024.12.08   \nweixin_45541986    一位路过的程序员          2024.12.08   \nqq_38851536        白龙~               2024.12.08   \nqq_44749634        写bug专家            2024.12.08   \njerry3747          逆向三十六计            2024.12.08   \nweixin_38927522    codeooo           2024.12.08   \nc_kongfei          小道安全              2024.12.08   \nqq_43704986        mint.coder        2024.12.08   \nm0_51159233        追风暴的人             2024.12.08   \nbig_god_           活捉一只小菜鸟~          2024.12.08   \nweixin_44862184    挽风逆向              2024.12.08   \nweixin_58584029    西楚傲天              2024.12.08   \ny_morph            i am geekbyte     2024.12.08   \nzjq592767809       渔滒                2024.12.08   \nweixin_44504978    _花爷               2024.12.08   \nqiled              qiled             2024.12.08   \nqq_46013295        不不不我要摸鱼           2024.12.08   \nqq_41155858        和沐阳学逆向            2024.12.08   \nu010671061         移动安全星球            2024.12.08   \nqq_33403388        十二有bug            2024.12.08   \nu013046615         爬虫小恐龙             2024.12.08   \nqq409732112        公过水蚊              2024.12.08   \nweixin_46672080    逆向新手              2024.12.08   \nqq_38154948        拉灯的小手             2024.12.08   \nu014431237         anxianglemon      2024.12.08   \nqq_44657899        _herbert555       2024.12.08   \nyyz_yinyuanzhang   mick schumacher   2024.12.08   \nbennett_           luoye丶            2024.12.08   \nqq_21050249        故意~               2024.12.08   \nqq_43572758        看见我书了吗            2024.12.08   \nzuko_chen          始識                2024.12.08   \nnut_0              nut_0             2024.12.08   \nweixin_52283613    八月欢喜              2024.12.08   \nhdd706             hdd706            2024.12.08   \nqq_38977435        amazing__w        2024.12.08   \nqq_49268524        小爬菜               2024.12.08   \nckcookies          ckcookies         2024.12.08   \nweixin_42277380    飞向天空的鹰            2024.12.08   \na_fanyifan         带带弟弟学爬虫__         2024.12.08   \n2401_84054263      菜鸟逆向              2024.12.08   \nmamenqi_csdn       傲娇的小苹果            2024.12.08   \nw62181310          轩辕丿               2024.12.08   \nm0_46631208        白寸(渴～知)           2024.12.08   \nweixin_39010615    孤独的三毛             2024.12.08   \n2301_78252288      2301_78252288     2024.12.08   \nweixin_52001594    花庭                2024.12.08   \nm0_75266682        老师我太想进步了！         2024.12.08   \ny662225dd          一本杂志              2024.12.08   \nu010226586         我是花臂不花            2024.12.08   \nljc545w            勇敢自由              2024.12.08   \nqq_36551453        码王吴彦祖             2024.12.08   \nqq_44906798        夜无霄               2024.12.08   \nweixin_69490628    汉斯鲁昂              2024.12.08   \nqwertyuiop2016     python成长路         2024.12.08   \nleetengteng        别none了            2024.12.08   \nwelggy             onejane           2024.12.08   \nweixin_44791631    扁舟·tf             2024.12.08   \nqq_47459180        wy01688king       2024.12.08   \nl1416279170        溏心蛋*              2024.12.08   \nweixin_43845191    九月镇灵将             2024.12.08   \nm0_62945506        ~贝母~              2024.12.08   \nm0_38098782        cgffan            2024.12.08   \nweixin_41259961    猫先森_              2024.12.08   \nlaoyaogegeg        ly㊋               2024.12.08   \nsergiojune         sergiojune        2024.12.08   \nbluedream21str     心之筑               2024.12.08   \nfleehom            crazy promonkey   2024.12.08   \npython_dj          python 键盘上的舞者     2024.12.08   \nweixin_43459158    ajackpot          2024.12.08   \n2401_83253228      比奇堡~              2024.12.08   \nweixin_44236034    good iead         2024.12.08   \nqq_15326513        qq_15326513       2024.12.08   \nqq_30135181        tasfa             2024.12.08   \nqq_39802740        qq_39802740       2024.12.08   \nu014643814         小白白               2024.12.08   \nw2sft              w2sfot            2024.12.08   \nkdl_csdn           k哥爬虫              2024.12.08   \nqq_53444631        狗都不学爬虫_           2024.12.11   \nm0_61226167        不爱逆向的小白           2024.12.11   \nu013046615         爬虫小恐龙             2024.12.11   \n\n吾爱破解论坛收录链接\n * 『脱壳破解区』- web 逆向\n * 『移动安全区』\n\n看雪论坛收录链接\n * 看雪社区 > 移动安全 > android安全\n * 看雪社区 > 移动安全 > ios安全\n * 看雪社区 > ctf > web安全\n\n先知社区收录链接\n * 社区版块 - 移动安全\n\n\n# 更新日志\n\n * 2024.12.09：spiderbox 多项更新：\n   * 新增【最新文章/视频】模块，监控各大博主的内容更新；\n   * 新增在线反馈交流系统；\n   * 侧边栏默认最小化显示；\n   * 侧边栏一级分类被点击后不再跳转；\n   * 简化顶栏、搜索栏内容，顶栏右侧显示当前日期时间；\n   * 减少广告赞助商的空间占用；\n   * 【主站推荐】模块调整，显示最常用的链接；\n   * 调整了分类，新增了一些资源收录，去掉了一些失效的资源链接；\n   * 更加详细的更新日志：https://mp.weixin.qq.com/s/zdejm7kabst8er8zlrhdsg。\n * 2023.01.23：wukongriskcontrol 悟空风控系统正式启动，进入开发阶段；\n * 2023.11.13：spider 系列 icp 备案、公安备案完成；\n * 2023.08.12：spider 系列启动，项目初始化完成：spiderbox.cn丨spiderapi.cn丨spidergrc.cn。",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Redis",frontmatter:{title:"Redis",date:"2023-09-13T15:25:55.000Z",permalink:"/pages/Redis/",article:!1},regularPath:"/06.%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/04.%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/04.Redis.html",relativePath:"06.数据处理/04.数据存储/04.Redis.md",key:"v-3db36ba6",path:"/pages/Redis/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"支持我们",frontmatter:{title:"支持我们",date:"2020-05-12T15:09:57.000Z",permalink:"/pages/sponsor",sidebar:!1,article:!1},regularPath:"/08.%E8%B5%9E%E5%8A%A9/01.%E8%B5%9E%E5%8A%A9.html",relativePath:"08.赞助/01.赞助.md",key:"v-5f1a6be9",path:"/pages/sponsor/",headers:[{level:2,title:"广告赞助商",slug:"广告赞助商",normalizedTitle:"广告赞助商",charIndex:732},{level:2,title:"个人赞助 / 支出记录",slug:"个人赞助-支出记录",normalizedTitle:"个人赞助 / 支出记录",charIndex:1135}],headersStr:"广告赞助商 个人赞助 / 支出记录",content:"Spider BOX\n\n🚀 虫盒 - 爬虫逆向资源导航站\n\nSpider API\n\n🚀 虫术 - 爬虫逆向常用 API\n\nSpider GRC\n\n🚀 虫规 - 数据采集合规性建设\n\n- name: Spider BOX\n  desc: 🚀 虫盒 - 爬虫逆向资源导航站\n  link: https://spiderbox.cn/\n  bgColor: '#f1f1f1'\n  textColor: '#2A3344'\n- name: Spider API\n  desc: 🚀 虫术 - 爬虫逆向常用 API\n  link: https://spiderapi.cn/\n  bgColor: '#F0DFB1'\n  textColor: '#2A3344'\n- name: Spider GRC\n  desc: 🚀 虫规 - 数据采集合规性建设\n  link: https://spidergrc.cn/\n  bgColor: '#DFEEE7'\n  textColor: '#2A3344'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\nSpider 系列项目由 BOB 在业余时间建立和完善，如果您觉得 Spider 系列项目对您有所帮助，或者是想支持我继续开发，您可以通过如下任意方式支持我：\n\n1. 开源支持\n\n⭐️ GitHub Pull Requests 帮助完善文档或者点亮 Star 并分享 SpiderAPI 丨SpiderBOX丨SpiderGRC\n\n2. 广告支持\n\n🕸 点击赞助商广告进入注册，赞助商就会代您赞助一笔小钱，若有大量消费需求，可联系站长获取现金返利\n\n3. 赞助支持\n\n🎉 成为广告赞助商，可获得 Spider “虫”系列所有广告位，优质爬虫、逆向社群和站长公众号推广\n\n4. 打赏支持\n\n💰 通过以下二维码，一次性打赏，所有打赏、赞助将用于 Spider 系列项目域名、服务器、COS 等项目的续费\n\n微信支付   微信赞赏   支付宝\n              \n\n\n# 广告赞助商\n\n> 青果网络：国内领先的企业级代理 IP 服务商 ，覆盖国内 200 多个城市，畅享 600+ 万纯净 IP 资源池，提供动态代理、隧道代理和静态代理，赋能大数据，高成功率公开数据采集，门槛低，易接入，业务成功率平均高于竞品 30%。\n\n\n\n> BrightData：全球数亿级住宅 IP、数据中心 IP 代理，覆盖 195 个国家/地区，首创网页解锁器自动解决验证码、指纹识别，还有数据抓取专用浏览器、数据抓取 IDE、网站数据成品 API 等众多数据采集工具等待您的体验。\n\n\n\n\n# 个人赞助 / 支出记录\n\n以下所有支出记录均为 spider 系列支出，不含其他个人支出，打赏记录更新有延迟，若有遗漏请联系站长添加！❤️\n\n日期                渠道     金额 (￥)      昵称             备注/留言\n⬇️⬇️ 收入 ⬇️⬇️                                        \n2025.04.22        微信红包   + 66        Blue           TaskPyro 爬虫管理平台作者\n2025.01.19        微信赞赏   + 20        风过留影คิดถึง     hellogame.one 游戏开发导航\n2025.01.19        微信支付   + 6.66      Just so so     打赏\n2025.01.09        微信支付   + 6.66      CC11001100     收集的网址非常全，感谢大佬\n2024.12.09        微信支付   + 8.88      *霄             打赏\n2024.12.09        支付宝    + 20        **天            加油\n2024.11.25        支付宝    + 18.88     **峰(微信昵称：丫子)   打赏\n2024.10.10        微信红包   + 5         Secret         打赏\n2024.09.17        微信红包   + 66.66     冯浩森 Wood       打赏\n2024.08.11        微信支付   + 88        🐮             打赏\n2024.05.30        微信支付   + 9.9       岱卫             小小期待\n2024.05.13        微信支付   + 0.01      *王             打赏\n2024.05.13        微信支付   + 20        *!             打赏\n2024.05.03        支付宝    + 5         *凯             打赏\n2024.03.11        微信支付   + 6.66      xi             打赏\n2024.03.10        微信赞赏   + 6.66      时一             打赏\n2024.03.05        微信红包   + 66        k              加油\n2024.03.01        微信赞赏   + 20        关成爸爸           加油\n2023.12.16        微信赞赏   + 10        拉灯的小手          小小支持一下\n2023.12.08        微信赞赏   + 10        道法自然_Tor       打赏\n2023.12.01        微信赞赏   + 10        李玺             打赏\n2023.11.30        微信支付   + 6.66      鲨鱼辣椒           打赏\n                         + 477.63                   小计\n⬇️⬇️ 支出 ⬇️⬇️                                        \n2024.11-2025.11   腾讯云    - 55                       腾讯云边缘安全加速套餐*1年\n2024.11-2025.11   腾讯云    - 198                      腾讯云 Windows 服务器￥99*2年\n2024.07-2025.07   速拓云    - 456.96                   速拓云服务器￥38.08*24月\n2023.11-2025.11   阿里云    - 198                      阿里云服务器 ECS ￥99*2年\n2023.07-2024.11   腾讯云    - 45.55                    腾讯云开发 CloudBase\n2023.07-2024.11   阿里云    - 9.71                     阿里云 OSS、CDN\n2023.07-2024.11   阿里云    - 75.66                    阿里云验证码 2.0\n2023.07-2025.08   阿里云    - 280                      spider 系列域名注册￥35*4个*2年\n                         - 1318.88                  小计\n⬇️⬇️ 总计 ⬇️⬇️                                        \n2023.07-2024.12          - 841.25                   ",normalizedContent:"spider box\n\n🚀 虫盒 - 爬虫逆向资源导航站\n\nspider api\n\n🚀 虫术 - 爬虫逆向常用 api\n\nspider grc\n\n🚀 虫规 - 数据采集合规性建设\n\n- name: spider box\n  desc: 🚀 虫盒 - 爬虫逆向资源导航站\n  link: https://spiderbox.cn/\n  bgcolor: '#f1f1f1'\n  textcolor: '#2a3344'\n- name: spider api\n  desc: 🚀 虫术 - 爬虫逆向常用 api\n  link: https://spiderapi.cn/\n  bgcolor: '#f0dfb1'\n  textcolor: '#2a3344'\n- name: spider grc\n  desc: 🚀 虫规 - 数据采集合规性建设\n  link: https://spidergrc.cn/\n  bgcolor: '#dfeee7'\n  textcolor: '#2a3344'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\nspider 系列项目由 bob 在业余时间建立和完善，如果您觉得 spider 系列项目对您有所帮助，或者是想支持我继续开发，您可以通过如下任意方式支持我：\n\n1. 开源支持\n\n⭐️ github pull requests 帮助完善文档或者点亮 star 并分享 spiderapi 丨spiderbox丨spidergrc\n\n2. 广告支持\n\n🕸 点击赞助商广告进入注册，赞助商就会代您赞助一笔小钱，若有大量消费需求，可联系站长获取现金返利\n\n3. 赞助支持\n\n🎉 成为广告赞助商，可获得 spider “虫”系列所有广告位，优质爬虫、逆向社群和站长公众号推广\n\n4. 打赏支持\n\n💰 通过以下二维码，一次性打赏，所有打赏、赞助将用于 spider 系列项目域名、服务器、cos 等项目的续费\n\n微信支付   微信赞赏   支付宝\n              \n\n\n# 广告赞助商\n\n> 青果网络：国内领先的企业级代理 ip 服务商 ，覆盖国内 200 多个城市，畅享 600+ 万纯净 ip 资源池，提供动态代理、隧道代理和静态代理，赋能大数据，高成功率公开数据采集，门槛低，易接入，业务成功率平均高于竞品 30%。\n\n\n\n> brightdata：全球数亿级住宅 ip、数据中心 ip 代理，覆盖 195 个国家/地区，首创网页解锁器自动解决验证码、指纹识别，还有数据抓取专用浏览器、数据抓取 ide、网站数据成品 api 等众多数据采集工具等待您的体验。\n\n\n\n\n# 个人赞助 / 支出记录\n\n以下所有支出记录均为 spider 系列支出，不含其他个人支出，打赏记录更新有延迟，若有遗漏请联系站长添加！❤️\n\n日期                渠道     金额 (￥)      昵称             备注/留言\n⬇️⬇️ 收入 ⬇️⬇️                                        \n2025.04.22        微信红包   + 66        blue           taskpyro 爬虫管理平台作者\n2025.01.19        微信赞赏   + 20        风过留影คิดถึง     hellogame.one 游戏开发导航\n2025.01.19        微信支付   + 6.66      just so so     打赏\n2025.01.09        微信支付   + 6.66      cc11001100     收集的网址非常全，感谢大佬\n2024.12.09        微信支付   + 8.88      *霄             打赏\n2024.12.09        支付宝    + 20        **天            加油\n2024.11.25        支付宝    + 18.88     **峰(微信昵称：丫子)   打赏\n2024.10.10        微信红包   + 5         secret         打赏\n2024.09.17        微信红包   + 66.66     冯浩森 wood       打赏\n2024.08.11        微信支付   + 88        🐮             打赏\n2024.05.30        微信支付   + 9.9       岱卫             小小期待\n2024.05.13        微信支付   + 0.01      *王             打赏\n2024.05.13        微信支付   + 20        *!             打赏\n2024.05.03        支付宝    + 5         *凯             打赏\n2024.03.11        微信支付   + 6.66      xi             打赏\n2024.03.10        微信赞赏   + 6.66      时一             打赏\n2024.03.05        微信红包   + 66        k              加油\n2024.03.01        微信赞赏   + 20        关成爸爸           加油\n2023.12.16        微信赞赏   + 10        拉灯的小手          小小支持一下\n2023.12.08        微信赞赏   + 10        道法自然_tor       打赏\n2023.12.01        微信赞赏   + 10        李玺             打赏\n2023.11.30        微信支付   + 6.66      鲨鱼辣椒           打赏\n                         + 477.63                   小计\n⬇️⬇️ 支出 ⬇️⬇️                                        \n2024.11-2025.11   腾讯云    - 55                       腾讯云边缘安全加速套餐*1年\n2024.11-2025.11   腾讯云    - 198                      腾讯云 windows 服务器￥99*2年\n2024.07-2025.07   速拓云    - 456.96                   速拓云服务器￥38.08*24月\n2023.11-2025.11   阿里云    - 198                      阿里云服务器 ecs ￥99*2年\n2023.07-2024.11   腾讯云    - 45.55                    腾讯云开发 cloudbase\n2023.07-2024.11   阿里云    - 9.71                     阿里云 oss、cdn\n2023.07-2024.11   阿里云    - 75.66                    阿里云验证码 2.0\n2023.07-2025.08   阿里云    - 280                      spider 系列域名注册￥35*4个*2年\n                         - 1318.88                  小计\n⬇️⬇️ 总计 ⬇️⬇️                                        \n2023.07-2024.12          - 841.25                   ",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Changelog丨更新日志",frontmatter:{title:"Changelog丨更新日志",date:"2025-01-21T23:34:00.000Z",permalink:"/pages/changelog",article:!1,sidebar:!1},regularPath:"/09.%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/02.changelog.html",relativePath:"09.更新日志/02.changelog.md",key:"v-710239cc",path:"/pages/changelog/",headers:[{level:2,title:"Spider BOX 更新日志",slug:"spider-box-更新日志",normalizedTitle:"spider box 更新日志",charIndex:2},{level:2,title:"Spider API 更新日志",slug:"spider-api-更新日志",normalizedTitle:"spider api 更新日志",charIndex:875},{level:2,title:"Spider GRC 更新日志",slug:"spider-grc-更新日志",normalizedTitle:"spider grc 更新日志",charIndex:1105},{level:2,title:"WuKong Security 更新日志",slug:"wukong-security-更新日志",normalizedTitle:"wukong security 更新日志",charIndex:1176},{level:2,title:"WuKongRiskControl 更新日志",slug:"wukongriskcontrol-更新日志",normalizedTitle:"wukongriskcontrol 更新日志",charIndex:1439}],headersStr:"Spider BOX 更新日志 Spider API 更新日志 Spider GRC 更新日志 WuKong Security 更新日志 WuKongRiskControl 更新日志",content:"# Spider BOX 更新日志\n\n * 2025.02.03：多项更新：\n   * 增加并启用一个新的 loading 样式；\n   * 欢迎弹窗优化，由 sweetalert2 改为 alertify 实现，优化弹窗内容；\n   * 搜索栏去掉了社区夜幕搜索，夜幕论坛已经打不开了\n   * 搜索栏，智能候选推荐的多项修复：\n     * 修复了智能推荐只在第一次出现，后续不会出现的问题；\n     * 修复了新旧代码不兼容导致的报错问题；\n     * 优化了智能推荐显示的样式，更加和谐。\n   * 夜间模式多项修复：\n     * 夜间模式切换按钮逻辑修复，去掉旧代码，有冲突；\n     * 夜间模式下，修复【最新文章/视频】模块的背景、文字颜色；\n     * 夜间模式下，优化搜索栏，智能候选推荐部分的背景颜色、选中颜色；\n     * 夜间模式下，优化头部背景的渐变颜色（header-custom）；\n     * 夜间模式切换 cookie 逻辑优化，可以记住用户上次的设置。\n   * 右上角一言，限制字数为15字，太长了影响体验，优化了时间显示格式；\n   * 【最新文章/视频】模块底部最近时间格式优化。\n * 2024.12.09：多项更新：\n   * 新增【最新文章/视频】模块，监控各大博主的内容更新；\n   * 新增在线反馈交流系统；\n   * 侧边栏默认最小化显示；\n   * 侧边栏一级分类被点击后不再跳转；\n   * 简化顶栏、搜索栏内容，顶栏右侧显示当前日期时间；\n   * 减少广告赞助商的空间占用；\n   * 【主站推荐】模块调整，显示最常用的链接；\n   * 调整了分类，新增了一些资源收录，去掉了一些失效的资源链接；\n   * 更加详细的更新日志：https://mp.weixin.qq.com/s/ZDeJM7KAbst8er8zLRhdSg。\n * 2023.12.01：项目开发完成，网站基本定型，资源收录初步完成；\n * 2023.08.13：项目初始化完成，进入开发阶段。\n\n\n# Spider API 更新日志\n\n * 2024.01.21：增加 Frida API, ADB 命令查询；\n * 2023.12.06：增加自动化工具检测（AHBD）页面；\n * 2023.11.10：增加浏览器指纹 Fingerprint2 检测页面；\n * 2023.10.20：增加 Captcha 验证码 demo 页面；\n * 2023.10.16：增加 JS Hook 脚本；\n * 2023.08.13：项目初始化完成，进入开发阶段。\n\n\n# Spider GRC 更新日志\n\n * 2023.01.06：主页定型。\n * 2023.08.13：项目初始化完成，进入开发阶段。\n\n\n# WuKong Security 更新日志\n\n * 2025.02.01：WuKong Security BBS、在线反馈系统搭建完成；\n * 2024.07.02：确定 WuKong Security 名称，域名注册完成：wukongsec.com丨wukongsec.cn。\n * 2023.11.13：Spider 系列 ICP 备案、公安备案完成；\n * 2023.08.13：Spider 系列启动，项目初始化完成，域名注册完成：spiderbox.cn丨spiderapi.cn丨spidergrc.cn。\n\n\n# WuKongRiskControl 更新日志\n\n * 2023.01.23：WuKongRiskControl 悟空风控系统正式启动，进入开发阶段；",normalizedContent:"# spider box 更新日志\n\n * 2025.02.03：多项更新：\n   * 增加并启用一个新的 loading 样式；\n   * 欢迎弹窗优化，由 sweetalert2 改为 alertify 实现，优化弹窗内容；\n   * 搜索栏去掉了社区夜幕搜索，夜幕论坛已经打不开了\n   * 搜索栏，智能候选推荐的多项修复：\n     * 修复了智能推荐只在第一次出现，后续不会出现的问题；\n     * 修复了新旧代码不兼容导致的报错问题；\n     * 优化了智能推荐显示的样式，更加和谐。\n   * 夜间模式多项修复：\n     * 夜间模式切换按钮逻辑修复，去掉旧代码，有冲突；\n     * 夜间模式下，修复【最新文章/视频】模块的背景、文字颜色；\n     * 夜间模式下，优化搜索栏，智能候选推荐部分的背景颜色、选中颜色；\n     * 夜间模式下，优化头部背景的渐变颜色（header-custom）；\n     * 夜间模式切换 cookie 逻辑优化，可以记住用户上次的设置。\n   * 右上角一言，限制字数为15字，太长了影响体验，优化了时间显示格式；\n   * 【最新文章/视频】模块底部最近时间格式优化。\n * 2024.12.09：多项更新：\n   * 新增【最新文章/视频】模块，监控各大博主的内容更新；\n   * 新增在线反馈交流系统；\n   * 侧边栏默认最小化显示；\n   * 侧边栏一级分类被点击后不再跳转；\n   * 简化顶栏、搜索栏内容，顶栏右侧显示当前日期时间；\n   * 减少广告赞助商的空间占用；\n   * 【主站推荐】模块调整，显示最常用的链接；\n   * 调整了分类，新增了一些资源收录，去掉了一些失效的资源链接；\n   * 更加详细的更新日志：https://mp.weixin.qq.com/s/zdejm7kabst8er8zlrhdsg。\n * 2023.12.01：项目开发完成，网站基本定型，资源收录初步完成；\n * 2023.08.13：项目初始化完成，进入开发阶段。\n\n\n# spider api 更新日志\n\n * 2024.01.21：增加 frida api, adb 命令查询；\n * 2023.12.06：增加自动化工具检测（ahbd）页面；\n * 2023.11.10：增加浏览器指纹 fingerprint2 检测页面；\n * 2023.10.20：增加 captcha 验证码 demo 页面；\n * 2023.10.16：增加 js hook 脚本；\n * 2023.08.13：项目初始化完成，进入开发阶段。\n\n\n# spider grc 更新日志\n\n * 2023.01.06：主页定型。\n * 2023.08.13：项目初始化完成，进入开发阶段。\n\n\n# wukong security 更新日志\n\n * 2025.02.01：wukong security bbs、在线反馈系统搭建完成；\n * 2024.07.02：确定 wukong security 名称，域名注册完成：wukongsec.com丨wukongsec.cn。\n * 2023.11.13：spider 系列 icp 备案、公安备案完成；\n * 2023.08.13：spider 系列启动，项目初始化完成，域名注册完成：spiderbox.cn丨spiderapi.cn丨spidergrc.cn。\n\n\n# wukongriskcontrol 更新日志\n\n * 2023.01.23：wukongriskcontrol 悟空风控系统正式启动，进入开发阶段；",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"Home",frontmatter:{home:!0,heroImage:"https://static.wukongsec.com/spiderdoc/images/logo.png",heroText:"SPIDER API",tagline:"🚀SpiderAPI - 虫术 - 爬虫逆向常用 API",bannerBg:"none",features:[{title:"网络请求",details:"各种语言、各种框架、各种库的 GET、POST、添加代理、修改 TLS 指纹等",link:"/net/requests/"},{title:"数据处理",details:"数据解析提取、清洗去重、自然语言处理、分词统计、绘图制表、各种数据库存储等",link:"/pages/re/"},{title:"辅助查询",details:"JS Hook、Frida Api、ADB 命令、ARM 指令集、Linux 命令、浏览器指纹等",link:"/pages/js-hook/"}],postList:"none"},regularPath:"/",relativePath:"index.md",key:"v-64a83b72",path:"/",headers:[{level:2,title:"⚡️更新日志",slug:"⚡️更新日志",normalizedTitle:"⚡️更新日志",charIndex:654},{level:2,title:"🎉 特别致谢",slug:"🎉-特别致谢",normalizedTitle:"🎉 特别致谢",charIndex:964},{level:2,title:"💡 反馈交流",slug:"💡-反馈交流",normalizedTitle:"💡 反馈交流",charIndex:1762}],headersStr:"⚡️更新日志 🎉 特别致谢 💡 反馈交流",content:"\n\n\nSpider BOX\n\n🚀 SpiderBOX - 虫盒 - 爬虫逆向资源导航站\n\nSpider API\n\n🚀 SpiderAPI - 虫术 - 爬虫逆向常用 API\n\nSpider GRC\n\n🚀 SpiderGRC - 虫规 - 数据采集合规性建设\n\nconfig:\n  target: _blank  # _self\n\ndata:\n  - name: Spider BOX\n    desc: 🚀 SpiderBOX - 虫盒 - 爬虫逆向资源导航站\n    link: https://spiderbox.cn/\n    bgColor: '#f1f1f1'\n    textColor: '#2A3344'\n  - name: Spider API\n    desc: 🚀 SpiderAPI - 虫术 - 爬虫逆向常用 API\n    link: https://spiderapi.cn/\n    bgColor: '#F0DFB1'\n    textColor: '#2A3344'\n  - name: Spider GRC\n    desc: 🚀 SpiderGRC - 虫规 - 数据采集合规性建设\n    link: https://spidergrc.cn/\n    bgColor: '#DFEEE7'\n    textColor: '#2A3344'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n\n# ⚡️更新日志\n\n❗❗❗注意\n\n本项在业余时间不断完善，仍处于初期建设当中，面向所有工程师征集常用工具/代码，所有内容未最终确定，随时可能变化！\n\n * 2024-01-21：增加 Frida API, ADB 命令查询；\n * 2023-12-06：增加自动化工具检测（AHBD）页面；\n * 2023-11-10：增加浏览器指纹 Fingerprint2 检测页面；\n * 2023-10-20：增加 Captcha 验证码 demo 页面；\n * 2023-10-16：增加 JS Hook 脚本；\n * 2023-08-13：Spider BOX、Spider API、Spider GRC 正式立项。\n\n\n\n# 🎉 特别致谢\n\n李玺\n\n中科大数据研究院高级工程师\n\ngeekbyte\n\n移动安全、tls/ja3指纹，公众号编角料\n\n十一姐\n\nJS 逆向，公众号逆向OneByOne\n\n- name: 李玺\n  desc: 中科大数据研究院高级工程师\n  avatar: https://static.wukongsec.com/spiderdoc/images/other/lx.jpg\n  link: https://blog.csdn.net/weixin_43582101\n  bgColor: '#FCDBA0' # 可选，默认var(--bodyBg)。颜色值有#号时请添加单引号\n  textColor: '#A05F2C' # 可选，默认var(--textColor)\n- name: geekbyte\n  desc: 移动安全、tls/ja3指纹，公众号编角料\n  avatar: https://static.wukongsec.com/spiderdoc/images/other/geekbyte.jpg\n  link: https://blog.csdn.net/Y_morph\n  bgColor: '#CBEAFA'\n  textColor: '#6854A1'\n- name: 十一姐\n  desc: JS 逆向，公众号逆向OneByOne\n  avatar: https://static.wukongsec.com/spiderdoc/images/other/shiyi.jpg\n  link: https://blog.csdn.net/weixin_43411585\n  bgColor: '#f1f1f1'\n  textColor: '#2A3344'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n\n\n# 💡 反馈交流\n\n对本站有任何问题和想法，请给我提 Issue。技术交流、商务合作、广告赞助可以通过以下方式联系我们：\n\n                           \n站长微信 (备注来意)   站长公众号 (虫技)   QQ交流群 (941013658)",normalizedContent:"\n\n\nspider box\n\n🚀 spiderbox - 虫盒 - 爬虫逆向资源导航站\n\nspider api\n\n🚀 spiderapi - 虫术 - 爬虫逆向常用 api\n\nspider grc\n\n🚀 spidergrc - 虫规 - 数据采集合规性建设\n\nconfig:\n  target: _blank  # _self\n\ndata:\n  - name: spider box\n    desc: 🚀 spiderbox - 虫盒 - 爬虫逆向资源导航站\n    link: https://spiderbox.cn/\n    bgcolor: '#f1f1f1'\n    textcolor: '#2a3344'\n  - name: spider api\n    desc: 🚀 spiderapi - 虫术 - 爬虫逆向常用 api\n    link: https://spiderapi.cn/\n    bgcolor: '#f0dfb1'\n    textcolor: '#2a3344'\n  - name: spider grc\n    desc: 🚀 spidergrc - 虫规 - 数据采集合规性建设\n    link: https://spidergrc.cn/\n    bgcolor: '#dfeee7'\n    textcolor: '#2a3344'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n\n# ⚡️更新日志\n\n❗❗❗注意\n\n本项在业余时间不断完善，仍处于初期建设当中，面向所有工程师征集常用工具/代码，所有内容未最终确定，随时可能变化！\n\n * 2024-01-21：增加 frida api, adb 命令查询；\n * 2023-12-06：增加自动化工具检测（ahbd）页面；\n * 2023-11-10：增加浏览器指纹 fingerprint2 检测页面；\n * 2023-10-20：增加 captcha 验证码 demo 页面；\n * 2023-10-16：增加 js hook 脚本；\n * 2023-08-13：spider box、spider api、spider grc 正式立项。\n\n\n\n# 🎉 特别致谢\n\n李玺\n\n中科大数据研究院高级工程师\n\ngeekbyte\n\n移动安全、tls/ja3指纹，公众号编角料\n\n十一姐\n\njs 逆向，公众号逆向onebyone\n\n- name: 李玺\n  desc: 中科大数据研究院高级工程师\n  avatar: https://static.wukongsec.com/spiderdoc/images/other/lx.jpg\n  link: https://blog.csdn.net/weixin_43582101\n  bgcolor: '#fcdba0' # 可选，默认var(--bodybg)。颜色值有#号时请添加单引号\n  textcolor: '#a05f2c' # 可选，默认var(--textcolor)\n- name: geekbyte\n  desc: 移动安全、tls/ja3指纹，公众号编角料\n  avatar: https://static.wukongsec.com/spiderdoc/images/other/geekbyte.jpg\n  link: https://blog.csdn.net/y_morph\n  bgcolor: '#cbeafa'\n  textcolor: '#6854a1'\n- name: 十一姐\n  desc: js 逆向，公众号逆向onebyone\n  avatar: https://static.wukongsec.com/spiderdoc/images/other/shiyi.jpg\n  link: https://blog.csdn.net/weixin_43411585\n  bgcolor: '#f1f1f1'\n  textcolor: '#2a3344'\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n\n\n# 💡 反馈交流\n\n对本站有任何问题和想法，请给我提 issue。技术交流、商务合作、广告赞助可以通过以下方式联系我们：\n\n                           \n站长微信 (备注来意)   站长公众号 (虫技)   qq交流群 (941013658)",charsets:{cjk:!0},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3},{title:"博客文章",frontmatter:{archivesPage:!0,title:"博客文章",permalink:"/blog/",article:!1},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-9514734e",path:"/blog/",headersStr:null,content:"",normalizedContent:"",charsets:{},lastUpdated:"2025/07/31, 06:45:36",lastUpdatedTimestamp:1753944336e3}],themeConfig:{nav:[{text:"首页",link:"/"},{text:"目录",link:"/pages/toc/"},{text:"验证码",link:"/captcha/",items:[{text:"国内验证码",items:[{text:"顶象 DING XIANG",link:"/captcha/dingxiang/"},{text:"数美 NEXTDATA",link:"/captcha/shumei/"},{text:"易盾 NETEASE YIDUN",link:"/captcha/yidun/"},{text:"极验 GEETEST",link:"/captcha/geetest-v2/",items:[{text:"行为验证 2.0",link:"/captcha/geetest-v2/"},{text:"行为验证 3.0",link:"/captcha/geetest-v3/"},{text:"行为验证 4.0",link:"/captcha/geetest-v4/"}]},{text:"阿里云云盾验证码",link:"/captcha/aliyun-v1/",items:[{text:"阿里云云盾验证码 1.0",link:"/captcha/aliyun-v1/"},{text:"阿里云云盾验证码 2.0",link:"/captcha/aliyun-v2/"}]},{text:"腾讯天御 T-Sec",link:"/captcha/tencent/"},{text:"小红书 redCaptcha",link:"/captcha/redcaptcha/"},{text:"小盾 XIAODUN",link:"/captcha/xiaodun/"},{text:"云片 YUNPIAN",link:"/captcha/yunpian/"},{text:"三六零天御",link:"/captcha/360/"},{text:"螺丝帽 Luosimao",link:"/captcha/luosimao/"},{text:"Vaptcha",link:"/captcha/vaptcha/"},{text:"V5 验证",link:"/captcha/verify5/"},{text:"凯格 KYGER",link:"/captcha/kgcaptcha/"},{text:"友验 FastYotest",link:"/captcha/fastyotest/"}]},{text:"国外验证码",items:[{text:"Cloudflare Turnstile",link:"/captcha/turnstile-managed/",items:[{text:"Turnstile Managed Challenge",link:"/captcha/turnstile-managed/"},{text:"Turnstile Non-Interactive Challenge",link:"/captcha/turnstile-non-interactive/"},{text:"Turnstile Invisible Challenge",link:"/captcha/turnstile-invisible/"}]},{text:"Google reCAPTCHA",link:"/captcha/recaptcha-v2-checkbox/",items:[{text:"reCAPTCHA V2 Checkbox",link:"/captcha/recaptcha-v2-checkbox/"},{text:"reCAPTCHA v2 Invisible",link:"/captcha/recaptcha-v2-invisible/"},{text:"reCAPTCHA v2 Enterprise",link:"/captcha/recaptcha-v2-enterprise/"},{text:"reCAPTCHA v3",link:"/captcha/recaptcha-v3/"},{text:"reCAPTCHA v3 Enterprise",link:"/captcha/recaptcha-v3-enterprise/"}]},{text:"hCaptcha",link:"/captcha/hcaptcha-easy/",items:[{text:"hCaptcha Easy",link:"/captcha/hcaptcha-easy/"},{text:"hCaptcha Medium",link:"/captcha/hcaptcha-medium/"},{text:"hCaptcha Difficult",link:"/captcha/hcaptcha-difficult/"},{text:"hCaptcha Invisible",link:"/captcha/hcaptcha-invisible/"},{text:"hCaptcha Pro",link:"/captcha/hcaptcha-pro/"},{text:"hCaptcha Enterprise",link:"/captcha/hcaptcha-enterprise/"}]},{text:"Arkose Labs FunCAPTCHA",link:"/captcha/funcaptcha/"},{text:"DataDome CAPTCHA",link:"/captcha/datadome/"},{text:"PerimeterX丨HUMAN Challenge",link:"/captcha/perimeterx/"},{text:"AWS (Amazon) WAF Captcha",link:"/captcha/aws/"},{text:"MTCaptcha",link:"/captcha/mtcaptcha/"},{text:"Lemin CAPTCHA丨Capy Puzzle",link:"/captcha/lemin/"},{text:"Yandex SmartCaptcha",link:"/captcha/yandex/"},{text:"mCaptcha",link:"/captcha/mcaptcha/"},{text:"KeyCAPTCHA",link:"/captcha/keycaptcha/"},{text:"CyberSiARA",link:"/captcha/cybersiara/"},{text:"Friendly Captcha",link:"/captcha/friendly-captcha/"},{text:"ARCaptcha",link:"/captcha/arcaptcha/"},{text:"CaptchaFox",link:"/captcha/captchafox/"}]}]},{text:"辅助查询",link:"/pages/js-hook/",items:[{text:"辅助脚本",items:[{text:"JS Hook",link:"/pages/js-hook/"},{text:"Frida API",link:"/pages/frida-api/"},{text:"babel",link:"/pages/babel/"}]},{text:"命令查询",items:[{text:"Linux 命令",link:"/pages/linux/"},{text:"ADB 命令",link:"/pages/adb/"},{text:"ARM 指令集",link:"/pages/arm/"},{text:"Dalvik 指令集",link:"/pages/dalvik/"}]},{text:"指纹信息",items:[{text:"CreepJS",link:"/pages/creepjs/"},{text:"Fingerprint2",link:"/pages/fingerprint2/"},{text:"自动化工具检测",link:"/pages/AHBD/"}]},{text:"加密算法",items:[{text:"URL",link:"/pages/url/"},{text:"Unicode",link:"/pages/unicode/"},{text:"Base64",link:"/pages/base64/"},{text:"MD5",link:"/pages/md5/"},{text:"HMAC",link:"/pages/hmac/"},{text:"SHA",link:"/pages/sha/"},{text:"RSA",link:"/pages/rsa/"},{text:"AES",link:"/pages/aes/"},{text:"DES",link:"/pages/des/"},{text:"3DES",link:"/pages/3des/"},{text:"RC4",link:"/pages/rc4/"},{text:"SM",link:"/pages/sm/"}]}]},{text:"网络请求",link:"/net/requests/",items:[{text:"基本请求",items:[{text:"Python",link:"/net/requests/",items:[{text:"requests",link:"/net/requests/"},{text:"urllib",link:"/net/urllib/"},{text:"aiohttp",link:"/net/aiohttp/"},{text:"httpx",link:"/net/httpx/"},{text:"pyhttpx",link:"/net/pyhttpx/"},{text:"tls_client",link:"/net/tls_client/"},{text:"curl_cffi",link:"/net/curl_cffi/"},{text:"requests_go",link:"/net/requests_go/"},{text:"pycurl",link:"/net/pycurl/"},{text:"websocket",link:"/net/websocket/"}]}]},{text:"异步协程",items:[{text:"asyncio",link:"/pages/asyncio/"},{text:"gevent",link:"/pages/gevent/"}]},{text:"多线程",items:[{text:"threading",link:"/pages/threading/"},{text:"vthread",link:"/pages/vthread/"}]},{text:"多进程",items:[{text:"multiprocessing",link:"/pages/multiprocessing/"}]}]},{text:"框架接口",link:"/pages/selenium/",items:[{text:"自动化框架",items:[{text:"selenium",link:"/pages/selenium/"},{text:"pyppeteer",link:"/pages/pyppeteer/"},{text:"playwright",link:"/pages/playwright/"},{text:"splash",link:"/pages/splash/"},{text:"DrissionPage",link:"/pages/DrissionPage/"},{text:"appium",link:"/pages/appium/"},{text:"airtest",link:"/pages/airtest/"}]},{text:"接口编写",items:[{text:"FastAPI",link:"/pages/FastAPI/"},{text:"flask",link:"/pages/flask/"},{text:"express",link:"/pages/express/"}]},{text:"爬虫框架",items:[{text:"scrapy",link:"/pages/scrapy/"},{text:"feapder",link:"/pages/feapder/"},{text:"pyspider",link:"/pages/pyspider/"}]}]},{text:"数据处理",link:"/pages/re/",items:[{text:"数据提取",items:[{text:"re",link:"/pages/re/"},{text:"lxml",link:"/pages/lxml/"},{text:"BeautifulSoup",link:"/pages/BeautifulSoup/"},{text:"pyquery",link:"/pages/pyquery/"},{text:"selectolax",link:"/pages/selectolax/"}]},{text:"数据分析",items:[{text:"wordcloud",link:"/pages/wordcloud/"},{text:"jieba",link:"/pages/jieba/"},{text:"pandas",link:"/pages/pandas/"},{text:"NumPy",link:"/pages/NumPy/"},{text:"SciPy",link:"/pages/SciPy/"}]},{text:"制表绘图",items:[{text:"matplotlib",link:"/pages/matplotlib/"},{text:"pyecharts",link:"/pages/pyecharts/"},{text:"plotly",link:"/pages/plotly/"},{text:"seaborn",link:"/pages/seaborn/"}]},{text:"数据存储",items:[{text:"文件存储",link:"/pages/file-storage/"},{text:"MySQL",link:"/pages/MySQL/"},{text:"MongoDB",link:"/pages/MongoDB/"},{text:"Redis",link:"/pages/Redis/"},{text:"SQLite",link:"/pages/SQLite/"}]}]},{text:"悟空风控",link:"/pages/goku/"},{text:"赞助",link:"/pages/sponsor/"}],sidebarDepth:3,leftTitle:"虫术",logo:"https://static.wukongsec.com/spiderdoc/images/logo.png",repo:"WuKongSecurity/SpiderAPI",searchMaxSuggestions:10,lastUpdated:"上次更新",docsRepo:"WuKongSecurity/SpiderAPI",docsBranch:"main",docsDir:"docs",editLinks:!0,editLinkText:"帮助我们改善此页",sidebar:{"/01.目录/":[{title:"目录",collapsable:!1,children:[["01.目录/01.目录.md","目录","/pages/toc"]]}],catalogue:{},"/02.验证码/":[["01.captcha.md","目录总览","/captcha/"],{title:"国内验证码",collapsable:!1,children:[["02.国内验证码/01.顶象 DING XIANG.md","顶象 DING XIANG","/captcha/dingxiang/"],["02.国内验证码/02.数美 NEXTDATA.md","数美 NEXTDATA","/captcha/shumei/"],["02.国内验证码/03.易盾 NETEASE YIDUN.md","易盾 NETEASE YIDUN","/captcha/yidun/"],{title:"极验 GEETEST",collapsable:!1,children:[["02.国内验证码/04.极验 GEETEST/01.行为验证 2.0.md","极验行为验证 2.0","/captcha/geetest-v2/"],["02.国内验证码/04.极验 GEETEST/02.行为验证 3.0.md","极验行为验证 3.0","/captcha/geetest-v3/"],["02.国内验证码/04.极验 GEETEST/03.行为验证 4.0.md","极验行为验证 4.0","/captcha/geetest-v4/"]]},{title:"阿里云云盾验证码",collapsable:!1,children:[["02.国内验证码/05.阿里云云盾验证码/01.阿里云云盾验证码 1.0.md","阿里云云盾验证码 1.0","/captcha/aliyun-v1/"],["02.国内验证码/05.阿里云云盾验证码/02.阿里云云盾验证码 2.0.md","阿里云云盾验证码 2.0","/captcha/aliyun-v2/"]]},["02.国内验证码/06.腾讯天御 T-Sec.md","腾讯天御 T-Sec","/captcha/tencent/"],["02.国内验证码/07.小红书 redCaptcha.md","小红书 redCaptcha","/captcha/redcaptcha/"],["02.国内验证码/08.小盾 XIAODUN.md","小盾 XIAODUN","/captcha/xiaodun/"],["02.国内验证码/09.云片 YUNPIAN.md","云片 YUNPIAN","/captcha/yunpian/"],["02.国内验证码/10.三六零天御.md","三六零天御","/captcha/360/"],["02.国内验证码/11.螺丝帽 Luosimao.md","螺丝帽 Luosimao","/captcha/luosimao/"],["02.国内验证码/12.Vaptcha.md","Vaptcha","/captcha/vaptcha/"],["02.国内验证码/13.V5 验证.md","V5 验证","/captcha/verify5/"],["02.国内验证码/14.凯格 KYGER.md","凯格 KYGER","/captcha/kgcaptcha/"],["02.国内验证码/15.友验 FastYotest.md","友验 FastYotest","/captcha/fastyotest/"]]},{title:"国外验证码",collapsable:!1,children:[{title:"Cloudflare Turnstile",collapsable:!1,children:[["03.国外验证码/01.Cloudflare Turnstile/01.Turnstile Managed Challenge.md","Turnstile Managed Challenge","/captcha/turnstile-managed"],["03.国外验证码/01.Cloudflare Turnstile/02.Turnstile Non-Interactive Challenge.md","Turnstile Non-Interactive Challenge","/captcha/turnstile-non-interactive"],["03.国外验证码/01.Cloudflare Turnstile/03.Turnstile Invisible Challenge.md","Turnstile Invisible Challenge","/captcha/turnstile-invisible"]]},{title:"Google reCAPTCHA",collapsable:!1,children:[["03.国外验证码/02.Google reCAPTCHA/01.reCAPTCHA V2 Checkbox.md","reCAPTCHA V2 Checkbox","/captcha/recaptcha-v2-checkbox"],["03.国外验证码/02.Google reCAPTCHA/02.reCAPTCHA V2 Invisible.md","reCAPTCHA V2 Invisible","/captcha/recaptcha-v2-invisible"],["03.国外验证码/02.Google reCAPTCHA/03.reCAPTCHA V2 Enterprise.md","reCAPTCHA V2 Enterprise","/captcha/recaptcha-v2-enterprise"],["03.国外验证码/02.Google reCAPTCHA/04.reCAPTCHA v3.md","reCAPTCHA v3","/captcha/recaptcha-v3"],["03.国外验证码/02.Google reCAPTCHA/05.reCAPTCHA V3 Enterprise.md","reCAPTCHA V3 Enterprise","/captcha/recaptcha-v3-enterprise"]]},{title:"hCaptcha",collapsable:!1,children:[["03.国外验证码/03.hCaptcha/01.hCaptcha Easy.md","hCaptcha Easy","/captcha/hcaptcha-easy/"],["03.国外验证码/03.hCaptcha/02.hCaptcha Medium.md","hCaptcha Medium","/captcha/hcaptcha-medium/"],["03.国外验证码/03.hCaptcha/03.hCaptcha Difficult.md","hCaptcha Difficult","/captcha/hcaptcha-difficult/"],["03.国外验证码/03.hCaptcha/04.hCaptcha Invisible.md","hCaptcha Invisible","/captcha/hcaptcha-invisible/"],["03.国外验证码/03.hCaptcha/05.hCaptcha Pro.md","hCaptcha Pro","/captcha/hcaptcha-pro/"],["03.国外验证码/03.hCaptcha/06.hCaptcha Enterprise.md","hCaptcha Enterprise","/captcha/hcaptcha-enterprise/"]]},["03.国外验证码/04.Arkose Labs FunCAPTCHA.md","Arkose Labs FunCAPTCHA","/captcha/funcaptcha/"],["03.国外验证码/05.DataDome CAPTCHA.md","DataDome CAPTCHA","/captcha/datadome/"],["03.国外验证码/06.PerimeterX丨HUMAN Challenge.md","PerimeterX | HUMAN Challenge","/captcha/perimeterx/"],["03.国外验证码/07.AWS (Amazon) WAF Captcha.md","AWS (Amazon) WAF Captcha","/captcha/aws"],["03.国外验证码/08.MTCaptcha.md","MTCaptcha","/captcha/mtcaptcha"],["03.国外验证码/09.Lemin CAPTCHA丨Capy Puzzle.md","Lemin CAPTCHA | Capy Puzzle","/captcha/lemin/"],["03.国外验证码/10.Yandex SmartCaptcha.md","Yandex SmartCaptcha","/captcha/yandex/"],["03.国外验证码/11.mCaptcha.md","mCaptcha","/captcha/mcaptcha/"],["03.国外验证码/12.KeyCAPTCHA.md","KeyCAPTCHA","/captcha/keycaptcha/"],["03.国外验证码/13.CyberSiARA.md","CyberSiARA","/captcha/cybersiara/"],["03.国外验证码/14.Friendly Captcha.md","Friendly Captcha","/captcha/friendly-captcha/"],["03.国外验证码/15.ARCaptcha.md","ARCaptcha","/captcha/arcaptcha/"],["03.国外验证码/16.CaptchaFox.md","CaptchaFox","/captcha/captchafox/"]]}],"/03.辅助查询/":[{title:"辅助脚本",collapsable:!1,children:[["01.辅助脚本/01.JS HOOK.md","JS Hook","/pages/js-hook"],["01.辅助脚本/02.Frida API.md","Frida API","/pages/frida-api"],["01.辅助脚本/03.babel 脚本.md","Babel","/pages/babel"]]},{title:"命令查询",collapsable:!1,children:[["02.命令查询/01.Linux 命令.md","Linux 命令","/pages/linux"],["02.命令查询/02.ADB 命令.md","ADB 命令","/pages/adb"],["02.命令查询/03.ARM 指令集.md","ARM 指令集","/pages/arm"],["02.命令查询/04.Dalvik 指令集.md","Dalvik 指令集","/pages/dalvik"]]},{title:"指纹信息",collapsable:!1,children:[["03.指纹信息/01.CreepJS.md","CreepJS","/pages/creepjs/"],["03.指纹信息/02.Fingerprint2.md","Fingerprint2","/pages/fingerprint2/"],["03.指纹信息/03.自动化工具检测.md","自动化工具检测","/pages/AHBD/"]]},{title:"加密算法",collapsable:!1,children:[["04.加密算法/01.url.md","URL","/pages/url/"],["04.加密算法/02.unicode.md","Unicode","/pages/unicode"],["04.加密算法/03.base64.md","Base64","/pages/base64"],["04.加密算法/04.md5.md","MD5","/pages/md5"],["04.加密算法/05.hmac.md","HMAC","/pages/hmac"],["04.加密算法/06.sha.md","SHA","/pages/sha"],["04.加密算法/07.rsa.md","RSA","/pages/rsa"],["04.加密算法/08.aes.md","AES","/pages/aes"],["04.加密算法/09.des.md","DES","/pages/des"],["04.加密算法/10.3des.md","3DES","/pages/3des"],["04.加密算法/11.rc4.md","RC4","/pages/rc4"],["04.加密算法/12.sm.md","SM","/pages/sm"]]}],"/04.网络请求/":[{title:"基本请求",collapsable:!1,children:[{title:"Python",collapsable:!1,children:[["01.基本请求/01.Python/01.requests.md","requests","/net/requests"],["01.基本请求/01.Python/02.urllib.md","urllib","/net/urllib"],["01.基本请求/01.Python/03.aiohttp.md","aiohttp","/net/aiohttp"],["01.基本请求/01.Python/04.httpx.md","httpx","/net/httpx"],["01.基本请求/01.Python/05.pyhttpx.md","pyhttpx","/net/pyhttpx"],["01.基本请求/01.Python/06.tls_client.md","tls_client","/net/tls_client"],["01.基本请求/01.Python/07.curl_cffi.md","curl_cffi","/net/curl_cffi/"],["01.基本请求/01.Python/08.requests_go.md","requests_go","/net/requests_go/"],["01.基本请求/01.Python/09.pycurl.md","pycurl","/net/pycurl/"],["01.基本请求/01.Python/10.websocket.md","websocket","/net/websocket"],["01.基本请求/01.Python/11.pysocks.md","pysocks","/net/pysocks/"]]}]},{title:"异步协程",collapsable:!1,children:[["02.异步协程/01.asyncio.md","asyncio","/pages/asyncio/"],["02.异步协程/02.gevent.md","gevent","/pages/gevent/"]]},{title:"多线程",collapsable:!1,children:[["03.多线程/01.threading.md","threading","/pages/threading/"],["03.多线程/02.vthread.md","vthread","/pages/vthread/"]]},{title:"多进程",collapsable:!1,children:[["04.多进程/01.multiprocessing.md","multiprocessing","/pages/multiprocessing/"]]}],"/05.框架接口/":[{title:"自动化框架",collapsable:!1,children:[["01.自动化框架/01.selenium.md","selenium","/pages/selenium"],["01.自动化框架/02.pyppeteer.md","pyppeteer","/pages/pyppeteer"],["01.自动化框架/03.playwright.md","playwright","/pages/playwright"],["01.自动化框架/04.splash.md","splash","/pages/splash"],["01.自动化框架/05.DrissionPage.md","DrissionPage","/pages/DrissionPage"],["01.自动化框架/06.appium.md","appium","/pages/appium"],["01.自动化框架/07.airtest.md","airtest","/pages/airtest"]]},{title:"爬虫框架",collapsable:!1,children:[["02.爬虫框架/01.scrapy.md","scrapy","/pages/scrapy"],["02.爬虫框架/02.feapder.md","feapder","/pages/feapder"],["02.爬虫框架/03.pyspider.md","pyspider","/pages/pyspider"]]},{title:"接口编写",collapsable:!1,children:[["03.接口编写/01.FastAPI.md","FastAPI","/pages/FastAPI"],["03.接口编写/02.flask.md","flask","/pages/flask"],["03.接口编写/03.express.md","express","/pages/express"]]}],"/06.数据处理/":[{title:"解析提取",collapsable:!1,children:[["01.解析提取/01.正则 re.md","正则 re","/pages/re/"],["01.解析提取/02.lxml.md","lxml","/pages/lxml/"],["01.解析提取/03.BeautifulSoup.md","BeautifulSoup","/pages/BeautifulSoup/"],["01.解析提取/04.pyquery.md","pyquery","/pages/pyquery/"],["01.解析提取/05.selectolax.md","selectolax","/pages/selectolax/"],["01.解析提取/06.GeneralNewsExtractor.md","GeneralNewsExtractor","/pages/6010ec/"],["01.解析提取/07.newspaper.md","newspaper","/pages/25a157/"]]},{title:"数据分析",collapsable:!1,children:[["02.数据分析/01.wordcloud.md","wordcloud","/pages/wordcloud/"],["02.数据分析/02.jieba.md","jieba","/pages/jieba/"],["02.数据分析/03.pandas.md","pandas","/pages/pandas/"],["02.数据分析/04.NumPy.md","NumPy","/pages/NumPy/"],["02.数据分析/05.SciPy.md","SciPy","/pages/SciPy/"]]},{title:"制表绘图",collapsable:!1,children:[["03.制表绘图/01.matplotlib.md","matplotlib","/pages/matplotlib/"],["03.制表绘图/02.pyecharts.md","pyecharts","/pages/pyecharts/"],["03.制表绘图/03.plotly.md","plotly","/pages/plotly/"],["03.制表绘图/04.seaborn.md","seaborn","/pages/seaborn/"]]},{title:"数据存储",collapsable:!1,children:[["04.数据存储/01.文件存储.md","文件存储","/pages/file-storage/"],["04.数据存储/02.MySQL.md","MySQL","/pages/MySQL/"],["04.数据存储/03.MongoDB.md","MongoDB","/pages/MongoDB/"],["04.数据存储/04.Redis.md","Redis","/pages/Redis/"],["04.数据存储/05.SQLite.md","SQLite","/pages/SQLite/"]]}],"/07.悟空风控/":[["01.悟空风控.md","悟空风控模拟检测丨Coming Soon...","/pages/goku"]],"/08.赞助/":[["01.赞助.md","支持我们","/pages/sponsor"]],"/09.更新日志/":[["01.SpiderBox QA.md","SpiderBox QA / Changelog","/pages/spiderbox-qa-changelog"],["02.changelog.md","Changelog丨更新日志","/pages/changelog"]]},updateBar:{showToArticle:!1},pageStyle:"line",category:!1,tag:!1,author:{name:"BOB",href:"https://github.com/TRHX"},htmlModules:{sidebarT:'\n    <a href="https://www.qg.net/product/proxyip.html?web=spiderapi-s" target="_blank">\n        <img src="https://static.wukongsec.com/spiderbox/images/ads/qg2.jpg" alt="bright data" class="no-zoom" style="width: 100%;border-radius: 5px;">\n    </a>\n    <a href="https://get.brightdata.com/proxyb" target="_blank">\n        <img src="https://static.wukongsec.com/spiderbox/images/ads/brightdata2.jpg" alt="bright data" class="no-zoom" style="width: 100%;border-radius: 5px;">\n    </a>\n    <p style="text-align: center;margin: 0;color: #999;font-size: 12px;">(进入注册为作者充电)</p>\n    '}}};var xs=t(123),ws=t(124),As=t(22);var Es={computed:{$filterPosts(){return this.$site.pages.filter(n=>{const{frontmatter:{pageComponent:e,article:t,home:a}}=n;return!(e||!1===t||!0===a)})},$sortPosts(){return(n=this.$filterPosts).sort((n,e)=>{const t=n.frontmatter.sticky,a=e.frontmatter.sticky;return t&&a?t==a?Object(As.a)(n,e):t-a:t&&!a?-1:!t&&a?1:Object(As.a)(n,e)}),n;var n},$sortPostsByDate(){return(n=this.$filterPosts).sort((n,e)=>Object(As.a)(n,e)),n;var n},$groupPosts(){return function(n){const e={},t={};for(let a=0,r=n.length;a<r;a++){const{frontmatter:{categories:r,tags:i}}=n[a];"array"===Object(As.n)(r)&&r.forEach(t=>{t&&(e[t]||(e[t]=[]),e[t].push(n[a]))}),"array"===Object(As.n)(i)&&i.forEach(e=>{e&&(t[e]||(t[e]=[]),t[e].push(n[a]))})}return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags(){return function(n){const e=[],t=[];for(let t in n.categories)e.push({key:t,length:n.categories[t].length});for(let e in n.tags)t.push({key:e,length:n.tags[e].length});return{categories:e,tags:t}}(this.$groupPosts)}}};Qt.component(xs.default),Qt.component(ws.default);function Cs(n){return n.toString().padStart(2,"0")}t(277);Qt.component("AHBD",()=>Promise.all([t.e(0),t.e(4)]).then(t.bind(null,402))),Qt.component("captcha-aliyun-v1",()=>Promise.all([t.e(0),t.e(5)]).then(t.bind(null,403))),Qt.component("captcha-fastyotest",()=>Promise.all([t.e(0),t.e(6)]).then(t.bind(null,404))),Qt.component("captcha-geetest-v2",()=>Promise.all([t.e(0),t.e(7)]).then(t.bind(null,405))),Qt.component("captcha-geetest-v3",()=>Promise.all([t.e(0),t.e(8)]).then(t.bind(null,406))),Qt.component("captcha-geetest-v4",()=>Promise.all([t.e(0),t.e(9)]).then(t.bind(null,407))),Qt.component("captcha-turnstile-invisible-challenge",()=>Promise.all([t.e(0),t.e(10)]).then(t.bind(null,408))),Qt.component("captcha-turnstile-managed-challenge",()=>Promise.all([t.e(0),t.e(11)]).then(t.bind(null,409))),Qt.component("captcha-vaptcha",()=>Promise.all([t.e(0),t.e(13)]).then(t.bind(null,410))),Qt.component("captcha-turnstile-non-interactive-challenge",()=>Promise.all([t.e(0),t.e(12)]).then(t.bind(null,411))),Qt.component("captcha-verify5",()=>Promise.all([t.e(0),t.e(14)]).then(t.bind(null,412))),Qt.component("Badge",()=>Promise.all([t.e(0),t.e(15)]).then(t.bind(null,538))),Qt.component("CodeGroup",()=>Promise.resolve().then(t.bind(null,124))),Qt.component("CodeBlock",()=>Promise.resolve().then(t.bind(null,123)));t(278),t(129),t(279),t(280);var Ss=[({Vue:n,options:e,router:t,siteData:a,isServer:r})=>{r||t.afterEach(()=>{var n;n=function(){setTimeout((function(){void 0===window._AdBlockInit&&function(){const n=document.getElementsByClassName("wwads-cn"),e=document.querySelector(".wwads-content");n[0]&&!e&&(n[0].innerHTML="<style>.wwads-horizontal,.wwads-vertical{background-color:#f4f8fa;padding:5px;min-height:120px;margin-top:20px;box-sizing:border-box;border-radius:3px;font-family:sans-serif;display:flex;min-width:150px;position:relative;overflow:hidden;}.wwads-horizontal{flex-wrap:wrap;justify-content:center}.wwads-vertical{flex-direction:column;align-items:center;padding-bottom:32px}.wwads-horizontal a,.wwads-vertical a{text-decoration:none}.wwads-horizontal .wwads-img,.wwads-vertical .wwads-img{margin:5px}.wwads-horizontal .wwads-content,.wwads-vertical .wwads-content{margin:5px}.wwads-horizontal .wwads-content{flex:130px}.wwads-vertical .wwads-content{margin-top:10px}.wwads-horizontal .wwads-text,.wwads-content .wwads-text{font-size:14px;line-height:1.4;color:#0e1011;-webkit-font-smoothing:antialiased}.wwads-horizontal .wwads-poweredby,.wwads-vertical .wwads-poweredby{display:block;font-size:11px;color:#a6b7bf;margin-top:1em}.wwads-vertical .wwads-poweredby{position:absolute;left:10px;bottom:10px}.wwads-horizontal .wwads-poweredby span,.wwads-vertical .wwads-poweredby span{transition:all 0.2s ease-in-out;margin-left:-1em}.wwads-horizontal .wwads-poweredby span:first-child,.wwads-vertical .wwads-poweredby span:first-child{opacity:0}.wwads-horizontal:hover .wwads-poweredby span,.wwads-vertical:hover .wwads-poweredby span{opacity:1;margin-left:0}.wwads-horizontal .wwads-hide,.wwads-vertical .wwads-hide{position:absolute;right:-23px;bottom:-23px;width:46px;height:46px;border-radius:23px;transition:all 0.3s ease-in-out;cursor:pointer;}.wwads-horizontal .wwads-hide:hover,.wwads-vertical .wwads-hide:hover{background:rgb(0 0 0 /0.05)}.wwads-horizontal .wwads-hide svg,.wwads-vertical .wwads-hide svg{position:absolute;left:10px;top:10px;fill:#a6b7bf}.wwads-horizontal .wwads-hide:hover svg,.wwads-vertical .wwads-hide:hover svg{fill:#3E4546}</style><a href='https://wwads.cn/page/whitelist-wwads' class='wwads-img' target='_blank' rel='nofollow'><img src='https://fastly.jsdelivr.net/gh/xugaoyi/image_store@master/blog/wwads.2a3pidhlh4ys.webp' width='130'></a><div class='wwads-content'><a href='https://wwads.cn/page/whitelist-wwads' class='wwads-text' target='_blank' rel='nofollow'>为了本站的长期运营，请将我们的网站加入广告拦截器的白名单，感谢您的支持！<span style='color: #11a8cd'>如何添加白名单?</span></a><a href='https://wwads.cn/page/end-user-privacy' class='wwads-poweredby' title='万维广告 ～ 让广告更优雅，且有用' target='_blank'><span>广告</span></a></div><a class='wwads-hide' onclick='parentNode.remove()' title='隐藏广告'><svg xmlns='http://www.w3.org/2000/svg' width='6' height='7'><path d='M.879.672L3 2.793 5.121.672a.5.5 0 11.707.707L3.708 3.5l2.12 2.121a.5.5 0 11-.707.707l-2.12-2.12-2.122 2.12a.5.5 0 11-.707-.707l2.121-2.12L.172 1.378A.5.5 0 01.879.672z'></path></svg></a>")}()}),3e3)},"complete"===document.readyState||"interactive"===document.readyState?setTimeout(n,1):document.addEventListener("DOMContentLoaded",n),setTimeout(()=>{const n=document.querySelector(".page-wwads");if(!n)return;const e=n.querySelector(".wwads-hide");e&&(e.onclick=()=>{n.style.display="none"}),"none"===n.style.display&&(n.style.display="flex")},900)})},({Vue:n,options:e,router:t,siteData:a})=>{a.pages.map(n=>{const{frontmatter:{date:e,author:t}}=n;"string"==typeof e&&"Z"===e.charAt(e.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return`${n.getUTCFullYear()}-${Cs(n.getUTCMonth()+1)}-${Cs(n.getUTCDate())} ${Cs(n.getUTCHours())}:${Cs(n.getUTCMinutes())}:${Cs(n.getUTCSeconds())}`}(e)),t?n.author=t:a.themeConfig.author&&(n.author=a.themeConfig.author)}),n.mixin(Es)},{},({Vue:n})=>{n.mixin({computed:{$dataBlock(){return this.$options.__data__block__}}})},{},{},({router:n})=>{"undefined"!=typeof window&&(window._hmt=window._hmt||[],function(){var n=document.createElement("script");n.src="https://hm.baidu.com/hm.js?769c2781bafe36adb3f3fcf97f2d02bd";var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(n,e)}(),n.afterEach((function(n){_hmt.push(["_trackPageview",n.fullPath])})))},({Vue:n})=>{const{ignoredElements:e}=n.config;e.every(n=>"/^mjx-/"!==n.toString())&&e.push(/^mjx-/)}],js=[];class qs extends class{constructor(){this.store=new Qt({data:{state:{}}})}$get(n){return this.store.state[n]}$set(n,e){Qt.set(this.store.state,n,e)}$emit(...n){this.store.$emit(...n)}$on(...n){this.store.$on(...n)}}{}Object.assign(qs.prototype,{getPageAsyncComponent:co,getLayoutAsyncComponent:oo,getAsyncComponent:so,getVueComponent:po});var Ps={install(n){const e=new qs;n.$vuepress=e,n.prototype.$vuepress=e}};function zs(n,e){const t=e.toLowerCase();return n.options.routes.some(n=>n.path.toLowerCase()===t)}var Bs={props:{pageKey:String,slotKey:{type:String,default:"default"}},render(n){const e=this.pageKey||this.$parent.$page.key;return ho("pageKey",e),Qt.component(e)||Qt.component(e,co(e)),Qt.component(e)?n(e):n("")}},Ts={functional:!0,props:{slotKey:String,required:!0},render:(n,{props:e,slots:t})=>n("div",{class:["content__"+e.slotKey]},t()[e.slotKey])},Is={computed:{openInNewWindowTitle(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Ds=(t(281),t(282),Object(ys.a)(Is,(function(){var n=this._self._c;return n("span",[n("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[n("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),n("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),n("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports),Hs={functional:!0,render(n,{parent:e,children:t}){if(e._isMounted)return t;e.$once("hook:mounted",()=>{e.$forceUpdate()})}};Qt.config.productionTip=!1,Qt.use(Nc),Qt.use(Ps),Qt.mixin(function(n,e,t=Qt){!function(n){n.locales&&Object.keys(n.locales).forEach(e=>{n.locales[e].path=e});Object.freeze(n)}(e),t.$vuepress.$set("siteData",e);const a=new(n(t.$vuepress.$get("siteData"))),r=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(a)),i={};return Object.keys(r).reduce((n,e)=>(e.startsWith("$")&&(n[e]=r[e].get),n),i),{computed:i}}(n=>class{setPage(n){this.__page=n}get $site(){return n}get $themeConfig(){return this.$site.themeConfig}get $frontmatter(){return this.$page.frontmatter}get $localeConfig(){const{locales:n={}}=this.$site;let e,t;for(const a in n)"/"===a?t=n[a]:0===this.$page.path.indexOf(a)&&(e=n[a]);return e||t||{}}get $siteTitle(){return this.$localeConfig.title||this.$site.title||""}get $canonicalUrl(){const{canonicalUrl:n}=this.$page.frontmatter;return"string"==typeof n&&n}get $title(){const n=this.$page,{metaTitle:e}=this.$page.frontmatter;if("string"==typeof e)return e;const t=this.$siteTitle,a=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?a?a+" | "+t:t:a||"VuePress"}get $description(){const n=function(n){if(n){const e=n.filter(n=>"description"===n.name)[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}get $lang(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}get $localePath(){return this.$localeConfig.path||"/"}get $themeLocaleConfig(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}get $page(){return this.__page?this.__page:function(n,e){for(let t=0;t<n.length;t++){const a=n[t];if(a.path.toLowerCase()===e.toLowerCase())return a}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}},_s)),Qt.component("Content",Bs),Qt.component("ContentSlotsDistributor",Ts),Qt.component("OutboundLink",Ds),Qt.component("ClientOnly",Hs),Qt.component("Layout",oo("Layout")),Qt.component("NotFound",oo("NotFound")),Qt.prototype.$withBase=function(n){const e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.9",hash:"d961e43"},async function(n){const e="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:_s.routerBase||_s.base,t=new Nc({base:e,mode:"history",fallback:!1,routes:ks,scrollBehavior:(n,e,t)=>t||(n.hash?!Qt.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})});!function(n){n.beforeEach((e,t,a)=>{if(zs(n,e.path))a();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){const t=e.path.replace(/\/$/,"")+".html";zs(n,t)?a(t):a()}else a();else{const t=e.path+"/",r=e.path+".html";zs(n,r)?a(r):zs(n,t)?a(t):a()}})}(t);const a={};try{await Promise.all(Ss.filter(n=>"function"==typeof n).map(e=>e({Vue:Qt,options:a,router:t,siteData:_s,isServer:n})))}catch(n){console.error(n)}return{app:new Qt(Object.assign(a,{router:t,render:n=>n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},js.map(e=>n(e)))])})),router:t}}(!1).then(({app:n,router:e})=>{e.onReady(()=>{n.$mount("#app")})})}]);